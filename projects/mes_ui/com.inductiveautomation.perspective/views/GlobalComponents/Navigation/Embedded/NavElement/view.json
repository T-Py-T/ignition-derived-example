{
  "custom": {},
  "params": {
    "icon": {
      "elements": [
        {
          "d": "M4,11.25H1.25a.63.63,0,0,1-.62-.73C1,8.12,2.93.63,11.13.63s10.09,7.49,10.48,9.89a.62.62,0,0,1-.62.73H18.17",
          "fill": {
            "paint": "none"
          },
          "name": "path",
          "stroke": {
            "linecap": "round",
            "miterlimit": "10",
            "paint": "#B0B0B0",
            "width": "1.25px"
          },
          "style": {},
          "type": "path"
        },
        {
          "fill": {
            "paint": "none"
          },
          "name": "line",
          "stroke": {
            "linecap": "round",
            "miterlimit": "10",
            "paint": "#B0B0B0",
            "width": "1.25px"
          },
          "style": {},
          "type": "line",
          "x1": "4.04",
          "x2": "6.39",
          "y1": "3.39",
          "y2": "5.75"
        },
        {
          "fill": {
            "paint": "none"
          },
          "name": "line",
          "stroke": {
            "linecap": "round",
            "miterlimit": "10",
            "paint": "#B0B0B0",
            "width": "1.25px"
          },
          "style": {},
          "type": "line",
          "x1": "11.13",
          "x2": "11.13",
          "y1": "0.63",
          "y2": "3.82"
        },
        {
          "fill": {
            "paint": "none"
          },
          "name": "line",
          "stroke": {
            "linecap": "round",
            "miterlimit": "10",
            "paint": "#B0B0B0",
            "width": "1.25px"
          },
          "style": {},
          "type": "line",
          "x1": "18.22",
          "x2": "15.87",
          "y1": "3.39",
          "y2": "5.74"
        },
        {
          "fill": {
            "paint": "none"
          },
          "name": "line",
          "stroke": {
            "linecap": "round",
            "miterlimit": "10",
            "paint": "#B0B0B0",
            "width": "1.25px"
          },
          "style": {},
          "type": "line",
          "x1": "7.78",
          "x2": "9.86",
          "y1": "8.7",
          "y2": "9.87"
        },
        {
          "cx": "11.06",
          "cy": "10.84",
          "fill": {
            "paint": "none"
          },
          "name": "circle",
          "r": "1.28",
          "stroke": {
            "linecap": "round",
            "miterlimit": "10",
            "paint": "#B0B0B0",
            "width": "1.25px"
          },
          "style": {},
          "type": "circle"
        }
      ],
      "viewBox": "0 0 22 11.5"
    },
    "id": "value",
    "isOpened": 0,
    "labelText": "Label",
    "materialIcon": "",
    "navId": "value",
    "pageName": "",
    "pageUrl": "",
    "parentId": "value",
    "selected": 0,
    "showDropArrow": false,
    "treePath": "value",
    "viewParams": {},
    "viewPath": ""
  },
  "propConfig": {
    "params.icon": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.icon.elements": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.icon.viewBox": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.id": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.isOpened": {
      "paramDirection": "inout",
      "persistent": true
    },
    "params.labelText": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.materialIcon": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.navId": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.pageName": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.pageUrl": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.parentId": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.selected": {
      "paramDirection": "inout",
      "persistent": true
    },
    "params.showDropArrow": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.treePath": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.viewParams": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.viewPath": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 50,
      "width": 200
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "Icon_0"
        },
        "position": {
          "basis": "1em",
          "grow": 1
        },
        "propConfig": {
          "position.display": {
            "binding": {
              "config": {
                "path": "view.params.materialIcon"
              },
              "enabled": false,
              "transforms": [
                {
                  "expression": "{value} !\u003d \u0027\u0027",
                  "type": "expression"
                }
              ],
              "type": "property"
            }
          },
          "props.path": {
            "binding": {
              "config": {
                "path": "view.params.materialIcon"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "color": "white"
        },
        "type": "ia.display.icon"
      },
      {
        "custom": {
          "color": "#B0B0B0"
        },
        "meta": {
          "name": "Dashboard"
        },
        "position": {
          "basis": "2em",
          "display": false,
          "grow": 1,
          "shrink": 0
        },
        "propConfig": {
          "position.display": {
            "binding": {
              "config": {
                "path": "view.params.materialIcon"
              },
              "enabled": false,
              "transforms": [
                {
                  "expression": "{value} \u003d \u0027\u0027",
                  "type": "expression"
                }
              ],
              "type": "property"
            }
          },
          "props.elements": {
            "binding": {
              "config": {
                "path": "view.params.icon.elements"
              },
              "overlayOptOut": true,
              "type": "property"
            }
          },
          "props.viewBox": {
            "binding": {
              "config": {
                "path": "view.params.icon.viewBox"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "key": "value",
          "style": {
            "classes": "Desktop/Navigation/NavIcon"
          }
        },
        "type": "ia.shapes.svg"
      },
      {
        "meta": {
          "name": "Label"
        },
        "position": {
          "basis": "7em",
          "grow": 1,
          "shrink": 0
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "path": "view.params.labelText"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "style": {
            "classes": "Desktop/Navigation/NavLabel"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Icon"
        },
        "position": {
          "basis": "1em",
          "grow": 1,
          "shrink": 0
        },
        "propConfig": {
          "meta.visible": {
            "binding": {
              "config": {
                "path": "view.params.showDropArrow"
              },
              "type": "property"
            }
          },
          "props.color": {
            "binding": {
              "config": {
                "path": "view.params.showDropArrow"
              },
              "transforms": [
                {
                  "fallback": "#00000000",
                  "inputType": "scalar",
                  "mappings": [
                    {
                      "input": true,
                      "output": "#B0B0B0"
                    }
                  ],
                  "outputType": "scalar",
                  "type": "map"
                }
              ],
              "type": "property"
            }
          },
          "props.path": {
            "binding": {
              "config": {
                "path": "view.params.isOpened"
              },
              "transforms": [
                {
                  "expression": "if({value}, \"material/expand_less\",\"material/expand_more\")",
                  "type": "expression"
                }
              ],
              "type": "property"
            }
          }
        },
        "type": "ia.display.icon"
      }
    ],
    "events": {
      "dom": {
        "onClick": {
          "config": {
            "script": "\tself.view.params.isOpened \u003d not self.view.params.isOpened\n\tpayload \u003d {}\n\tpayload[\u0027id\u0027] \u003d self.view.params.id\n\tpayload[\u0027parentId\u0027] \u003d self.view.params.parentId\n\t#id \u003c0 means non root element\n\tif self.view.params.id \u003e 0:\n\t\tsystem.perspective.sendMessage(\u0027closeElements\u0027,payload)\n\t\n\tviewPath \u003d self.view.params.viewPath\n\tpageUrl \u003d self.view.params.pageUrl\n\tpageName \u003d self.view.params.pageName\n\tif pageUrl is not None and len(pageUrl) \u003e 0: \n#\t\tapp.perspective.navigate(page\u003dpageUrl,name\u003dpageName)\n\t\tself.session.custom.section \u003d self.view.params.labelText\n\t\tsystem.perspective.print(pageName)\n\t\tsystem.perspective.navigate(pageUrl, params\u003d{\"pageName\": pageName})\n\t\t\n\t\t\t\n#\t\tif self.view.params.labelText is not None and self.view.params.labelText !\u003d \u0027\u0027:\n#\t\t\tself.session.custom.section \u003d self.view.params.labelText\n#\t\telse:\n#\t\t\tself.session.custom.section \u003d \u0027Section\u0027\n#\t\t\n#\t\tif self.view.params.treePath is not None and self.view.params.treePath !\u003d \u0027\u0027:\n#\t\t\tself.session.custom.treePath \u003d self.view.params.treePath\n#\t\telse:\n#\t\t\tself.session.custom.treePath \u003d \u0027treePath\u0027"
          },
          "scope": "G",
          "type": "script"
        }
      }
    },
    "meta": {
      "name": "root"
    },
    "propConfig": {
      "props.style.classes": {
        "binding": {
          "config": {
            "path": "view.params.selected"
          },
          "transforms": [
            {
              "expression": "if({value},\r\n\u0027Desktop/Navigation/SideNavElementSelected\u0027,\r\n\u0027\u0027)",
              "type": "expression"
            }
          ],
          "type": "property"
        }
      }
    },
    "props": {
      "style": {
        "overflow": "hidden"
      }
    },
    "scripts": {
      "customMethods": [],
      "extensionFunctions": null,
      "messageHandlers": [
        {
          "messageType": "closeElements",
          "pageScope": true,
          "script": "\t# implement your handler here\n\t\n\t#root click\n\tif payload[\u0027parentId\u0027] \u003d\u003d 0:\n\t\tif self.view.params.id !\u003d  payload[\u0027id\u0027]:\n\t\t\tself.view.params.isOpened \u003d 0\n\telif payload[\u0027id\u0027] is None:\n\t\tpass\n\t#child click \n\telif (self.view.params.id !\u003d  payload[\u0027id\u0027] or self.view.params.parentId !\u003d payload[\u0027parentId\u0027]) and self.view.params.parentId !\u003d 0:\n#\t\tlog \u003d system.util.getLogger(\u0027navElement/closeElements\u0027)\n#\t\tlog.info(\u0027closing\u0027+ str(self.view.params.labelText))\n\t\tself.view.params.isOpened \u003d 0",
          "sessionScope": false,
          "viewScope": false
        },
        {
          "messageType": "closeAll",
          "pageScope": true,
          "script": "\t# implement your handler here\n\tself.view.params.isOpened \u003d 0\n\tself.view.params.selected \u003d 0",
          "sessionScope": false,
          "viewScope": false
        },
        {
          "messageType": "openNavId_delete",
          "pageScope": true,
          "script": "\t# implement your handler here\n\tif self.view.params.navId \u003d\u003d payload[\u0027navId\u0027]:\n\t\tself.view.params.isOpened \u003d 1\n\t\tself.view.params.selected \u003d 1",
          "sessionScope": false,
          "viewScope": false
        }
      ]
    },
    "type": "ia.container.flex"
  }
}