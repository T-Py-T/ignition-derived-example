{
  "custom": {
    "AreaID": "value",
    "AreaName": null
  },
  "params": {
    "AreaID": "value",
    "EqPath": "value",
    "EqType": "site",
    "HideTitle": false,
    "Icon": "",
    "IconDisplay": true,
    "IsNavigate": false,
    "Params": {
      "EqPath": "",
      "SiteID": "value",
      "State": "",
      "TagPath": "value",
      "TagProvider": "value"
    },
    "Path": "",
    "Provider": "value",
    "SizeBasis": "value",
    "TagPath": "value",
    "Title": "",
    "Type": "",
    "index": "value",
    "useDefaultHeight": false,
    "useDefaultWidth": false
  },
  "propConfig": {
    "custom.AreaID": {
      "binding": {
        "config": {
          "path": "view.params.AreaID"
        },
        "type": "property"
      },
      "persistent": true
    },
    "custom.AreaName": {
      "binding": {
        "config": {
          "path": "view.params.Params.EqPath"
        },
        "transforms": [
          {
            "code": "\ts \u003d value\n\tparts \u003d s.split(\u0027/\u0027)\n\n\treturn parts[-2]",
            "type": "script"
          }
        ],
        "type": "property"
      },
      "persistent": true
    },
    "params.AreaID": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.EqPath": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.EqType": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.HideTitle": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.Icon": {
      "binding": {
        "config": {
          "path": "view.params.Params.State"
        },
        "transforms": [
          {
            "fallback": "",
            "inputType": "scalar",
            "mappings": [
              {
                "input": "warning",
                "output": "material/warning"
              },
              {
                "input": "fail",
                "output": "material/error"
              },
              {
                "input": "success",
                "output": "material/check"
              }
            ],
            "outputType": "scalar",
            "type": "map"
          }
        ],
        "type": "property"
      },
      "paramDirection": "inout",
      "persistent": true
    },
    "params.IconDisplay": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.IsNavigate": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.Params": {
      "paramDirection": "inout",
      "persistent": true
    },
    "params.Path": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.Provider": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.SizeBasis": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.TagPath": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.Title": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.Type": {
      "binding": {
        "config": {
          "path": "view.params.Params.State"
        },
        "type": "property"
      },
      "paramDirection": "inout",
      "persistent": true
    },
    "params.index": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.useDefaultHeight": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.useDefaultWidth": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 486,
      "width": 570
    }
  },
  "root": {
    "children": [
      {
        "children": [
          {
            "meta": {
              "name": "Label"
            },
            "position": {
              "grow": 1,
              "shrink": 0
            },
            "propConfig": {
              "props.style.classes": {
                "binding": {
                  "config": {
                    "path": "page.props.dimensions"
                  },
                  "enabled": false,
                  "transforms": [
                    {
                      "code": "\tLARGE_SCREEN \u003d 1900\n\twidth \u003d value.screen.width\n\tif width \u003e LARGE_SCREEN:\n\t\treturn \"OverheadScreens/Text\"\n\telse:\n\t\treturn \"Text/Heading\"",
                      "type": "script"
                    }
                  ],
                  "type": "property"
                }
              },
              "props.text": {
                "binding": {
                  "config": {
                    "path": "view.params.Title"
                  },
                  "type": "property"
                }
              }
            },
            "props": {
              "alignVertical": "top",
              "style": {
                "overflow": "hidden"
              },
              "textStyle": {
                "classes": "Cards/Common/CardTitle",
                "overflow": "hidden"
              }
            },
            "type": "ia.display.label"
          },
          {
            "meta": {
              "name": "WarningIcon"
            },
            "position": {
              "basis": "20px"
            },
            "propConfig": {
              "position.display": {
                "binding": {
                  "config": {
                    "path": "view.params.IconDisplay"
                  },
                  "type": "property"
                }
              },
              "props.params.Icon": {
                "binding": {
                  "config": {
                    "path": "view.params.Icon"
                  },
                  "type": "property"
                }
              },
              "props.params.Type": {
                "binding": {
                  "config": {
                    "path": "view.params.Type"
                  },
                  "type": "property"
                }
              }
            },
            "props": {
              "path": "GlobalComponents/Icons/IconMain",
              "style": {
                "overflow": "hidden"
              },
              "useDefaultViewHeight": true
            },
            "type": "ia.display.view"
          }
        ],
        "meta": {
          "name": "Title"
        },
        "propConfig": {
          "position.display": {
            "binding": {
              "config": {
                "path": "view.params.HideTitle"
              },
              "transforms": [
                {
                  "fallback": true,
                  "inputType": "scalar",
                  "mappings": [
                    {
                      "input": true,
                      "output": false
                    },
                    {
                      "input": false,
                      "output": true
                    }
                  ],
                  "outputType": "scalar",
                  "type": "map"
                }
              ],
              "type": "property"
            }
          }
        },
        "props": {
          "alignContent": "flex-start",
          "alignItems": "flex-start",
          "style": {
            "classes": "Global/MarginAllLeft Global/MarginAllRight Global/MarginAllTop ",
            "overflow": "hidden"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "meta": {
              "name": "View"
            },
            "position": {
              "grow": 1
            },
            "propConfig": {
              "props.params": {
                "binding": {
                  "config": {
                    "bidirectional": true,
                    "path": "view.params.Params"
                  },
                  "type": "property"
                }
              },
              "props.path": {
                "binding": {
                  "config": {
                    "path": "view.params.Path"
                  },
                  "type": "property"
                }
              },
              "props.useDefaultViewHeight": {
                "binding": {
                  "config": {
                    "path": "view.params.useDefaultHeight"
                  },
                  "type": "property"
                }
              },
              "props.useDefaultViewWidth": {
                "binding": {
                  "config": {
                    "path": "view.params.useDefaultWidth"
                  },
                  "type": "property"
                }
              }
            },
            "props": {
              "loading": {
                "order": "with-parent"
              }
            },
            "type": "ia.display.view"
          }
        ],
        "meta": {
          "name": "Body"
        },
        "position": {
          "grow": 1
        },
        "props": {
          "style": {
            "classes": "Global/MarginAllBottom Global/MarginAllLeft Global/MarginAllRight"
          }
        },
        "type": "ia.container.flex"
      }
    ],
    "events": {
      "dom": {
        "onClick": {
          "config": {
            "script": "\ttry:\n\t#\tsystem.perspective.sendMessage(\u0027ROOTCLICK\u0027, payload\u003d{\u0027index\u0027: self.view.params.index}, scope\u003d\u0027page\u0027)\n\t\tif self.view.params.IsNavigate and self.view.params.EqType \u003d\u003d \u0027area\u0027:\n\t\t\tparams \u003d {\u0027EqPath\u0027: self.view.params.Params.EqPath, \u0027AreaID\u0027: self.view.custom.AreaID}\n#\t\t\tsystem.perspective.sendMessage(\u0027navigate_tolines\u0027, payload\u003d{\u0027EqPath\u0027: self.view.params.Params.EqPath})\n\t\t\tsystem.perspective.navigate(view\u003d\u0027App/OEE/Management/Overviews/FullView\u0027, params\u003dparams)\n\t\telif self.view.params.IsNavigate and self.view.params.EqType \u003d\u003d \u0027site\u0027:\n\t\t\t#system.perspective.sendMessage(\u0027navigate_tolines\u0027, payload\u003d{\u0027EqPath\u0027: self.view.params.Params.EqPath})\n\t\t\tsystem.perspective.navigate(view\u003d\u0027App/OEE/Management/Overviews/SiteAreaView\u0027, params\u003d{\u0027SelectedSiteID\u0027: self.view.params.Params.SiteID, \u0027IsNavigate\u0027: True})\n\t\t\tsystem.perspective.sendMessage(\u0027changedSite\u0027, payload\u003d{\u0027SiteID\u0027: self.view.params.Params.SiteID})\n\t\telif self.view.params.IsNavigate and self.view.params.EqType \u003d\u003d \u0027line\u0027:\n\t\t\tself.session.custom.EqPath \u003d self.view.params.Params.EqPath\n\t\t\tsystem.perspective.print(self.view.params.Params.EqPath)\n\t\t\tsystem.perspective.sendMessage(\u0027navigate_operatordb\u0027, payload\u003d{\u0027EqPath\u0027: self.view.params.Params.EqPath})\n\t\t\tsystem.perspective.navigate(page\u003d\u0027/operations/operator_dashboard\u0027, params\u003d{})\n\t\t\timport time\n\t\t\ttime.sleep(4)\n\t\t\tsystem.perspective.sendMessage(\u0027changedLine\u0027)\n\t\t\tsystem.perspective.sendMessage(\u0027refreshDashboardEqPath\u0027)\n\t\telse:\n\t\t\tpass\n\texcept Exception as e:\n\t\traise e"
          },
          "scope": "G",
          "type": "script"
        }
      }
    },
    "meta": {
      "name": "root"
    },
    "position": {
      "height": "auto"
    },
    "propConfig": {
      "props.style.boxShadow": {
        "binding": {
          "config": {
            "path": "session.props.theme"
          },
          "transforms": [
            {
              "fallback": "inset 0 0 2px white",
              "inputType": "scalar",
              "mappings": [
                {
                  "input": "custom-light",
                  "output": "inset 0 0 2px black"
                },
                {
                  "input": "custom-dark",
                  "output": "inset 0 0 2px white"
                }
              ],
              "outputType": "scalar",
              "type": "map"
            }
          ],
          "type": "property"
        }
      },
      "props.style.classes": {
        "binding": {
          "config": {
            "path": "view.params.Type"
          },
          "transforms": [
            {
              "fallback": "Cards/Root",
              "inputType": "scalar",
              "mappings": [
                {
                  "input": "success",
                  "output": "Cards/RootSuccess"
                },
                {
                  "input": "fail",
                  "output": "Cards/RootFailure"
                },
                {
                  "input": "warning",
                  "output": "Cards/RootWarning"
                }
              ],
              "outputType": "scalar",
              "type": "map"
            }
          ],
          "type": "property"
        }
      }
    },
    "props": {
      "direction": "column",
      "style": {}
    },
    "type": "ia.container.flex"
  }
}