{
  "custom": {
    "AreaDropdown": [
      {
        "label": "All",
        "value": "all"
      },
      {
        "label": "Mixing",
        "value": 138
      },
      {
        "label": "Baking",
        "value": 139
      },
      {
        "label": "Sorting",
        "value": 140
      },
      {
        "label": "Boxing",
        "value": 141
      }
    ],
    "Data": {
      "$": [
        "ds",
        192,
        1696529699028
      ],
      "$columns": [
        {
          "data": [
            73,
            74,
            75,
            78,
            79,
            80,
            81
          ],
          "name": "ID",
          "type": "Integer"
        },
        {
          "data": [
            2619,
            2620,
            2621,
            2622,
            2619,
            2620,
            2623
          ],
          "name": "LineID",
          "type": "Integer"
        },
        {
          "data": [
            "Mixer1",
            "Oven1",
            "Sorter1",
            "Boxer1",
            "Mixer1",
            "Oven1",
            "Mixer2"
          ],
          "name": "LineName",
          "type": "String"
        },
        {
          "data": [
            82,
            82,
            82,
            83,
            84,
            85,
            86
          ],
          "name": "WorkOrderID",
          "type": "Integer"
        },
        {
          "data": [
            "SuperLargeOrder",
            "SuperLargeOrder",
            "SuperLargeOrder",
            "BoxerWO1",
            "TheMixerBigOne",
            "TheOvenBaker",
            "LastLine"
          ],
          "name": "WorkOrder",
          "type": "String"
        },
        {
          "data": [
            1696046400000,
            1696046400000,
            1696046400000,
            1696651200000,
            1698724800000,
            1698724800000,
            1698724800000
          ],
          "name": "RequiredEndDate",
          "type": "Date"
        },
        {
          "data": [
            2,
            2,
            2,
            1,
            13,
            13,
            22
          ],
          "name": "ProductCodeID",
          "type": "Integer"
        },
        {
          "data": [
            1695877497000,
            1696134819000,
            1696394188000,
            1695912053646,
            1695993411252,
            1695993458852,
            1696424589203
          ],
          "name": "ScheduleStartDateTime",
          "type": "Date"
        },
        {
          "data": [
            1696136697000,
            1696394019000,
            1696653388000,
            1696171253646,
            1696252611251,
            1696252658851,
            1696683789202
          ],
          "name": "ScheduleEndDateTime",
          "type": "Date"
        },
        {
          "data": [
            1500000,
            1000000,
            1000000,
            850000,
            1250000,
            1000000,
            825000
          ],
          "name": "Quantity",
          "type": "Integer"
        },
        {
          "data": [
            "tturner",
            "tturner",
            "tturner",
            "ncasey",
            "ncasey",
            "ncasey",
            "ncasey"
          ],
          "name": "EnteredBy",
          "type": "String"
        },
        {
          "data": [
            1695860629600,
            1695860747620,
            1695860767480,
            1695912059800,
            1695993418240,
            1695993466116,
            1696424603030
          ],
          "name": "DateCreated",
          "type": "Date"
        },
        {
          "data": [
            "READ THESE NOTES",
            "MORE NOTES",
            "",
            "Test",
            "Test",
            "Test",
            "Testing"
          ],
          "name": "Note",
          "type": "String"
        },
        {
          "data": [
            true,
            true,
            true,
            true,
            true,
            true,
            true
          ],
          "name": "IsEnabled",
          "type": "Boolean"
        }
      ]
    },
    "EndTime": {
      "$": [
        "ts",
        192,
        1696529698081
      ],
      "$ts": 1697825698081
    },
    "FilterSelection": "line",
    "FilteredSelection": null,
    "GroupBy": "line",
    "LineDropdown": [
      {
        "label": "All",
        "value": "all"
      },
      {
        "label": "Mixer1",
        "value": 2619
      },
      {
        "label": "Oven1",
        "value": 2620
      },
      {
        "label": "Sorter1",
        "value": 2621
      },
      {
        "label": "Boxer1",
        "value": 2622
      },
      {
        "label": "Mixer2",
        "value": 2623
      }
    ],
    "PCDropdown": {
      "$": [
        "ds",
        192,
        1696529698124
      ],
      "$columns": [
        {
          "data": [
            0,
            1,
            2,
            3,
            10,
            11,
            12,
            13,
            16,
            19,
            20,
            21,
            22
          ],
          "name": "value",
          "type": "Integer"
        },
        {
          "data": [
            "All",
            "LowPPM",
            "HighPPM",
            "PC-41093",
            "PC-41093_Alt",
            "PC-65053",
            "PC-3032_QATest",
            "ObviousFake",
            "NewPC",
            "10073",
            "ProductCode1",
            "ProductCode2",
            "ProductCode3"
          ],
          "name": "label",
          "type": "String"
        }
      ]
    },
    "ScheduleQueryDS": {
      "$": [
        "ds",
        192,
        1685718940171
      ],
      "$columns": [
        {
          "data": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8
          ],
          "name": "ID",
          "type": "Integer"
        },
        {
          "data": [
            11,
            12,
            20,
            20,
            20,
            1,
            3,
            11
          ],
          "name": "LineID",
          "type": "Integer"
        },
        {
          "data": [
            "201",
            "202",
            "LABSIM",
            "LABSIM",
            "LABSIM",
            "SFN1",
            "SFN3",
            "201"
          ],
          "name": "LineName",
          "type": "String"
        },
        {
          "data": [
            1,
            2,
            3,
            14,
            5,
            31,
            15,
            12
          ],
          "name": "WorkOrderID",
          "type": "Integer"
        },
        {
          "data": [
            "41562639",
            "41562640",
            "41562641",
            "665",
            "test1234",
            "1234",
            "7778",
            "25556"
          ],
          "name": "WOName",
          "type": "String"
        },
        {
          "data": [
            1678495660927,
            0,
            0,
            1684501200000,
            1685592000000,
            1684555200000,
            1684641600000,
            1685505600000
          ],
          "name": "ScheduleStartDateTime",
          "type": "Date"
        },
        {
          "data": [
            1678495398657,
            0,
            0,
            1684587600000,
            1685678400000,
            1684728000000,
            1684814400000,
            1685764800000
          ],
          "name": "ScheduleEndDateTime",
          "type": "Date"
        },
        {
          "data": [
            30000,
            420000,
            300000,
            100,
            555,
            654,
            123,
            255
          ],
          "name": "Quantity",
          "type": "Integer"
        },
        {
          "data": [
            "\u0027tturner\u0027",
            "bduran",
            "ncasey",
            "bduran",
            "bduran",
            "bduran",
            "bduran",
            "tturner"
          ],
          "name": "EnteredBy",
          "type": "String"
        },
        {
          "data": [
            1644253200000,
            1644253200000,
            1682956800000,
            1684525702400,
            1684529856143,
            1684534298090,
            1684534486750,
            1685537410873
          ],
          "name": "DateCreated",
          "type": "Date"
        }
      ]
    },
    "SelectedAreaID": null,
    "SelectedLineID": null,
    "SelectedPC": null,
    "StartTime": {
      "$": [
        "ts",
        192,
        1696529698081
      ],
      "$ts": 1695233698080
    }
  },
  "params": {},
  "permissions": {
    "securityLevels": [
      {
        "children": [
          {
            "children": [
              {
                "children": [],
                "name": "Administrator"
              },
              {
                "children": [],
                "name": "Manager"
              }
            ],
            "name": "Roles"
          }
        ],
        "name": "Authenticated"
      }
    ],
    "type": "AnyOf"
  },
  "propConfig": {
    "custom.AreaDropdown": {
      "binding": {
        "config": {
          "path": "session.custom.AreaDropdown"
        },
        "type": "property"
      },
      "persistent": true
    },
    "custom.Data": {
      "binding": {
        "config": {
          "parameters": {
            "areaID": "{view.custom.SelectedAreaID}",
            "endDateTime": "{/root/Header/timeSelector.props.params.timeEnd}",
            "lineID": "{view.custom.SelectedLineID}",
            "productCodeID": "{view.custom.SelectedPC}",
            "startDateTime": "{/root/Header/timeSelector.props.params.timeStart}"
          },
          "queryPath": "app/Schedule/getAllEquipmentSchedule"
        },
        "type": "query"
      },
      "persistent": true
    },
    "custom.EndTime": {
      "binding": {
        "config": {
          "expression": "addDays(now(0), 15)"
        },
        "type": "expr"
      },
      "persistent": true
    },
    "custom.FilterSelection": {
      "binding": {
        "config": {
          "path": "/root/Header/GroupContainer/FilterSelection.props.value"
        },
        "type": "property"
      },
      "persistent": true
    },
    "custom.FilteredSelection": {
      "binding": {
        "config": {
          "path": "/root/Header/LineContainer/SelectFilter.props.value"
        },
        "type": "property"
      },
      "persistent": true
    },
    "custom.GroupBy": {
      "binding": {
        "config": {
          "path": "/root/Header/GroupContainer/FilterSelection.props.value"
        },
        "transforms": [
          {
            "expression": "if({value} \u003d \u0027all\u0027, \u0027\u0027, {value})",
            "type": "expression"
          }
        ],
        "type": "property"
      },
      "persistent": true
    },
    "custom.LineDropdown": {
      "binding": {
        "config": {
          "path": "session.custom.LineDropdown"
        },
        "type": "property"
      },
      "persistent": true
    },
    "custom.PCDropdown": {
      "binding": {
        "config": {
          "queryPath": "app/Schedule/getAllProductDropdowns",
          "returnFormat": "dataset"
        },
        "transforms": [
          {
            "code": "\tnewRow \u003d [0, \u0027All\u0027]\n\treturn system.dataset.addRow(value, 0, newRow)",
            "type": "script"
          }
        ],
        "type": "query"
      },
      "persistent": true
    },
    "custom.ScheduleQueryDS": {
      "persistent": true
    },
    "custom.SelectedAreaID": {
      "binding": {
        "config": {
          "path": "view.custom.FilterSelection"
        },
        "transforms": [
          {
            "expression": "if({value} \u003d \u0027area\u0027, \r\n\tif({view.custom.FilteredSelection} \u003d \u0027all\u0027, null, {view.custom.FilteredSelection}), \r\n\tnull\r\n)",
            "type": "expression"
          }
        ],
        "type": "property"
      },
      "persistent": true
    },
    "custom.SelectedLineID": {
      "binding": {
        "config": {
          "path": "view.custom.FilterSelection"
        },
        "transforms": [
          {
            "expression": "if({value} \u003d \u0027line\u0027, \r\n\tif({view.custom.FilteredSelection} \u003d \u0027all\u0027, null, {view.custom.FilteredSelection}), \r\n\tnull\r\n)",
            "type": "expression"
          }
        ],
        "type": "property"
      },
      "persistent": true
    },
    "custom.SelectedPC": {
      "binding": {
        "config": {
          "path": "/root/Header/ProductCode.props.value"
        },
        "transforms": [
          {
            "expression": "if({value} \u003d 0, None, {value})",
            "type": "expression"
          }
        ],
        "type": "property"
      },
      "persistent": true
    },
    "custom.StartTime": {
      "binding": {
        "config": {
          "expression": "addDays(now(0), -15)"
        },
        "type": "expr"
      },
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 871,
      "width": 1321
    }
  },
  "root": {
    "children": [
      {
        "children": [
          {
            "events": {
              "dom": {
                "onClick": [
                  {
                    "config": {
                      "script": "#\tself.getSibling(\"analysisObject\").props.params.run \u003d False\n#\tself.getSibling(\"analysisObject\").props.params.run \u003d True\n#\tlogger \u003d system.util.getLogger(\u0027LossReport\u0027)\n#\tnow    \u003d app.util.getCurrentDateTime()\n#\tlogger.info(system.date.format(now, \u0027HH:mm:ss.SSS\u0027) + \u0027: Loss Report set to run\u0027)\n#\tstartDate \u003d system.date.format(self.getSibling(\"timeSelector\").props.params.timeStart, \u0027MM/dd/yyyy HH:mm:ss\u0027)\n#\tendDate \u003d system.date.format(self.getSibling(\"timeSelector\").props.params.timeEnd, \u0027MM/dd/yyyy HH:mm:ss\u0027)\n#\tlogger.info(\u0027Loss Report start and end date params: Start (\u0027 + startDate + \u0027), End (\u0027 + endDate + \u0027)\u0027)\n\n\tlogger \u003d system.util.getLogger(\u0027lossReport\u0027)\n\tstartTime \u003d self.getSibling(\"timeSelector\").props.params.timeStart\n\tendTime \u003d self.getSibling(\"timeSelector\").props.params.timeEnd\n\tfilteredSelection \u003d self.parent.getChild(\"GroupContainer/FilterSelection\").props.value\n\tselectFilter \u003d self.parent.getChild(\"LineContainer/SelectFilter\").props.value\n\tselectedLossType \u003d self.getSibling(\"LossDropdown\").props.value\n\t\n\ttry:\n\t\tif filteredSelection \u003d\u003d \u0027area\u0027:\n\t\t\tif selectFilter !\u003d \u0027all\u0027: self.view.custom.SelectedAreaID \u003d selectFilter\n\t\t\telse: self.view.custom.SelectedAreaID \u003d 0\n\t\tif filteredSelection \u003d\u003d \u0027line\u0027:\n\t\t\tif selectFilter !\u003d \u0027all\u0027: self.view.custom.SelectedLineID \u003d selectFilter\n\t\t\telse: self.view.custom.SelectedLineID \u003d 0\n\t\t\t\n\t\tif selectedLossType \u003d\u003d \u0027all\u0027: self.view.custom.SelectedLossType \u003d \u0027\u0027\n\t\telse: self.view.custom.SelectedLossType \u003d selectedLossType\n\t\t\n\t\tself.view.custom.StartTime \u003d startTime\n\t\tself.view.custom.EndTime \u003d endTime\n\texcept Exception as Argument:\n\t\tlogger.warn(str(Argument))"
                    },
                    "enabled": false,
                    "scope": "G",
                    "type": "script"
                  },
                  {
                    "config": {
                      "script": "\tstartTime \u003d self.getSibling(\"timeSelector\").props.params.timeStart\n\tendTime \u003d self.getSibling(\"timeSelector\").props.params.timeEnd\n\tproductCode \u003d self.view.custom.SelectedPC\n\tareaID \u003d self.view.custom.SelectedAreaID\n\tqueryPath \u003d \u0027app/Schedule/getAllEquipmentSchedule\u0027\n\n\tparams \u003d {\n\t\t\u0027startDateTime\u0027: startTime,\n\t\t\u0027endDateTime\u0027: endTime,\n\t\t\u0027areaID\u0027: areaID,\n\t\t\u0027productCodeID\u0027: productCode\n\t}\n\n\ttry:\n\t\tres \u003d system.db.runNamedQuery(queryPath, params\u003dparams)\n\t\tself.view.custom.ScheduleQueryDS \u003d res\n\texcept Exception as e:\n\t\traise e  "
                    },
                    "scope": "G",
                    "type": "script"
                  }
                ]
              }
            },
            "meta": {
              "name": "Run"
            },
            "position": {
              "basis": "100px"
            },
            "props": {
              "params": {
                "BackgroundColor": "value",
                "DisabledPopup": {
                  "message": "",
                  "messageType": "",
                  "payload": {},
                  "title": "Invalid Permissions"
                },
                "Enabled": true,
                "Hover": true,
                "IconPath": "material/save",
                "IsSelectable": false,
                "Label": "Run",
                "Selected": true,
                "Size": "value",
                "Type": "value"
              },
              "path": "GlobalComponents/Buttons/Button",
              "style": {
                "marginBottom": "30px",
                "marginTop": "30px"
              }
            },
            "type": "ia.display.view"
          },
          {
            "meta": {
              "name": "timeSelector"
            },
            "position": {
              "basis": "258px",
              "shrink": 0
            },
            "propConfig": {
              "props.params.timeEnd": {
                "binding": {
                  "config": {
                    "path": "view.custom.EndTime"
                  },
                  "type": "property"
                }
              },
              "props.params.timeStart": {
                "binding": {
                  "config": {
                    "path": "view.custom.StartTime"
                  },
                  "type": "property"
                }
              }
            },
            "props": {
              "params": {
                "enabledQuickRange": true
              },
              "path": "GlobalComponents/Selections/ReportDateRangeSelector"
            },
            "type": "ia.display.view"
          },
          {
            "children": [
              {
                "events": {
                  "component": {
                    "onActionPerformed": {
                      "config": {
                        "script": "\n\tself.parent.parent.getChild(\"LineContainer/SelectFilter\").refreshBinding(\u0027props.options\u0027)"
                      },
                      "enabled": false,
                      "scope": "G",
                      "type": "script"
                    }
                  }
                },
                "meta": {
                  "name": "FilterSelection"
                },
                "position": {
                  "basis": "42px",
                  "grow": 1,
                  "shrink": 0
                },
                "propConfig": {
                  "props.value": {
                    "binding": {
                      "config": {
                        "bidirectional": true,
                        "path": "view.custom.groupBy"
                      },
                      "enabled": false,
                      "overlayOptOut": true,
                      "type": "property"
                    }
                  }
                },
                "props": {
                  "dropdownOptionStyle": {
                    "classes": "TextFields/Dropdown"
                  },
                  "options": [
                    {
                      "label": "All",
                      "value": "all"
                    },
                    {
                      "label": "Line",
                      "value": "line"
                    },
                    {
                      "label": "Area",
                      "value": "area"
                    }
                  ],
                  "placeholder": {
                    "text": "Group by..."
                  },
                  "style": {
                    "classes": "TextFields/Dropdown",
                    "marginBottom": 35,
                    "marginTop": 20
                  },
                  "value": "area"
                },
                "type": "ia.input.dropdown"
              },
              {
                "meta": {
                  "name": "Shift"
                },
                "position": {
                  "basis": "42px",
                  "display": false
                },
                "props": {
                  "dropdownOptionStyle": {
                    "classes": "TextFields/Dropdown"
                  },
                  "options": [
                    {
                      "label": "Line",
                      "value": "equipmentName"
                    },
                    {
                      "label": "Area",
                      "value": "area"
                    },
                    {
                      "label": "Operator",
                      "value": "operator"
                    },
                    {
                      "label": "Shift",
                      "value": "shift"
                    }
                  ],
                  "placeholder": {
                    "text": "Shift"
                  },
                  "style": {
                    "classes": "TextFields/Dropdown"
                  },
                  "value": "Shift"
                },
                "type": "ia.input.dropdown"
              }
            ],
            "meta": {
              "name": "GroupContainer"
            },
            "position": {
              "basis": "250px"
            },
            "props": {
              "direction": "column",
              "justify": "space-around",
              "style": {
                "overflow": "hidden",
                "paddingTop": 1
              }
            },
            "type": "ia.container.flex"
          },
          {
            "children": [
              {
                "meta": {
                  "name": "SelectFilter"
                },
                "position": {
                  "basis": "42px",
                  "grow": 1,
                  "shrink": 0
                },
                "propConfig": {
                  "props.options": {
                    "binding": {
                      "config": {
                        "path": "view.custom.GroupBy"
                      },
                      "transforms": [
                        {
                          "expression": "if({value} \u003d \u0027line\u0027, {view.custom.LineDropdown}, {view.custom.AreaDropdown})",
                          "type": "expression"
                        }
                      ],
                      "type": "property"
                    }
                  },
                  "props.value": {
                    "persistent": false
                  }
                },
                "props": {
                  "dropdownOptionStyle": {
                    "classes": "TextFields/Dropdown"
                  },
                  "placeholder": {
                    "text": "Select"
                  },
                  "style": {
                    "classes": "Global/MarginRight TextFields/Dropdown"
                  }
                },
                "type": "ia.input.dropdown"
              },
              {
                "meta": {
                  "name": "SelectArea"
                },
                "position": {
                  "basis": "42px",
                  "display": false
                },
                "propConfig": {
                  "props.value": {
                    "binding": {
                      "config": {
                        "bidirectional": true,
                        "path": "view.custom.GroupBy"
                      },
                      "overlayOptOut": true,
                      "type": "property"
                    }
                  }
                },
                "props": {
                  "dropdownOptionStyle": {
                    "classes": "TextFields/Dropdown"
                  },
                  "options": [
                    {
                      "label": "Line",
                      "value": "equipmentName"
                    },
                    {
                      "label": "Area",
                      "value": "area"
                    },
                    {
                      "label": "Operator",
                      "value": "operator"
                    },
                    {
                      "label": "Shift",
                      "value": "shift"
                    }
                  ],
                  "placeholder": {
                    "text": "Group by..."
                  },
                  "style": {
                    "classes": "TextFields/Dropdown"
                  }
                },
                "type": "ia.input.dropdown"
              }
            ],
            "meta": {
              "name": "LineContainer"
            },
            "position": {
              "basis": "250px"
            },
            "props": {
              "direction": "column",
              "justify": "space-around",
              "style": {
                "marginBottom": 30,
                "overflow": "hidden",
                "paddingTop": 15
              }
            },
            "type": "ia.container.flex"
          },
          {
            "meta": {
              "name": "Shift"
            },
            "position": {
              "basis": "200px"
            },
            "propConfig": {
              "props.options": {
                "binding": {
                  "config": {
                    "path": "view.custom.filterData.shiftOptions"
                  },
                  "enabled": false,
                  "type": "property"
                }
              },
              "props.value": {
                "binding": {
                  "config": {
                    "bidirectional": true,
                    "path": "view.custom.filters.shiftFilters"
                  },
                  "enabled": false,
                  "overlayOptOut": true,
                  "type": "property"
                }
              }
            },
            "props": {
              "dropdownOptionStyle": {
                "classes": "TextFields/TextArea"
              },
              "multiSelect": true,
              "options": "",
              "placeholder": {
                "text": "Select Shift..."
              },
              "style": {
                "classes": "Global/MarginRight TextFields/TextArea",
                "marginBottom": 35,
                "marginTop": 20
              },
              "value": null
            },
            "type": "ia.input.dropdown"
          },
          {
            "meta": {
              "name": "ProductCode"
            },
            "position": {
              "basis": "250px"
            },
            "propConfig": {
              "props.options": {
                "binding": {
                  "config": {
                    "path": "view.custom.filterData.productCodeOptions"
                  },
                  "enabled": false,
                  "type": "property"
                }
              },
              "props.value": {
                "binding": {
                  "config": {
                    "bidirectional": true,
                    "path": "view.custom.filters.productCodeFilters"
                  },
                  "enabled": false,
                  "overlayOptOut": true,
                  "type": "property"
                }
              }
            },
            "props": {
              "dropdownOptionStyle": {
                "classes": "TextFields/TextArea"
              },
              "multiSelect": true,
              "options": "",
              "placeholder": {
                "text": "Select Product Code..."
              },
              "style": {
                "classes": "TextFields/TextArea",
                "marginBottom": "35px",
                "marginTop": "20px"
              }
            },
            "type": "ia.input.dropdown"
          }
        ],
        "meta": {
          "name": "Header_"
        },
        "position": {
          "display": false,
          "grow": 1,
          "shrink": 0
        },
        "props": {
          "style": {
            "classes": "Global/MarginBottom",
            "overflow": "hidden"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "events": {
              "dom": {
                "onClick": [
                  {
                    "config": {
                      "script": "#\tself.getSibling(\"analysisObject\").props.params.run \u003d False\n#\tself.getSibling(\"analysisObject\").props.params.run \u003d True\n#\tlogger \u003d system.util.getLogger(\u0027LossReport\u0027)\n#\tnow    \u003d app.util.getCurrentDateTime()\n#\tlogger.info(system.date.format(now, \u0027HH:mm:ss.SSS\u0027) + \u0027: Loss Report set to run\u0027)\n#\tstartDate \u003d system.date.format(self.getSibling(\"timeSelector\").props.params.timeStart, \u0027MM/dd/yyyy HH:mm:ss\u0027)\n#\tendDate \u003d system.date.format(self.getSibling(\"timeSelector\").props.params.timeEnd, \u0027MM/dd/yyyy HH:mm:ss\u0027)\n#\tlogger.info(\u0027Loss Report start and end date params: Start (\u0027 + startDate + \u0027), End (\u0027 + endDate + \u0027)\u0027)\n\n\tlogger \u003d system.util.getLogger(\u0027lossReport\u0027)\n\tstartTime \u003d self.getSibling(\"timeSelector\").props.params.timeStart\n\tendTime \u003d self.getSibling(\"timeSelector\").props.params.timeEnd\n\tselectedAreaID \u003d self.view.custom.SelectedAreaID\n\tselectedLineID \u003d self.view.custom.SelectedLineID\n\tselectedLossType \u003d self.view.custom.SelectedLossType\n\tselectedShift \u003d self.view.custom.SelectedShift\n\tselectedProductCode \u003d int(self.view.custom.SelectedPC)\n\tsiteID \u003d self.view.custom.SelectedSiteID\n\tqueryPath \u003d \u0027app/OEE/getReportLinesLossEventDetails\u0027\n\tsummaryPath \u003d \u0027app/OEE/getReportLinesLossSummaryDetails\u0027\n\tif selectedLossType \u003d\u003d \u0027all\u0027: selectedLossType \u003d \u0027\u0027\n\tif selectedProductCode \u003d\u003d 0: selectedProductCode \u003d \u0027\u0027\n#\tshift \u003d  \n\tparams \u003d {\n\t\t\u0027startTime\u0027: startTime,\n\t\t\u0027endTime\u0027: endTime,\n\t\t\u0027areaID\u0027: int(selectedAreaID),\n\t\t\u0027lineID\u0027: int(selectedLineID),\n\t\t\u0027type\u0027: selectedLossType,\n\t\t\u0027siteID\u0027: int(siteID),\n\t\t\u0027shift\u0027: selectedShift,\n\t\t\u0027productCode\u0027: selectedProductCode\n\t}\n\tsystem.perspective.print(params)\n\t\n#\ttry:\n\tresults \u003d system.db.runNamedQuery(queryPath, params)\n\tsystem.perspective.print(results)\n\tsummaryResults \u003d system.db.runNamedQuery(summaryPath, params)\n\tself.view.custom.LineLossEvent \u003d results\n\tself.view.custom.LineLossSummary \u003d summaryResults\n#\texcept Exception as Argument:\n#\t\tsystem.perspective.print(str(Argument))\n#\t"
                    },
                    "enabled": false,
                    "scope": "G",
                    "type": "script"
                  },
                  {
                    "config": {
                      "script": "\tstartTime \u003d self.getSibling(\"timeSelector\").props.params.timeStart\n\tendTime \u003d self.getSibling(\"timeSelector\").props.params.timeEnd\n\tproductCode \u003d self.view.custom.SelectedPC\n\tareaID \u003d self.view.custom.SelectedAreaID\n\tqueryPath \u003d \u0027app/Schedule/getAllEquipmentSchedule\u0027\n\tif areaID !\u003d None: areaID \u003d int(areaID)\n\n\tparams \u003d {\n\t\t\u0027startDateTime\u0027: startTime,\n\t\t\u0027endDateTime\u0027: endTime,\n\t\t\u0027areaID\u0027: areaID,\n\t\t\u0027productCodeID\u0027: productCode\n\t}\n\tsystem.perspective.print(params)\n\n\ttry:\n\t\tres \u003d system.db.runNamedQuery(queryPath, params\u003dparams)\n\t\tjson \u003d gpa.data.datasetToJson(res)\n\t\tsystem.perspective.print(json)\n\t\tself.view.custom.ScheduleQueryDS \u003d res\n\texcept Exception as e:\n\t\tsystem.perspective.print(e)\n\t\traise e  \t"
                    },
                    "enabled": false,
                    "scope": "G",
                    "type": "script"
                  },
                  {
                    "config": {
                      "script": "\tself.view.refreshBinding(\u0027custom.Data\u0027)"
                    },
                    "scope": "G",
                    "type": "script"
                  }
                ]
              }
            },
            "meta": {
              "name": "Run"
            },
            "position": {
              "basis": "100px",
              "display": false
            },
            "props": {
              "params": {
                "BackgroundColor": "value",
                "DisabledPopup": {
                  "message": "Please sign in as quarterback to proceed.",
                  "messageType": "",
                  "payload": {},
                  "title": "Invalid Permissions"
                },
                "Enabled": true,
                "Hover": true,
                "IconPath": "material/save",
                "IsSelectable": false,
                "Label": "Run",
                "Selected": true,
                "Size": "value",
                "Type": "value"
              },
              "path": "GlobalComponents/Buttons/Button",
              "style": {
                "marginBottom": "30px",
                "marginTop": "30px"
              }
            },
            "type": "ia.display.view"
          },
          {
            "meta": {
              "name": "timeSelector"
            },
            "position": {
              "basis": "258px",
              "shrink": 0
            },
            "propConfig": {
              "props.params.timeEnd": {
                "binding": {
                  "config": {
                    "path": "view.custom.EndTime"
                  },
                  "type": "property"
                }
              },
              "props.params.timeStart": {
                "binding": {
                  "config": {
                    "path": "view.custom.StartTime"
                  },
                  "type": "property"
                }
              }
            },
            "props": {
              "params": {
                "enabledQuickRange": true
              },
              "path": "GlobalComponents/Selections/ReportDateRangeSelector"
            },
            "type": "ia.display.view"
          },
          {
            "children": [
              {
                "events": {
                  "component": {
                    "onActionPerformed": {
                      "config": {
                        "script": "\n\tself.parent.parent.getChild(\"LineContainer/SelectFilter\").refreshBinding(\u0027props.options\u0027)"
                      },
                      "enabled": false,
                      "scope": "G",
                      "type": "script"
                    }
                  }
                },
                "meta": {
                  "name": "FilterSelection"
                },
                "position": {
                  "basis": "42px",
                  "grow": 1,
                  "shrink": 0
                },
                "propConfig": {
                  "props.value": {
                    "binding": {
                      "config": {
                        "bidirectional": true,
                        "path": "view.custom.groupBy"
                      },
                      "enabled": false,
                      "overlayOptOut": true,
                      "type": "property"
                    }
                  }
                },
                "props": {
                  "dropdownOptionStyle": {
                    "classes": "TextFields/Dropdown"
                  },
                  "options": [
                    {
                      "label": "All",
                      "value": "all"
                    },
                    {
                      "label": "Line",
                      "value": "line"
                    },
                    {
                      "label": "Area",
                      "value": "area"
                    }
                  ],
                  "placeholder": {
                    "text": "Group by..."
                  },
                  "style": {
                    "classes": "TextFields/Dropdown",
                    "marginBottom": 35,
                    "marginTop": 20
                  },
                  "value": "line"
                },
                "type": "ia.input.dropdown"
              },
              {
                "meta": {
                  "name": "Shift"
                },
                "position": {
                  "basis": "42px",
                  "display": false
                },
                "props": {
                  "dropdownOptionStyle": {
                    "classes": "TextFields/Dropdown"
                  },
                  "options": [
                    {
                      "label": "Line",
                      "value": "equipmentName"
                    },
                    {
                      "label": "Area",
                      "value": "area"
                    },
                    {
                      "label": "Operator",
                      "value": "operator"
                    },
                    {
                      "label": "Shift",
                      "value": "shift"
                    }
                  ],
                  "placeholder": {
                    "text": "Shift"
                  },
                  "style": {
                    "classes": "TextFields/Dropdown"
                  },
                  "value": "Shift"
                },
                "type": "ia.input.dropdown"
              }
            ],
            "meta": {
              "name": "GroupContainer"
            },
            "position": {
              "basis": "250px"
            },
            "props": {
              "direction": "column",
              "justify": "space-around",
              "style": {
                "overflow": "hidden",
                "paddingTop": 1
              }
            },
            "type": "ia.container.flex"
          },
          {
            "children": [
              {
                "meta": {
                  "name": "SelectFilter"
                },
                "position": {
                  "basis": "42px",
                  "grow": 1,
                  "shrink": 0
                },
                "propConfig": {
                  "props.enabled": {
                    "binding": {
                      "config": {
                        "path": "view.custom.FilterSelection"
                      },
                      "transforms": [
                        {
                          "fallback": true,
                          "inputType": "scalar",
                          "mappings": [
                            {
                              "input": "all",
                              "output": false
                            },
                            {
                              "input": "line",
                              "output": true
                            },
                            {
                              "input": "area",
                              "output": true
                            }
                          ],
                          "outputType": "scalar",
                          "type": "map"
                        }
                      ],
                      "type": "property"
                    }
                  },
                  "props.options": {
                    "binding": {
                      "config": {
                        "path": "view.custom.GroupBy"
                      },
                      "transforms": [
                        {
                          "expression": "if({value} \u003d \u0027line\u0027, {view.custom.LineDropdown}, {view.custom.AreaDropdown})",
                          "type": "expression"
                        }
                      ],
                      "type": "property"
                    }
                  },
                  "props.value": {
                    "binding": {
                      "config": {
                        "path": "this.props.enabled"
                      },
                      "transforms": [
                        {
                          "code": "\tif value is False: return \u0027\u0027\n\t",
                          "type": "script"
                        }
                      ],
                      "type": "property"
                    },
                    "persistent": false
                  }
                },
                "props": {
                  "dropdownOptionStyle": {
                    "classes": "TextFields/Dropdown"
                  },
                  "placeholder": {
                    "text": "Select"
                  },
                  "style": {
                    "classes": "Global/MarginRight TextFields/Dropdown"
                  }
                },
                "type": "ia.input.dropdown"
              },
              {
                "meta": {
                  "name": "SelectArea"
                },
                "position": {
                  "basis": "42px",
                  "display": false
                },
                "propConfig": {
                  "props.value": {
                    "binding": {
                      "config": {
                        "bidirectional": true,
                        "path": "view.custom.GroupBy"
                      },
                      "overlayOptOut": true,
                      "type": "property"
                    }
                  }
                },
                "props": {
                  "dropdownOptionStyle": {
                    "classes": "TextFields/Dropdown"
                  },
                  "options": [
                    {
                      "label": "Line",
                      "value": "equipmentName"
                    },
                    {
                      "label": "Area",
                      "value": "area"
                    },
                    {
                      "label": "Operator",
                      "value": "operator"
                    },
                    {
                      "label": "Shift",
                      "value": "shift"
                    }
                  ],
                  "placeholder": {
                    "text": "Group by..."
                  },
                  "style": {
                    "classes": "TextFields/Dropdown"
                  }
                },
                "type": "ia.input.dropdown"
              }
            ],
            "meta": {
              "name": "LineContainer"
            },
            "position": {
              "basis": "250px"
            },
            "props": {
              "direction": "column",
              "justify": "space-around",
              "style": {
                "marginBottom": 30,
                "overflow": "hidden",
                "paddingTop": 15
              }
            },
            "type": "ia.container.flex"
          },
          {
            "meta": {
              "name": "ProductCode"
            },
            "position": {
              "basis": "250px"
            },
            "propConfig": {
              "props.options": {
                "binding": {
                  "config": {
                    "path": "view.custom.PCDropdown"
                  },
                  "type": "property"
                }
              },
              "props.value": {
                "binding": {
                  "config": {
                    "bidirectional": true,
                    "path": "view.custom.filters.productCodeFilters"
                  },
                  "enabled": false,
                  "overlayOptOut": true,
                  "type": "property"
                }
              }
            },
            "props": {
              "dropdownOptionStyle": {
                "classes": "TextFields/TextArea"
              },
              "placeholder": {
                "text": "Select Product Code..."
              },
              "style": {
                "classes": "TextFields/TextArea",
                "marginBottom": "35px",
                "marginTop": "20px"
              },
              "value": 0
            },
            "type": "ia.input.dropdown"
          },
          {
            "events": {
              "dom": {
                "onClick": {
                  "config": {
                    "script": "\tself.view.custom.filters.lineFilters \u003d None\n\tself.view.custom.filters.productCodeFilters \u003d None\n\tself.view.custom.filters.shiftFilters \u003d None\n\tself.view.custom.filters.typeFilters \u003d None\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "ClearAllFilters"
            },
            "position": {
              "basis": "100px",
              "display": false
            },
            "props": {
              "params": {
                "enabled": true,
                "hover": false,
                "label": "Clear Filters",
                "selected": false
              },
              "path": "GlobalComponents/Buttons/Button",
              "style": {
                "paddingBottom": "3ch",
                "paddingLeft": "1ch",
                "paddingRight": "1ch",
                "paddingTop": "3ch"
              }
            },
            "type": "ia.display.view"
          },
          {
            "events": {
              "dom": {
                "onClick": {
                  "config": {
                    "script": "\tself.view.custom.data \u003d []\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "ClearData"
            },
            "position": {
              "basis": "100px",
              "display": false
            },
            "props": {
              "params": {
                "enabled": true,
                "hover": false,
                "label": "Clear Data",
                "selected": false
              },
              "path": "GlobalComponents/Buttons/Button",
              "style": {
                "paddingBottom": "3ch",
                "paddingLeft": "1ch",
                "paddingRight": "1ch",
                "paddingTop": "3ch"
              }
            },
            "type": "ia.display.view"
          },
          {
            "meta": {
              "name": "EmbeddedView"
            },
            "position": {
              "basis": "100px",
              "display": false
            },
            "propConfig": {
              "props.params.columns": {
                "binding": {
                  "config": {
                    "path": ".../data/TableContainerDetails/Table.props.columns"
                  },
                  "enabled": false,
                  "type": "property"
                }
              },
              "props.params.data": {
                "binding": {
                  "config": {
                    "path": "view.custom.filteredData"
                  },
                  "overlayOptOut": true,
                  "transforms": [
                    {
                      "code": "\tif value is None:\n\t\treturn []\n\treturn value",
                      "type": "script"
                    }
                  ],
                  "type": "property"
                }
              }
            },
            "props": {
              "params": {
                "columns": "",
                "enabled": true,
                "extension": "csv",
                "filename": "loss",
                "iconPath": "material/save"
              },
              "path": "GlobalComponents/Buttons/Button",
              "style": {
                "paddingBottom": "3ch",
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": "3ch"
              }
            },
            "type": "ia.display.view"
          }
        ],
        "meta": {
          "name": "Header"
        },
        "position": {
          "grow": 1,
          "shrink": 0
        },
        "props": {
          "style": {
            "overflow": "hidden"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "meta": {
              "name": "Table"
            },
            "position": {
              "basis": "320px",
              "grow": 1
            },
            "propConfig": {
              "props.params.Params.ScheduleQueryDS": {
                "binding": {
                  "config": {
                    "path": "view.custom.Data"
                  },
                  "type": "property"
                }
              }
            },
            "props": {
              "params": {
                "EqPath": "value",
                "HideTitle": false,
                "Icon": "",
                "IconDisplay": true,
                "Params": {
                  "EqPath": "value",
                  "State": "value",
                  "TagPath": "value",
                  "TagProvider": "value"
                },
                "Path": "App/Schedule/ScheduleManagement/Embedded/ScheduleTable",
                "Provider": "value",
                "SizeBasis": "value",
                "TagPath": "value",
                "Title": "Schedule Table",
                "Type": "value",
                "useDefaultHeight": false,
                "useDefaultWidth": false
              },
              "path": "GlobalComponents/Cards/Card"
            },
            "type": "ia.display.view"
          }
        ],
        "meta": {
          "name": "ScheduleTable"
        },
        "position": {
          "basis": "50%",
          "grow": 1
        },
        "props": {
          "style": {
            "classes": "Global/MarginBottom"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "meta": {
              "name": "TimeSeries"
            },
            "position": {
              "basis": "320px",
              "grow": 1
            },
            "propConfig": {
              "props.params.Params.EqScheduleEndDate": {
                "binding": {
                  "config": {
                    "path": ".../Header/timeSelector.props.params.timeEnd"
                  },
                  "type": "property"
                }
              },
              "props.params.Params.EqScheduleStartDate": {
                "binding": {
                  "config": {
                    "path": ".../Header/timeSelector.props.params.timeStart"
                  },
                  "type": "property"
                }
              },
              "props.params.Params.ScheduleQueryDS": {
                "binding": {
                  "config": {
                    "path": "view.custom.Data"
                  },
                  "type": "property"
                }
              }
            },
            "props": {
              "params": {
                "EqPath": "value",
                "HideTitle": false,
                "Icon": "",
                "IconDisplay": true,
                "Params": {
                  "EqPath": "value",
                  "State": "value",
                  "TagPath": "value",
                  "TagProvider": "value"
                },
                "Path": "App/Schedule/ScheduleManagement/Embedded/EqSchedule",
                "Provider": "value",
                "SizeBasis": "value",
                "TagPath": "value",
                "Title": "Schedule View",
                "Type": "value",
                "useDefaultHeight": false,
                "useDefaultWidth": false
              },
              "path": "GlobalComponents/Cards/Card"
            },
            "type": "ia.display.view"
          }
        ],
        "meta": {
          "name": "ScheduleEqGraphic"
        },
        "position": {
          "basis": "50%",
          "grow": 1
        },
        "type": "ia.container.flex"
      }
    ],
    "custom": {
      "AreaID": null,
      "EndDate": null,
      "ProductCodeID": null,
      "ScheduleQueryDS": {
        "$": [
          "ds",
          192,
          1685537567990
        ],
        "$columns": [
          {
            "data": [
              3,
              4,
              5,
              6,
              7,
              8
            ],
            "name": "ID",
            "type": "Integer"
          },
          {
            "data": [
              20,
              20,
              20,
              1,
              3,
              13
            ],
            "name": "LineID",
            "type": "Integer"
          },
          {
            "data": [
              "LABSIM",
              "LABSIM",
              "LABSIM",
              "SFN1",
              "SFN3",
              "ACCTC1"
            ],
            "name": "LineName",
            "type": "String"
          },
          {
            "data": [
              3,
              14,
              5,
              31,
              15,
              12
            ],
            "name": "WorkOrderID",
            "type": "Integer"
          },
          {
            "data": [
              "41562641",
              "665",
              "test1234",
              "1234",
              "7778",
              "25556"
            ],
            "name": "WOName",
            "type": "String"
          },
          {
            "data": [
              1682956800000,
              1684501200000,
              0,
              1684555200000,
              1684641600000,
              1685505600000
            ],
            "name": "ScheduleStartDateTime",
            "type": "Date"
          },
          {
            "data": [
              1685462400000,
              1684587600000,
              0,
              1684728000000,
              1684814400000,
              1685678400000
            ],
            "name": "ScheduleEndDateTime",
            "type": "Date"
          },
          {
            "data": [
              150000,
              100,
              555,
              654,
              123,
              255
            ],
            "name": "Quantity",
            "type": "Integer"
          },
          {
            "data": [
              "\u0027tturner\u0027",
              "bduran",
              "bduran",
              "bduran",
              "bduran",
              "tturner"
            ],
            "name": "EnteredBy",
            "type": "String"
          },
          {
            "data": [
              1682956800000,
              1684525702400,
              1684529856143,
              1684534298090,
              1684534486750,
              1685537410873
            ],
            "name": "DateCreated",
            "type": "Date"
          }
        ]
      },
      "StartDate": null,
      "oldScheduleQDS": {
        "$": [
          "ds",
          192,
          1685629801145
        ],
        "$columns": [
          {
            "data": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8
            ],
            "name": "ID",
            "type": "Integer"
          },
          {
            "data": [
              11,
              12,
              20,
              20,
              20,
              1,
              3,
              11
            ],
            "name": "LineID",
            "type": "Integer"
          },
          {
            "data": [
              "201",
              "202",
              "LABSIM",
              "LABSIM",
              "LABSIM",
              "SFN1",
              "SFN3",
              "201"
            ],
            "name": "LineName",
            "type": "String"
          },
          {
            "data": [
              1,
              2,
              3,
              14,
              5,
              31,
              15,
              12
            ],
            "name": "WorkOrderID",
            "type": "Integer"
          },
          {
            "data": [
              "41562639",
              "41562640",
              "41562641",
              "665",
              "test1234",
              "1234",
              "7778",
              "25556"
            ],
            "name": "WOName",
            "type": "String"
          },
          {
            "data": [
              1678495660927,
              1644253200000,
              1682956800000,
              1684501200000,
              0,
              1684555200000,
              1684641600000,
              1685505600000
            ],
            "name": "ScheduleStartDateTime",
            "type": "Date"
          },
          {
            "data": [
              1678495398657,
              1644253200000,
              1685462400000,
              1684587600000,
              0,
              1684728000000,
              1684814400000,
              1685764800000
            ],
            "name": "ScheduleEndDateTime",
            "type": "Date"
          },
          {
            "data": [
              30000,
              42000,
              150000,
              100,
              555,
              654,
              123,
              255
            ],
            "name": "Quantity",
            "type": "Integer"
          },
          {
            "data": [
              "\u0027tturner\u0027",
              "\u0027tturner\u0027",
              "\u0027tturner\u0027",
              "bduran",
              "bduran",
              "bduran",
              "bduran",
              "tturner"
            ],
            "name": "EnteredBy",
            "type": "String"
          },
          {
            "data": [
              1644253200000,
              1644253200000,
              1682956800000,
              1684525702400,
              1684529856143,
              1684534298090,
              1684534486750,
              1685537410873
            ],
            "name": "DateCreated",
            "type": "Date"
          }
        ]
      }
    },
    "meta": {
      "name": "root"
    },
    "propConfig": {
      "custom.ScheduleQueryDS": {
        "binding": {
          "config": {
            "parameters": {
              "areaID": "{this.custom.AreaID}",
              "endDateTime": "{this.custom.EndDate}",
              "productCodeID": "{this.custom.ProductCodeID}",
              "startDateTime": "{this.custom.EndDate}"
            },
            "queryPath": "app/Schedule/getAllEquipmentSchedule"
          },
          "enabled": false,
          "type": "query"
        }
      },
      "custom.oldScheduleQDS": {
        "binding": {
          "config": {
            "parameters": {
              "areaID": "{this.custom.AreaID}",
              "endDateTime": "{this.custom.EndDate}",
              "productCodeID": "{this.custom.ProductCodeID}",
              "startDateTime": "{this.custom.EndDate}"
            },
            "queryPath": "app/Schedule/getAllEquipmentSchedule"
          },
          "enabled": false,
          "type": "query"
        }
      }
    },
    "props": {
      "direction": "column",
      "style": {
        "classes": "Global/MarginAll"
      }
    },
    "scripts": {
      "customMethods": [],
      "extensionFunctions": null,
      "messageHandlers": [
        {
          "messageType": "scheduleRefresh",
          "pageScope": true,
          "script": "\t# implement your handler here\n\tself.view.refreshBinding(\u0027custom.Data\u0027)",
          "sessionScope": false,
          "viewScope": false
        }
      ]
    },
    "type": "ia.container.flex"
  }
}