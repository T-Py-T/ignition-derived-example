{
  "custom": {
    "CategoriesData": {
      "$": [
        "ds",
        192,
        1704407041977
      ],
      "$columns": [
        {
          "data": [
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34
          ],
          "name": "id",
          "type": "Integer"
        },
        {
          "data": [
            "Dimensional",
            "Visual",
            "Physical",
            "Embosser",
            "Label(s)",
            "Mis-Routed",
            "Molder",
            "Packaging",
            "Partial",
            "R\u0026D/Study/Test",
            "ERPScrap"
          ],
          "name": "reason_category_name",
          "type": "String"
        },
        {
          "data": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            null
          ],
          "name": "reason_category_description",
          "type": "String"
        },
        {
          "data": [
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null
          ],
          "name": "time_retired",
          "type": "Date"
        }
      ]
    },
    "Data": {
      "$": [
        "ds",
        192,
        1704407041978
      ],
      "$columns": [
        {
          "data": [
            47,
            48,
            49,
            50,
            52,
            53,
            55,
            60,
            61,
            62,
            64,
            65,
            68,
            72,
            74,
            75,
            78,
            82,
            84,
            85,
            88,
            92,
            97,
            100,
            102,
            103,
            104,
            105,
            109,
            112,
            113,
            115,
            116,
            117,
            119,
            122,
            123,
            125,
            126,
            127,
            129,
            132,
            133,
            135,
            136,
            137
          ],
          "name": "reason_id",
          "type": "Integer"
        },
        {
          "data": [
            "BOARD JAM - KICKER",
            "BOARD JAM - MOLDER",
            "BOARD JAM - SAW",
            "BOARD JAM - STACKER",
            "BUYBACK SCRAP",
            "CAPSTOCK DIE DROOL",
            "CIP",
            "CROWNING",
            "CUPPING",
            "CUT BOARD SCRAP",
            "DENTS",
            "DIMENSIONAL",
            "FORMULATION ERROR",
            "LABELING",
            "MIS-ROUTED",
            "MOLDER",
            "R\u0026D/STUDY/TEST",
            "STARTUP / CHANGE OVER",
            "STREAKER",
            "SURGE MARKS",
            "VACUUM BUMPS",
            "ADHESION",
            "BREAK STRENGTH",
            "CHIPPED",
            "COLOR",
            "CONTAMINATION",
            "CRACKS",
            "CROSS DIRECTIONAL LINES",
            "DARK LINES",
            "DISCOLORED (DAMAGE)",
            "EMBOSSING",
            "GLOSS",
            "GROOVE DEPTH",
            "GROOVE WIDTH",
            "LENGTH",
            "NON-MELT",
            "PROFILE",
            "SCRATCHES",
            "SIDE PRINT",
            "SPOTS",
            "STRAIGHTNESS / FLATNESS",
            "TEARS",
            "THICKNESS",
            "VOIDS",
            "WIDTH",
            "WOOD SPOTS"
          ],
          "name": "reason_name",
          "type": "String"
        },
        {
          "data": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "name": "reason_description",
          "type": "String"
        },
        {
          "data": [
            10002,
            10003,
            10004,
            10005,
            10007,
            10008,
            10010,
            10015,
            10016,
            10017,
            10019,
            10020,
            10023,
            10027,
            10029,
            10030,
            10033,
            10037,
            10039,
            10040,
            10043,
            10001,
            10006,
            10009,
            10011,
            10012,
            10013,
            10014,
            10018,
            10021,
            10022,
            10024,
            10025,
            10026,
            10028,
            10031,
            10032,
            10034,
            10035,
            10036,
            10038,
            10041,
            10042,
            10044,
            10045,
            10046
          ],
          "name": "reason_code",
          "type": "Integer"
        },
        {
          "data": [
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34
          ],
          "name": "reason_category_id",
          "type": "Integer"
        },
        {
          "data": [
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null
          ],
          "name": "time_retired",
          "type": "Date"
        },
        {
          "data": [
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34
          ],
          "name": "reason_category_id",
          "type": "Integer"
        },
        {
          "data": [
            "ERPScrap",
            "ERPScrap",
            "ERPScrap",
            "ERPScrap",
            "ERPScrap",
            "ERPScrap",
            "ERPScrap",
            "ERPScrap",
            "ERPScrap",
            "ERPScrap",
            "ERPScrap",
            "ERPScrap",
            "ERPScrap",
            "ERPScrap",
            "ERPScrap",
            "ERPScrap",
            "ERPScrap",
            "ERPScrap",
            "ERPScrap",
            "ERPScrap",
            "ERPScrap",
            "ERPScrap",
            "ERPScrap",
            "ERPScrap",
            "ERPScrap",
            "ERPScrap",
            "ERPScrap",
            "ERPScrap",
            "ERPScrap",
            "ERPScrap",
            "ERPScrap",
            "ERPScrap",
            "ERPScrap",
            "ERPScrap",
            "ERPScrap",
            "ERPScrap",
            "ERPScrap",
            "ERPScrap",
            "ERPScrap",
            "ERPScrap",
            "ERPScrap",
            "ERPScrap",
            "ERPScrap",
            "ERPScrap",
            "ERPScrap",
            "ERPScrap"
          ],
          "name": "reason_category_name",
          "type": "String"
        },
        {
          "data": [
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null
          ],
          "name": "reason_category_description",
          "type": "String"
        },
        {
          "data": [
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null
          ],
          "name": "time_retired",
          "type": "Date"
        }
      ]
    },
    "SelectedRow": null
  },
  "params": {
    "ID": 20
  },
  "propConfig": {
    "custom.CategoriesData": {
      "binding": {
        "config": {
          "queryPath": "app/Equipment_Config/getScrapReasonCategoriesData"
        },
        "type": "query"
      },
      "persistent": true
    },
    "custom.Data": {
      "binding": {
        "config": {
          "queryPath": "app/Equipment_Config/getScrapReason",
          "returnFormat": "dataset"
        },
        "type": "query"
      },
      "persistent": true
    },
    "custom.SelectedRow": {
      "binding": {
        "config": {
          "path": "/root/Row2/Table.props.selection.data"
        },
        "type": "property"
      },
      "persistent": true
    },
    "params.ID": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 498
    }
  },
  "root": {
    "children": [
      {
        "children": [
          {
            "children": [
              {
                "meta": {
                  "name": "Title"
                },
                "position": {
                  "basis": "50px",
                  "display": false,
                  "grow": 1
                },
                "props": {
                  "text": "Materials Table"
                },
                "type": "ia.display.label"
              },
              {
                "children": [
                  {
                    "events": {
                      "component": {
                        "onActionPerformed": {
                          "config": {
                            "script": "\tif self.props.selected:\n\t    self.parent.parent.parent.getChild(\"Row2/Materials\").props.columns[7].filter.enabled \u003d False\n\telse:\n\t    self.parent.parent.parent.getChild(\"Row2/Materials\").props.columns[7].filter.enabled \u003d True\n\t    "
                          },
                          "scope": "G",
                          "type": "script"
                        }
                      }
                    },
                    "meta": {
                      "name": "ShowDeleted"
                    },
                    "position": {
                      "display": false
                    },
                    "props": {
                      "style": {
                        "classes": "Global/MarginLeft"
                      },
                      "text": "Show Deleted"
                    },
                    "type": "ia.input.checkbox"
                  },
                  {
                    "events": {
                      "dom": {
                        "onClick": {
                          "config": {
                            "script": "\teditParams \u003d {\n\t\t\"projectId\":  self.view.params.projectId,\n\t\t\"loopTypeName\": self.parent.parent.getChild(\"Table\").custom.loopTypeName,\n\t\t\"loopTypeId\": self.parent.parent.getChild(\"Table\").custom.loopTypeId,\n\t\t\"loopId\":     self.parent.parent.getChild(\"Table\").custom.loopId,\n\t\t\"loopName\":   self.parent.parent.getChild(\"Table\").custom.loopName,\n\t\t\"functionalAreaId\": self.parent.parent.getChild(\"Table\").custom.areaId,\n\t\t\"functionalAreaName\": self.parent.parent.getChild(\"Table\").custom.areaName,\n\t\t\"subAreaId\":  self.parent.parent.getChild(\"Table\").custom.subAreaId,\n\t\t\"projectName\":  self.view.params.projectName,\n\t\t\"loopAlert\": self.parent.parent.getChild(\"Table\").custom.loopAlert,\n\t\t\"loopStatusKey\": self.parent.parent.getChild(\"Table\").custom.loopStatusKey\n\t}\n\t\n\tsystem.perspective.navigate(view\u003d\u0027ConfigTool/LoopConfigs/LoopConfig\u0027, params\u003deditParams)"
                          },
                          "scope": "G",
                          "type": "script"
                        }
                      }
                    },
                    "meta": {
                      "name": "Rename"
                    },
                    "position": {
                      "basis": "24px",
                      "display": false,
                      "shrink": 0
                    },
                    "propConfig": {
                      "props.color": {
                        "binding": {
                          "config": {
                            "path": "..../Table.props.selection.selectedRow"
                          },
                          "transforms": [
                            {
                              "fallback": "#5A5A5A",
                              "inputType": "expression",
                              "mappings": [
                                {
                                  "input": "None",
                                  "output": "#C9C9C9"
                                }
                              ],
                              "outputType": "scalar",
                              "type": "map"
                            }
                          ],
                          "type": "property"
                        }
                      },
                      "props.style.cursor": {
                        "binding": {
                          "config": {
                            "path": "..../Table.props.selection.selectedRow"
                          },
                          "transforms": [
                            {
                              "fallback": "pointer",
                              "inputType": "expression",
                              "mappings": [
                                {
                                  "input": "None",
                                  "output": "auto"
                                }
                              ],
                              "outputType": "scalar",
                              "type": "map"
                            }
                          ],
                          "type": "property"
                        }
                      }
                    },
                    "props": {
                      "path": "material/contact_mail",
                      "style": {
                        "classes": "",
                        "marginRight": 8
                      }
                    },
                    "type": "ia.display.icon"
                  },
                  {
                    "events": {
                      "dom": {
                        "onClick": {
                          "config": {
                            "script": "\tparams \u003d {\n\t\t\"funcSubArea\": self.parent.parent.getChild(\"Table\").props.columns[7].visible,\n\t\t\"funcArea\": self.parent.parent.getChild(\"Table\").props.columns[9].visible,\n\t\t\"approvedUser\": self.parent.parent.getChild(\"Table\").props.columns[12].visible,\n\t\t\"statusUser\": self.parent.parent.getChild(\"Table\").props.columns[13].visible,\n\t\t\"completedUser\": self.parent.parent.getChild(\"Table\").props.columns[14].visible,\n\t\t\"statusDate\": self.parent.parent.getChild(\"Table\").props.columns[15].visible,\n\t\t\"approvedDate\": self.parent.parent.getChild(\"Table\").props.columns[16].visible,\n\t\t\"completedDate\": self.parent.parent.getChild(\"Table\").props.columns[17].visible\n\t}\n\t\n\tsystem.perspective.print(params)\n\tsystem.perspective.openPopup(\"tableColumns\", \"ConfigTool/Subviews/ColumnSelection\", params\u003dparams, modal\u003dTrue)\n\t"
                          },
                          "scope": "G",
                          "type": "script"
                        }
                      }
                    },
                    "meta": {
                      "name": "Filter"
                    },
                    "position": {
                      "basis": "24px",
                      "display": false,
                      "shrink": 0
                    },
                    "propConfig": {
                      "props.style.cursor": {
                        "binding": {
                          "config": {
                            "path": "../..../Table/Table.props.selection.selectedRow"
                          },
                          "transforms": [
                            {
                              "fallback": "pointer",
                              "inputType": "expression",
                              "mappings": [
                                {
                                  "input": "None",
                                  "output": "auto"
                                }
                              ],
                              "outputType": "scalar",
                              "type": "map"
                            }
                          ],
                          "type": "property"
                        }
                      }
                    },
                    "props": {
                      "path": "material/filter_alt",
                      "style": {
                        "classes": ""
                      }
                    },
                    "type": "ia.display.icon"
                  },
                  {
                    "events": {
                      "dom": {
                        "onClick": {
                          "config": {
                            "script": "\timport time\n\t\n\t# Refresh user table binding and rotate refresh icon.\n\tself.view.refreshBinding(\u0027custom.CategoriesData\u0027)\n\tself.rotateIcon()"
                          },
                          "scope": "G",
                          "type": "script"
                        }
                      }
                    },
                    "meta": {
                      "name": "Refresh",
                      "tooltip": {
                        "enabled": true,
                        "text": "Refresh"
                      }
                    },
                    "position": {
                      "basis": "26px",
                      "shrink": 0
                    },
                    "props": {
                      "color": "--neutral-100",
                      "path": "material/refresh",
                      "style": {
                        "classes": "",
                        "marginRight": 8,
                        "transform": "rotate(360deg)"
                      }
                    },
                    "scripts": {
                      "customMethods": [
                        {
                          "name": "rotateIcon",
                          "params": [],
                          "script": "\timport time\n\t\n\t# Rotate icon 360 degrees.\n\tfor degree in range(0,361, 10):\n\t\tself.props.style.transform \u003d \u0027rotate(\u0027 + str(degree) + \u0027deg)\u0027\n\t\ttime.sleep(0.0278)"
                        }
                      ],
                      "extensionFunctions": null,
                      "messageHandlers": [
                        {
                          "messageType": "refreshTable",
                          "pageScope": true,
                          "script": "\t# Refresh user table binding\n\tself.parent.parent.getChild(\"Table\").refreshBinding(\"props.data\")",
                          "sessionScope": true,
                          "viewScope": true
                        }
                      ]
                    },
                    "type": "ia.display.icon"
                  },
                  {
                    "events": {
                      "dom": {
                        "onClick": [
                          {
                            "config": {
                              "script": "\tlogger \u003d system.util.getLogger(\u0027addStates\u0027)\n\t\t\t\n\ttry:\n\t\tselectedRowData \u003d self.parent.parent.parent.getChild(\"Row2/Table\").props.selection.data\n\t\tmodalName \u003d \"addScrapCategory\"\n\t\tmodalPath \u003d \"App/EquipmentConfig/Embedded/Popups/AddEditScrapCategory\"\n\t\t\n\t\tparams \u003d {\n\t\t\t\"ModalName\": modalName,\n\t\t\t\"Data\": selectedRowData,\n\t\t\t\"Type\": \"add\"\n\t\t}\n\t\t\n\t\tsystem.perspective.openPopup(modalName, modalPath, params, title\u003d\"Add\", modal\u003dTrue, overlayDismiss\u003dTrue)\n\texcept Exception as e:\n\t\terrorParams \u003d {\n\t\t\t\"ModalName\": \"ErrorModal\",\n\t\t\t\"ErrorMessage\": \u0027There was an error: \u0027 + str(e)\n\t\t}\n\t\t\n\t\tmsg \u003d \u0027There was an error: \u0027 + str(e)\n\t\tsystem.perspective.openPopup(\"ErrorModal\", \"GlobalComponents/Modals/ErrorModal\", errorParams)"
                            },
                            "scope": "G",
                            "type": "script"
                          },
                          {
                            "config": {
                              "draggable": true,
                              "id": "addModal",
                              "modal": true,
                              "overlayDismiss": true,
                              "resizable": true,
                              "showCloseIcon": true,
                              "title": "Add",
                              "type": "toggle",
                              "viewParams": {
                                "ModalName": "addModal",
                                "SiteID": "{session.custom.SelectedSite}"
                              },
                              "viewPath": "App/Schedule/Materials/Embedded/Popups/Add/AddManualMaterials",
                              "viewportBound": false
                            },
                            "enabled": false,
                            "scope": "C",
                            "type": "popup"
                          }
                        ]
                      }
                    },
                    "meta": {
                      "name": "Add",
                      "tooltip": {
                        "enabled": true,
                        "text": "Add"
                      }
                    },
                    "position": {
                      "basis": "29px",
                      "shrink": 0
                    },
                    "props": {
                      "path": "material/add",
                      "style": {
                        "classes": "",
                        "marginRight": 8
                      }
                    },
                    "type": "ia.display.icon"
                  },
                  {
                    "events": {
                      "dom": {
                        "onClick": {
                          "config": {
                            "script": "\tlogger \u003d system.util.getLogger(\u0027editScrapReason\u0027)\n\t\n\ttry:\n\t\tselectedRowData \u003d self.parent.parent.parent.getChild(\"Row2\").getChild(\"Table\").props.selection.data\n\t\tmodalName \u003d \"editStates\"\n\t\tmodalPath \u003d \"App/EquipmentConfig/Embedded/Popups/AddEditScrapCategory\"\n\t\t\n\t\t\n\t\tparams \u003d {\n\t\t\t\"ModalName\": modalName,\n\t\t\t\"Data\": selectedRowData,\n\t\t\t\"Type\": \"edit\"\n\t\t}\n\t\t\n\t\tif len(selectedRowData) \u003e 0:\n\t\t\tsystem.perspective.openPopup(modalName, modalPath, params, title\u003d\"Edit\", modal\u003dTrue, overlayDismiss\u003dTrue)\n\t\telse: raise ValueError(\u0027A row was not selected\u0027)\n\texcept Exception as e:\n\t\terrorParams \u003d {\n\t\t\t\"ModalName\": \"ErrorModal\",\n\t\t\t\"ErrorMessage\": \u0027There was an error: \u0027 + str(e)\n\t\t}\n\t\t\n\t\tmsg \u003d \u0027There was an error: \u0027 + str(e)\n\t\tsystem.perspective.openPopup(\"ErrorModal\", \"GlobalComponents/Modals/ErrorModal\", errorParams)"
                          },
                          "scope": "G",
                          "type": "script"
                        }
                      }
                    },
                    "meta": {
                      "name": "Edit",
                      "tooltip": {
                        "enabled": true,
                        "text": "Edit"
                      }
                    },
                    "position": {
                      "basis": "24px",
                      "shrink": 0
                    },
                    "propConfig": {
                      "props.style.cursor": {
                        "binding": {
                          "config": {
                            "path": "..../Row2/Table.props.selection.selectedRow"
                          },
                          "transforms": [
                            {
                              "fallback": "pointer",
                              "inputType": "expression",
                              "mappings": [
                                {
                                  "input": "None",
                                  "output": "auto"
                                }
                              ],
                              "outputType": "scalar",
                              "type": "map"
                            }
                          ],
                          "type": "property"
                        }
                      }
                    },
                    "props": {
                      "path": "material/create",
                      "style": {
                        "classes": "",
                        "marginRight": 8
                      }
                    },
                    "type": "ia.display.icon"
                  },
                  {
                    "events": {
                      "dom": {
                        "onClick": {
                          "config": {
                            "script": "\tlogger \u003d system.util.getLogger(\u0027scrap_category_export\u0027)\n\t\n\ttry:\n\t\tparams \u003d { \u0027Type\u0027: \u0027scrapCategory\u0027 }\n\t\tsystem.perspective.openPopup(\"ImportFile\", \"GlobalComponents/Modals/ImportFile\", params)\n\n\texcept Exception as e:\n\t\terrorParams \u003d {\n\t\t\t\"ModalName\": \"ErrorModal\",\n\t\t\t\"ErrorMessage\": \u0027There was an error: \u0027 + str(e)\n\t\t}\n\t\t\n\t\tmsg \u003d \u0027There was an error: \u0027 + str(e)\n\t\tsystem.perspective.openPopup(\"ErrorModal\", \"GlobalComponents/Modals/ErrorModal\", errorParams)"
                          },
                          "scope": "G",
                          "type": "script"
                        }
                      }
                    },
                    "meta": {
                      "name": "Import",
                      "tooltip": {
                        "enabled": true,
                        "text": "Import"
                      }
                    },
                    "position": {
                      "basis": "24px",
                      "shrink": 0
                    },
                    "propConfig": {
                      "props.style.cursor": {
                        "binding": {
                          "config": {
                            "path": "..../Row2/Table.props.selection.selectedRow"
                          },
                          "transforms": [
                            {
                              "fallback": "pointer",
                              "inputType": "expression",
                              "mappings": [
                                {
                                  "input": "None",
                                  "output": "auto"
                                }
                              ],
                              "outputType": "scalar",
                              "type": "map"
                            }
                          ],
                          "type": "property"
                        }
                      }
                    },
                    "props": {
                      "path": "material/arrow_circle_up",
                      "style": {
                        "classes": "",
                        "marginRight": 8
                      }
                    },
                    "type": "ia.display.icon"
                  },
                  {
                    "events": {
                      "dom": {
                        "onClick": {
                          "config": {
                            "script": "\tlogger \u003d system.util.getLogger(\u0027scrap_category_export\u0027)\n\t\n\ttry:\n\t\tdata \u003d self.parent.parent.parent.getChild(\"Row2/Table\").props.data\n\t\tcsv \u003d system.dataset.toCSV(dataset \u003d data, showHeaders \u003d True, forExport \u003d True)\n\t\tfileName \u003d \"ScrapCategory.csv\"\n\t\t\n\t\tsystem.perspective.download(fileName, csv)\n\n\texcept Exception as e:\n\t\terrorParams \u003d {\n\t\t\t\"ModalName\": \"ErrorModal\",\n\t\t\t\"ErrorMessage\": \u0027There was an error: \u0027 + str(e)\n\t\t}\n\t\t\n\t\tmsg \u003d \u0027There was an error: \u0027 + str(e)\n\t\tsystem.perspective.openPopup(\"ErrorModal\", \"GlobalComponents/Modals/ErrorModal\", errorParams)"
                          },
                          "scope": "G",
                          "type": "script"
                        }
                      }
                    },
                    "meta": {
                      "name": "Export",
                      "tooltip": {
                        "enabled": true,
                        "text": "Export"
                      }
                    },
                    "position": {
                      "basis": "24px",
                      "shrink": 0
                    },
                    "propConfig": {
                      "props.style.cursor": {
                        "binding": {
                          "config": {
                            "path": "..../Row2/Table.props.selection.selectedRow"
                          },
                          "transforms": [
                            {
                              "fallback": "pointer",
                              "inputType": "expression",
                              "mappings": [
                                {
                                  "input": "None",
                                  "output": "auto"
                                }
                              ],
                              "outputType": "scalar",
                              "type": "map"
                            }
                          ],
                          "type": "property"
                        }
                      }
                    },
                    "props": {
                      "path": "material/arrow_circle_down",
                      "style": {
                        "classes": "",
                        "marginRight": 8
                      }
                    },
                    "type": "ia.display.icon"
                  },
                  {
                    "events": {
                      "dom": {
                        "onClick": {
                          "config": {
                            "script": "\tlogger \u003d system.util.getLogger(\u0027deleteAsset\u0027)\n\t\t\t\n\ttry:\n\t\tselectedItemData \u003d self.parent.parent.parent.getChild(\"Row2/Table\").props.selection.data[0]\n\t\tmodalName \u003d \u0027deleteAsset\u0027\n\t\tmodalPath \u003d \u0027App/EquipmentConfig/Embedded/Popups/ConfirmDeleteAsset\u0027\n\t\t\n\t\tparams \u003d {\n\t\t    \u0027ID\u0027: selectedItemData.get(\u0027id\u0027),\n\t\t    \u0027Type\u0027: \u0027\u0027,\n\t\t    \u0027Name\u0027: selectedItemData.get(\u0027reason_category_name\u0027),\n\t\t    \u0027ModalName\u0027: modalName,\n\t\t    \u0027DeleteType\u0027: \u0027scrapcategory\u0027\n\t\t}\n\t\tsystem.perspective.print(params)\n\t\tif params[\u0027ID\u0027]:\n\t\t    system.perspective.openPopup(modalName, modalPath, params, title\u003d\"Delete\", modal\u003dTrue, overlayDismiss\u003dTrue)\n\t\t    # res \u003d mes.config.sp.deleteAsset(params) # replace with mes.config.equipment call\n\t\t    # if res is not True: raise Exception(str(res))\n\t\telse: \n\t\t    raise ValueError(\u0027A row was not selected or ID is empty\u0027)\n\n\texcept Exception as e:\n\t\terrorParams \u003d {\n\t\t\t\"ModalName\": \"ErrorModal\",\n\t\t\t\"ErrorMessage\": \u0027There was an error: \u0027 + str(e)\n\t\t}\n\t\t\n\t\tmsg \u003d \u0027There was an error: \u0027 + str(e)\n\t\tsystem.perspective.openPopup(\"ErrorModal\", \"GlobalComponents/Modals/ErrorModal\", errorParams)\t\t\n\t\tlogger.warn(msg)\n\t\t\t"
                          },
                          "scope": "G",
                          "type": "script"
                        }
                      }
                    },
                    "meta": {
                      "name": "Delete",
                      "tooltip": {
                        "enabled": true,
                        "text": "Delete"
                      }
                    },
                    "position": {
                      "basis": "27px",
                      "shrink": 0
                    },
                    "propConfig": {
                      "props.style.cursor": {
                        "binding": {
                          "config": {
                            "path": "..../Row2/Table.props.selection.selectedRow"
                          },
                          "transforms": [
                            {
                              "fallback": "pointer",
                              "inputType": "expression",
                              "mappings": [
                                {
                                  "input": "None",
                                  "output": "auto"
                                }
                              ],
                              "outputType": "scalar",
                              "type": "map"
                            }
                          ],
                          "type": "property"
                        }
                      }
                    },
                    "props": {
                      "path": "material/delete",
                      "style": {
                        "classes": "",
                        "marginRight": 8
                      }
                    },
                    "type": "ia.display.icon"
                  }
                ],
                "meta": {
                  "name": "Icons"
                },
                "position": {
                  "basis": "450px",
                  "grow": 1,
                  "shrink": 0
                },
                "props": {
                  "justify": "flex-end",
                  "style": {
                    "overflow": "hidden"
                  },
                  "wrap": "wrap"
                },
                "type": "ia.container.flex"
              }
            ],
            "meta": {
              "name": "Row1"
            },
            "type": "ia.container.flex"
          },
          {
            "children": [
              {
                "meta": {
                  "name": "Table"
                },
                "position": {
                  "basis": "400px",
                  "grow": 1
                },
                "propConfig": {
                  "props.data": {
                    "binding": {
                      "config": {
                        "path": "view.custom.CategoriesData"
                      },
                      "type": "property"
                    }
                  }
                },
                "props": {
                  "columns": [
                    {
                      "align": "center",
                      "boolean": "checkbox",
                      "dateFormat": "MM/DD/YYYY",
                      "editable": false,
                      "field": "id",
                      "filter": {
                        "boolean": {
                          "condition": ""
                        },
                        "date": {
                          "condition": "",
                          "value": ""
                        },
                        "enabled": false,
                        "number": {
                          "condition": "",
                          "value": ""
                        },
                        "string": {
                          "condition": "",
                          "value": ""
                        },
                        "visible": "on-hover"
                      },
                      "footer": {
                        "align": "center",
                        "justify": "left",
                        "style": {
                          "classes": ""
                        },
                        "title": ""
                      },
                      "header": {
                        "align": "center",
                        "justify": "left",
                        "style": {
                          "classes": ""
                        },
                        "title": ""
                      },
                      "justify": "auto",
                      "nullFormat": {
                        "includeNullStrings": false,
                        "nullFormatValue": "",
                        "strict": false
                      },
                      "number": "value",
                      "numberFormat": "0,0.##",
                      "progressBar": {
                        "bar": {
                          "color": "",
                          "style": {
                            "classes": ""
                          }
                        },
                        "max": 100,
                        "min": 0,
                        "track": {
                          "color": "",
                          "style": {
                            "classes": ""
                          }
                        },
                        "value": {
                          "enabled": true,
                          "format": "0,0.##",
                          "justify": "center",
                          "style": {
                            "classes": ""
                          }
                        }
                      },
                      "render": "auto",
                      "resizable": true,
                      "sort": "none",
                      "sortable": true,
                      "strictWidth": false,
                      "style": {
                        "classes": ""
                      },
                      "toggleSwitch": {
                        "color": {
                          "selected": "",
                          "unselected": ""
                        }
                      },
                      "viewParams": {},
                      "viewPath": "",
                      "visible": false,
                      "width": ""
                    },
                    {
                      "align": "center",
                      "boolean": "checkbox",
                      "dateFormat": "MM/DD/YYYY",
                      "editable": false,
                      "field": "reason_category_name",
                      "filter": {
                        "boolean": {
                          "condition": ""
                        },
                        "date": {
                          "condition": "",
                          "value": ""
                        },
                        "enabled": false,
                        "number": {
                          "condition": "",
                          "value": ""
                        },
                        "string": {
                          "condition": "",
                          "value": ""
                        },
                        "visible": "on-hover"
                      },
                      "footer": {
                        "align": "center",
                        "justify": "left",
                        "style": {
                          "classes": ""
                        },
                        "title": ""
                      },
                      "header": {
                        "align": "center",
                        "justify": "left",
                        "style": {
                          "classes": ""
                        },
                        "title": "Category Name"
                      },
                      "justify": "auto",
                      "nullFormat": {
                        "includeNullStrings": false,
                        "nullFormatValue": "",
                        "strict": false
                      },
                      "number": "value",
                      "numberFormat": "0,0.##",
                      "progressBar": {
                        "bar": {
                          "color": "",
                          "style": {
                            "classes": ""
                          }
                        },
                        "max": 100,
                        "min": 0,
                        "track": {
                          "color": "",
                          "style": {
                            "classes": ""
                          }
                        },
                        "value": {
                          "enabled": true,
                          "format": "0,0.##",
                          "justify": "center",
                          "style": {
                            "classes": ""
                          }
                        }
                      },
                      "render": "auto",
                      "resizable": true,
                      "sort": "none",
                      "sortable": true,
                      "strictWidth": false,
                      "style": {
                        "classes": "",
                        "marginLeft": 5
                      },
                      "toggleSwitch": {
                        "color": {
                          "selected": "",
                          "unselected": ""
                        }
                      },
                      "viewParams": {},
                      "viewPath": "",
                      "visible": true,
                      "width": ""
                    },
                    {
                      "align": "center",
                      "boolean": "checkbox",
                      "dateFormat": "MM/DD/YYYY",
                      "editable": false,
                      "field": "reason_category_description",
                      "filter": {
                        "boolean": {
                          "condition": ""
                        },
                        "date": {
                          "condition": "",
                          "value": ""
                        },
                        "enabled": false,
                        "number": {
                          "condition": "",
                          "value": ""
                        },
                        "string": {
                          "condition": "",
                          "value": ""
                        },
                        "visible": "on-hover"
                      },
                      "footer": {
                        "align": "center",
                        "justify": "left",
                        "style": {
                          "classes": ""
                        },
                        "title": ""
                      },
                      "header": {
                        "align": "center",
                        "justify": "left",
                        "style": {
                          "classes": ""
                        },
                        "title": "Category Description"
                      },
                      "justify": "auto",
                      "nullFormat": {
                        "includeNullStrings": false,
                        "nullFormatValue": "",
                        "strict": false
                      },
                      "number": "value",
                      "numberFormat": "0,0.##",
                      "progressBar": {
                        "bar": {
                          "color": "",
                          "style": {
                            "classes": ""
                          }
                        },
                        "max": 100,
                        "min": 0,
                        "track": {
                          "color": "",
                          "style": {
                            "classes": ""
                          }
                        },
                        "value": {
                          "enabled": true,
                          "format": "0,0.##",
                          "justify": "center",
                          "style": {
                            "classes": ""
                          }
                        }
                      },
                      "render": "auto",
                      "resizable": true,
                      "sort": "none",
                      "sortable": true,
                      "strictWidth": false,
                      "style": {
                        "classes": ""
                      },
                      "toggleSwitch": {
                        "color": {
                          "selected": "",
                          "unselected": ""
                        }
                      },
                      "viewParams": {},
                      "viewPath": "",
                      "visible": true,
                      "width": ""
                    },
                    {
                      "align": "center",
                      "boolean": "checkbox",
                      "dateFormat": "MM/DD/YYYY",
                      "editable": false,
                      "field": "time_retired",
                      "filter": {
                        "boolean": {
                          "condition": ""
                        },
                        "date": {
                          "condition": "",
                          "value": ""
                        },
                        "enabled": false,
                        "number": {
                          "condition": "",
                          "value": ""
                        },
                        "string": {
                          "condition": "",
                          "value": ""
                        },
                        "visible": "on-hover"
                      },
                      "footer": {
                        "align": "center",
                        "justify": "left",
                        "style": {
                          "classes": ""
                        },
                        "title": ""
                      },
                      "header": {
                        "align": "center",
                        "justify": "left",
                        "style": {
                          "classes": ""
                        },
                        "title": "Time Retired"
                      },
                      "justify": "auto",
                      "nullFormat": {
                        "includeNullStrings": false,
                        "nullFormatValue": "",
                        "strict": false
                      },
                      "number": "value",
                      "numberFormat": "0,0.##",
                      "progressBar": {
                        "bar": {
                          "color": "",
                          "style": {
                            "classes": ""
                          }
                        },
                        "max": 100,
                        "min": 0,
                        "track": {
                          "color": "",
                          "style": {
                            "classes": ""
                          }
                        },
                        "value": {
                          "enabled": true,
                          "format": "0,0.##",
                          "justify": "center",
                          "style": {
                            "classes": ""
                          }
                        }
                      },
                      "render": "auto",
                      "resizable": true,
                      "sort": "none",
                      "sortable": true,
                      "strictWidth": false,
                      "style": {
                        "classes": ""
                      },
                      "toggleSwitch": {
                        "color": {
                          "selected": "",
                          "unselected": ""
                        }
                      },
                      "viewParams": {},
                      "viewPath": "",
                      "visible": true,
                      "width": ""
                    }
                  ],
                  "footerGroups": [
                    []
                  ]
                },
                "scripts": {
                  "customMethods": [],
                  "extensionFunctions": null,
                  "messageHandlers": [
                    {
                      "messageType": "refreshScrapReasonCategory",
                      "pageScope": true,
                      "script": "\t# implement your handler here\n\tself.view.refreshBinding(\u0027custom.CategoriesData\u0027)",
                      "sessionScope": false,
                      "viewScope": false
                    }
                  ]
                },
                "type": "ia.display.table"
              }
            ],
            "meta": {
              "name": "Row2"
            },
            "position": {
              "grow": 1
            },
            "type": "ia.container.flex"
          }
        ],
        "meta": {
          "name": "Category"
        },
        "position": {
          "basis": "50%",
          "grow": 1
        },
        "props": {
          "direction": "column",
          "style": {
            "classes": "Global/MarginBottom"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "meta": {
          "name": "Label"
        },
        "props": {
          "text": "Scrap Reason",
          "textStyle": {
            "classes": "Cards/Common/CardTitle"
          }
        },
        "type": "ia.display.label"
      },
      {
        "children": [
          {
            "children": [
              {
                "meta": {
                  "name": "Title"
                },
                "position": {
                  "basis": "50px",
                  "display": false,
                  "grow": 1
                },
                "props": {
                  "text": "Materials Table"
                },
                "type": "ia.display.label"
              },
              {
                "children": [
                  {
                    "events": {
                      "component": {
                        "onActionPerformed": {
                          "config": {
                            "script": "\tif self.props.selected:\n\t    self.parent.parent.parent.getChild(\"Row2/Materials\").props.columns[7].filter.enabled \u003d False\n\telse:\n\t    self.parent.parent.parent.getChild(\"Row2/Materials\").props.columns[7].filter.enabled \u003d True\n\t    "
                          },
                          "scope": "G",
                          "type": "script"
                        }
                      }
                    },
                    "meta": {
                      "name": "ShowDeleted"
                    },
                    "position": {
                      "display": false
                    },
                    "props": {
                      "style": {
                        "classes": "Global/MarginLeft"
                      },
                      "text": "Show Deleted"
                    },
                    "type": "ia.input.checkbox"
                  },
                  {
                    "events": {
                      "dom": {
                        "onClick": {
                          "config": {
                            "script": "\teditParams \u003d {\n\t\t\"projectId\":  self.view.params.projectId,\n\t\t\"loopTypeName\": self.parent.parent.getChild(\"Table\").custom.loopTypeName,\n\t\t\"loopTypeId\": self.parent.parent.getChild(\"Table\").custom.loopTypeId,\n\t\t\"loopId\":     self.parent.parent.getChild(\"Table\").custom.loopId,\n\t\t\"loopName\":   self.parent.parent.getChild(\"Table\").custom.loopName,\n\t\t\"functionalAreaId\": self.parent.parent.getChild(\"Table\").custom.areaId,\n\t\t\"functionalAreaName\": self.parent.parent.getChild(\"Table\").custom.areaName,\n\t\t\"subAreaId\":  self.parent.parent.getChild(\"Table\").custom.subAreaId,\n\t\t\"projectName\":  self.view.params.projectName,\n\t\t\"loopAlert\": self.parent.parent.getChild(\"Table\").custom.loopAlert,\n\t\t\"loopStatusKey\": self.parent.parent.getChild(\"Table\").custom.loopStatusKey\n\t}\n\t\n\tsystem.perspective.navigate(view\u003d\u0027ConfigTool/LoopConfigs/LoopConfig\u0027, params\u003deditParams)"
                          },
                          "scope": "G",
                          "type": "script"
                        }
                      }
                    },
                    "meta": {
                      "name": "Rename"
                    },
                    "position": {
                      "basis": "24px",
                      "display": false,
                      "shrink": 0
                    },
                    "propConfig": {
                      "props.color": {
                        "binding": {
                          "config": {
                            "path": "..../Table.props.selection.selectedRow"
                          },
                          "transforms": [
                            {
                              "fallback": "#5A5A5A",
                              "inputType": "expression",
                              "mappings": [
                                {
                                  "input": "None",
                                  "output": "#C9C9C9"
                                }
                              ],
                              "outputType": "scalar",
                              "type": "map"
                            }
                          ],
                          "type": "property"
                        }
                      },
                      "props.style.cursor": {
                        "binding": {
                          "config": {
                            "path": "..../Table.props.selection.selectedRow"
                          },
                          "transforms": [
                            {
                              "fallback": "pointer",
                              "inputType": "expression",
                              "mappings": [
                                {
                                  "input": "None",
                                  "output": "auto"
                                }
                              ],
                              "outputType": "scalar",
                              "type": "map"
                            }
                          ],
                          "type": "property"
                        }
                      }
                    },
                    "props": {
                      "path": "material/contact_mail",
                      "style": {
                        "classes": "",
                        "marginRight": 8
                      }
                    },
                    "type": "ia.display.icon"
                  },
                  {
                    "events": {
                      "dom": {
                        "onClick": {
                          "config": {
                            "script": "\tparams \u003d {\n\t\t\"funcSubArea\": self.parent.parent.getChild(\"Table\").props.columns[7].visible,\n\t\t\"funcArea\": self.parent.parent.getChild(\"Table\").props.columns[9].visible,\n\t\t\"approvedUser\": self.parent.parent.getChild(\"Table\").props.columns[12].visible,\n\t\t\"statusUser\": self.parent.parent.getChild(\"Table\").props.columns[13].visible,\n\t\t\"completedUser\": self.parent.parent.getChild(\"Table\").props.columns[14].visible,\n\t\t\"statusDate\": self.parent.parent.getChild(\"Table\").props.columns[15].visible,\n\t\t\"approvedDate\": self.parent.parent.getChild(\"Table\").props.columns[16].visible,\n\t\t\"completedDate\": self.parent.parent.getChild(\"Table\").props.columns[17].visible\n\t}\n\t\n\tsystem.perspective.print(params)\n\tsystem.perspective.openPopup(\"tableColumns\", \"ConfigTool/Subviews/ColumnSelection\", params\u003dparams, modal\u003dTrue)\n\t"
                          },
                          "scope": "G",
                          "type": "script"
                        }
                      }
                    },
                    "meta": {
                      "name": "Filter"
                    },
                    "position": {
                      "basis": "24px",
                      "display": false,
                      "shrink": 0
                    },
                    "propConfig": {
                      "props.style.cursor": {
                        "binding": {
                          "config": {
                            "path": "../..../Table/Table.props.selection.selectedRow"
                          },
                          "transforms": [
                            {
                              "fallback": "pointer",
                              "inputType": "expression",
                              "mappings": [
                                {
                                  "input": "None",
                                  "output": "auto"
                                }
                              ],
                              "outputType": "scalar",
                              "type": "map"
                            }
                          ],
                          "type": "property"
                        }
                      }
                    },
                    "props": {
                      "path": "material/filter_alt",
                      "style": {
                        "classes": ""
                      }
                    },
                    "type": "ia.display.icon"
                  },
                  {
                    "events": {
                      "dom": {
                        "onClick": {
                          "config": {
                            "script": "\timport time\n\t\n\t# Refresh user table binding and rotate refresh icon.\n\tself.view.refreshBinding(\u0027custom.Data\u0027)\n\tself.rotateIcon()"
                          },
                          "scope": "G",
                          "type": "script"
                        }
                      }
                    },
                    "meta": {
                      "name": "Refresh",
                      "tooltip": {
                        "enabled": true,
                        "text": "Refresh"
                      }
                    },
                    "position": {
                      "basis": "26px",
                      "shrink": 0
                    },
                    "props": {
                      "color": "--neutral-100",
                      "path": "material/refresh",
                      "style": {
                        "classes": "",
                        "marginRight": 8
                      }
                    },
                    "scripts": {
                      "customMethods": [
                        {
                          "name": "rotateIcon",
                          "params": [],
                          "script": "\timport time\n\t\n\t# Rotate icon 360 degrees.\n\tfor degree in range(0,361, 10):\n\t\tself.props.style.transform \u003d \u0027rotate(\u0027 + str(degree) + \u0027deg)\u0027\n\t\ttime.sleep(0.0278)"
                        }
                      ],
                      "extensionFunctions": null,
                      "messageHandlers": [
                        {
                          "messageType": "refreshTable",
                          "pageScope": true,
                          "script": "\t# Refresh user table binding\n\tself.parent.parent.getChild(\"Table\").refreshBinding(\"props.data\")",
                          "sessionScope": true,
                          "viewScope": true
                        }
                      ]
                    },
                    "type": "ia.display.icon"
                  },
                  {
                    "events": {
                      "dom": {
                        "onClick": [
                          {
                            "config": {
                              "script": "\tlogger \u003d system.util.getLogger(\u0027addScrapReason\u0027)\n\t\t\t\n\ttry:\n\t\tselectedRowData \u003d self.parent.parent.parent.getChild(\"Row2/Table\").props.selection.data\n\t\tmodalName \u003d \"addStates\"\n\t\tmodalPath \u003d \"App/EquipmentConfig/Embedded/Popups/AddEditScrapReasons\"\n\t\t\n\t\tparams \u003d {\n\t\t\t\"ModalName\": modalName,\n\t\t\t\"Data\": selectedRowData,\n\t\t\t\"Type\": \"add\"\n\t\t}\n\t\t\n\t\tsystem.perspective.openPopup(modalName, modalPath, params, title\u003d\"Add\", modal\u003dTrue, overlayDismiss\u003dTrue)\n\texcept Exception as e:\n\t\terrorParams \u003d {\n\t\t\t\"ModalName\": \"ErrorModal\",\n\t\t\t\"ErrorMessage\": \u0027There was an error: \u0027 + str(e)\n\t\t}\n\t\t\n\t\tmsg \u003d \u0027There was an error: \u0027 + str(e)\n\t\tsystem.perspective.openPopup(\"ErrorModal\", \"GlobalComponents/Modals/ErrorModal\", errorParams)"
                            },
                            "scope": "G",
                            "type": "script"
                          },
                          {
                            "config": {
                              "draggable": true,
                              "id": "addModal",
                              "modal": true,
                              "overlayDismiss": true,
                              "resizable": true,
                              "showCloseIcon": true,
                              "title": "Add",
                              "type": "toggle",
                              "viewParams": {
                                "ModalName": "addModal",
                                "SiteID": "{session.custom.SelectedSite}"
                              },
                              "viewPath": "App/Schedule/Materials/Embedded/Popups/Add/AddManualMaterials",
                              "viewportBound": false
                            },
                            "enabled": false,
                            "scope": "C",
                            "type": "popup"
                          }
                        ]
                      }
                    },
                    "meta": {
                      "name": "Add",
                      "tooltip": {
                        "enabled": true,
                        "text": "Add"
                      }
                    },
                    "position": {
                      "basis": "29px",
                      "shrink": 0
                    },
                    "props": {
                      "path": "material/add",
                      "style": {
                        "classes": "",
                        "marginRight": 8
                      }
                    },
                    "type": "ia.display.icon"
                  },
                  {
                    "events": {
                      "dom": {
                        "onClick": {
                          "config": {
                            "script": "\tlogger \u003d system.util.getLogger(\u0027editScrapReason\u0027)\n\t\n\ttry:\n\t\tselectedRowData \u003d self.parent.parent.parent.getChild(\"Row2\").getChild(\"Table\").props.selection.data\n\t\tmodalName \u003d \"editStates\"\n\t\tmodalPath \u003d \"App/EquipmentConfig/Embedded/Popups/AddEditScrapReasons\"\n\t\t\n\t\t\n\t\tparams \u003d {\n\t\t\t\"ModalName\": modalName,\n\t\t\t\"Data\": selectedRowData,\n\t\t\t\"Type\": \"edit\"\n\t\t}\n\t\t\n\t\tif len(selectedRowData) \u003e 0:\n\t\t\tsystem.perspective.openPopup(modalName, modalPath, params, title\u003d\"Edit\", modal\u003dTrue, overlayDismiss\u003dTrue)\n\t\telse: raise ValueError(\u0027A row was not selected\u0027)\n\texcept Exception as e:\n\t\terrorParams \u003d {\n\t\t\t\"ModalName\": \"ErrorModal\",\n\t\t\t\"ErrorMessage\": \u0027There was an error: \u0027 + str(e)\n\t\t}\n\t\t\n\t\tmsg \u003d \u0027There was an error: \u0027 + str(e)\n\t\tsystem.perspective.openPopup(\"ErrorModal\", \"GlobalComponents/Modals/ErrorModal\", errorParams)"
                          },
                          "scope": "G",
                          "type": "script"
                        }
                      }
                    },
                    "meta": {
                      "name": "Edit",
                      "tooltip": {
                        "enabled": true,
                        "text": "Edit"
                      }
                    },
                    "position": {
                      "basis": "24px",
                      "shrink": 0
                    },
                    "propConfig": {
                      "props.style.cursor": {
                        "binding": {
                          "config": {
                            "path": "..../Row2/Table.props.selection.selectedRow"
                          },
                          "transforms": [
                            {
                              "fallback": "pointer",
                              "inputType": "expression",
                              "mappings": [
                                {
                                  "input": "None",
                                  "output": "auto"
                                }
                              ],
                              "outputType": "scalar",
                              "type": "map"
                            }
                          ],
                          "type": "property"
                        }
                      }
                    },
                    "props": {
                      "path": "material/create",
                      "style": {
                        "classes": "",
                        "marginRight": 8
                      }
                    },
                    "type": "ia.display.icon"
                  },
                  {
                    "events": {
                      "dom": {
                        "onClick": {
                          "config": {
                            "script": "\tlogger \u003d system.util.getLogger(\u0027scrap_reasons_export\u0027)\n\t\n\ttry:\n\t\tparams \u003d { \u0027Type\u0027: \u0027scrapReasons\u0027 }\n\t\tsystem.perspective.openPopup(\"ImportFile\", \"GlobalComponents/Modals/ImportFile\", params)\n\n\texcept Exception as e:\n\t\terrorParams \u003d {\n\t\t\t\"ModalName\": \"ErrorModal\",\n\t\t\t\"ErrorMessage\": \u0027There was an error: \u0027 + str(e)\n\t\t}\n\t\t\n\t\tmsg \u003d \u0027There was an error: \u0027 + str(e)\n\t\tsystem.perspective.openPopup(\"ErrorModal\", \"GlobalComponents/Modals/ErrorModal\", errorParams)"
                          },
                          "scope": "G",
                          "type": "script"
                        }
                      }
                    },
                    "meta": {
                      "name": "Import",
                      "tooltip": {
                        "enabled": true,
                        "text": "Import"
                      }
                    },
                    "position": {
                      "basis": "24px",
                      "shrink": 0
                    },
                    "propConfig": {
                      "props.style.cursor": {
                        "binding": {
                          "config": {
                            "path": "..../Row2/Table.props.selection.selectedRow"
                          },
                          "transforms": [
                            {
                              "fallback": "pointer",
                              "inputType": "expression",
                              "mappings": [
                                {
                                  "input": "None",
                                  "output": "auto"
                                }
                              ],
                              "outputType": "scalar",
                              "type": "map"
                            }
                          ],
                          "type": "property"
                        }
                      }
                    },
                    "props": {
                      "path": "material/arrow_circle_up",
                      "style": {
                        "classes": "",
                        "marginRight": 8
                      }
                    },
                    "type": "ia.display.icon"
                  },
                  {
                    "events": {
                      "dom": {
                        "onClick": {
                          "config": {
                            "script": "\tlogger \u003d system.util.getLogger(\u0027scrap_reasons_export\u0027)\n\t\n\ttry:\n\t\tdata \u003d self.parent.parent.parent.getChild(\"Row2/Table\").props.data\n\t\tcsv \u003d system.dataset.toCSV(dataset \u003d data, showHeaders \u003d True, forExport \u003d True)\n\t\tfileName \u003d \"ScrapReasons.csv\"\n\t\t\n\t\tsystem.perspective.download(fileName, csv)\n\n\texcept Exception as e:\n\t\terrorParams \u003d {\n\t\t\t\"ModalName\": \"ErrorModal\",\n\t\t\t\"ErrorMessage\": \u0027There was an error: \u0027 + str(e)\n\t\t}\n\t\t\n\t\tmsg \u003d \u0027There was an error: \u0027 + str(e)\n\t\tsystem.perspective.openPopup(\"ErrorModal\", \"GlobalComponents/Modals/ErrorModal\", errorParams)"
                          },
                          "scope": "G",
                          "type": "script"
                        }
                      }
                    },
                    "meta": {
                      "name": "Export",
                      "tooltip": {
                        "enabled": true,
                        "text": "Export"
                      }
                    },
                    "position": {
                      "basis": "24px",
                      "shrink": 0
                    },
                    "propConfig": {
                      "props.style.cursor": {
                        "binding": {
                          "config": {
                            "path": "..../Row2/Table.props.selection.selectedRow"
                          },
                          "transforms": [
                            {
                              "fallback": "pointer",
                              "inputType": "expression",
                              "mappings": [
                                {
                                  "input": "None",
                                  "output": "auto"
                                }
                              ],
                              "outputType": "scalar",
                              "type": "map"
                            }
                          ],
                          "type": "property"
                        }
                      }
                    },
                    "props": {
                      "path": "material/arrow_circle_down",
                      "style": {
                        "classes": "",
                        "marginRight": 8
                      }
                    },
                    "type": "ia.display.icon"
                  },
                  {
                    "events": {
                      "dom": {
                        "onClick": {
                          "config": {
                            "script": "\tlogger \u003d system.util.getLogger(\u0027deleteAsset\u0027)\n\t\t\n\ttry:\n\t\tselectedItemData \u003d self.parent.parent.parent.getChild(\"Row2/Table\").props.selection.data[0]\n\t\tmodalName \u003d \u0027deleteAsset\u0027\n\t\tmodalPath \u003d \u0027App/EquipmentConfig/Embedded/Popups/ConfirmDeleteAsset\u0027\n\t\t\n\t\tparams \u003d {\n\t\t    \u0027ID\u0027: selectedItemData.get(\u0027reason_id\u0027),\n\t\t    \u0027Type\u0027: \u0027\u0027,\n\t\t    \u0027Name\u0027: selectedItemData.get(\u0027reason_name\u0027),\n\t\t    \u0027ModalName\u0027: modalName,\n\t\t    \u0027DeleteType\u0027: \u0027scrap\u0027\n\t\t}\n\t\tsystem.perspective.print(params)\n\t\tif params[\u0027ID\u0027]:\n\t\t    system.perspective.openPopup(modalName, modalPath, params, title\u003d\"Delete\", modal\u003dTrue, overlayDismiss\u003dTrue)\n\t\t    # res \u003d mes.config.sp.deleteAsset(params) # replace with mes.config.equipment call\n\t\t    # if res is not True: raise Exception(str(res))\n\t\telse: \n\t\t    raise ValueError(\u0027A row was not selected or ID is empty\u0027)\n\n\texcept Exception as e:\n\t\terrorParams \u003d {\n\t\t\t\"ModalName\": \"ErrorModal\",\n\t\t\t\"ErrorMessage\": \u0027There was an error: \u0027 + str(e)\n\t\t}\n\t\t\n\t\tmsg \u003d \u0027There was an error: \u0027 + str(e)\n\t\tsystem.perspective.openPopup(\"ErrorModal\", \"GlobalComponents/Modals/ErrorModal\", errorParams)\t\t\n\t\tlogger.warn(msg)\n\t\t\t"
                          },
                          "scope": "G",
                          "type": "script"
                        }
                      }
                    },
                    "meta": {
                      "name": "Delete",
                      "tooltip": {
                        "enabled": true,
                        "text": "Delete"
                      }
                    },
                    "position": {
                      "basis": "27px",
                      "shrink": 0
                    },
                    "propConfig": {
                      "props.style.cursor": {
                        "binding": {
                          "config": {
                            "path": "..../Row2/Table.props.selection.selectedRow"
                          },
                          "transforms": [
                            {
                              "fallback": "pointer",
                              "inputType": "expression",
                              "mappings": [
                                {
                                  "input": "None",
                                  "output": "auto"
                                }
                              ],
                              "outputType": "scalar",
                              "type": "map"
                            }
                          ],
                          "type": "property"
                        }
                      }
                    },
                    "props": {
                      "path": "material/delete",
                      "style": {
                        "classes": "",
                        "marginRight": 8
                      }
                    },
                    "type": "ia.display.icon"
                  }
                ],
                "meta": {
                  "name": "Icons"
                },
                "position": {
                  "basis": "450px",
                  "grow": 1,
                  "shrink": 0
                },
                "props": {
                  "justify": "flex-end",
                  "style": {
                    "overflow": "hidden"
                  },
                  "wrap": "wrap"
                },
                "type": "ia.container.flex"
              }
            ],
            "meta": {
              "name": "Row1"
            },
            "type": "ia.container.flex"
          },
          {
            "children": [
              {
                "meta": {
                  "name": "Table"
                },
                "position": {
                  "basis": "400px",
                  "grow": 1
                },
                "propConfig": {
                  "props.data": {
                    "binding": {
                      "config": {
                        "path": "view.custom.Data"
                      },
                      "type": "property"
                    }
                  }
                },
                "props": {
                  "columns": [
                    {
                      "align": "center",
                      "boolean": "checkbox",
                      "dateFormat": "MM/DD/YYYY",
                      "editable": false,
                      "field": "reason_id",
                      "filter": {
                        "boolean": {
                          "condition": ""
                        },
                        "date": {
                          "condition": "",
                          "value": ""
                        },
                        "enabled": false,
                        "number": {
                          "condition": "",
                          "value": ""
                        },
                        "string": {
                          "condition": "",
                          "value": ""
                        },
                        "visible": "on-hover"
                      },
                      "footer": {
                        "align": "center",
                        "justify": "left",
                        "style": {
                          "classes": ""
                        },
                        "title": ""
                      },
                      "header": {
                        "align": "center",
                        "justify": "left",
                        "style": {
                          "classes": ""
                        },
                        "title": ""
                      },
                      "justify": "auto",
                      "nullFormat": {
                        "includeNullStrings": false,
                        "nullFormatValue": "",
                        "strict": false
                      },
                      "number": "value",
                      "numberFormat": "0,0.##",
                      "progressBar": {
                        "bar": {
                          "color": "",
                          "style": {
                            "classes": ""
                          }
                        },
                        "max": 100,
                        "min": 0,
                        "track": {
                          "color": "",
                          "style": {
                            "classes": ""
                          }
                        },
                        "value": {
                          "enabled": true,
                          "format": "0,0.##",
                          "justify": "center",
                          "style": {
                            "classes": ""
                          }
                        }
                      },
                      "render": "auto",
                      "resizable": true,
                      "sort": "none",
                      "sortable": true,
                      "strictWidth": false,
                      "style": {
                        "classes": ""
                      },
                      "toggleSwitch": {
                        "color": {
                          "selected": "",
                          "unselected": ""
                        }
                      },
                      "viewParams": {},
                      "viewPath": "",
                      "visible": false,
                      "width": ""
                    },
                    {
                      "align": "center",
                      "boolean": "checkbox",
                      "dateFormat": "MM/DD/YYYY",
                      "editable": false,
                      "field": "reason_name",
                      "filter": {
                        "boolean": {
                          "condition": ""
                        },
                        "date": {
                          "condition": "",
                          "value": ""
                        },
                        "enabled": false,
                        "number": {
                          "condition": "",
                          "value": ""
                        },
                        "string": {
                          "condition": "",
                          "value": ""
                        },
                        "visible": "on-hover"
                      },
                      "footer": {
                        "align": "center",
                        "justify": "left",
                        "style": {
                          "classes": ""
                        },
                        "title": ""
                      },
                      "header": {
                        "align": "center",
                        "justify": "left",
                        "style": {
                          "classes": ""
                        },
                        "title": "Name"
                      },
                      "justify": "auto",
                      "nullFormat": {
                        "includeNullStrings": false,
                        "nullFormatValue": "",
                        "strict": false
                      },
                      "number": "value",
                      "numberFormat": "0,0.##",
                      "progressBar": {
                        "bar": {
                          "color": "",
                          "style": {
                            "classes": ""
                          }
                        },
                        "max": 100,
                        "min": 0,
                        "track": {
                          "color": "",
                          "style": {
                            "classes": ""
                          }
                        },
                        "value": {
                          "enabled": true,
                          "format": "0,0.##",
                          "justify": "center",
                          "style": {
                            "classes": ""
                          }
                        }
                      },
                      "render": "auto",
                      "resizable": true,
                      "sort": "none",
                      "sortable": true,
                      "strictWidth": false,
                      "style": {
                        "classes": "",
                        "marginLeft": 5
                      },
                      "toggleSwitch": {
                        "color": {
                          "selected": "",
                          "unselected": ""
                        }
                      },
                      "viewParams": {},
                      "viewPath": "",
                      "visible": true,
                      "width": ""
                    },
                    {
                      "align": "center",
                      "boolean": "checkbox",
                      "dateFormat": "MM/DD/YYYY",
                      "editable": false,
                      "field": "reason_code",
                      "filter": {
                        "boolean": {
                          "condition": ""
                        },
                        "date": {
                          "condition": "",
                          "value": ""
                        },
                        "enabled": false,
                        "number": {
                          "condition": "",
                          "value": ""
                        },
                        "string": {
                          "condition": "",
                          "value": ""
                        },
                        "visible": "on-hover"
                      },
                      "footer": {
                        "align": "center",
                        "justify": "left",
                        "style": {
                          "classes": ""
                        },
                        "title": ""
                      },
                      "header": {
                        "align": "center",
                        "justify": "left",
                        "style": {
                          "classes": ""
                        },
                        "title": "Code"
                      },
                      "justify": "auto",
                      "nullFormat": {
                        "includeNullStrings": false,
                        "nullFormatValue": "",
                        "strict": false
                      },
                      "number": "value",
                      "numberFormat": "0,0.##",
                      "progressBar": {
                        "bar": {
                          "color": "",
                          "style": {
                            "classes": ""
                          }
                        },
                        "max": 100,
                        "min": 0,
                        "track": {
                          "color": "",
                          "style": {
                            "classes": ""
                          }
                        },
                        "value": {
                          "enabled": true,
                          "format": "0,0.##",
                          "justify": "center",
                          "style": {
                            "classes": ""
                          }
                        }
                      },
                      "render": "auto",
                      "resizable": true,
                      "sort": "none",
                      "sortable": true,
                      "strictWidth": false,
                      "style": {
                        "classes": ""
                      },
                      "toggleSwitch": {
                        "color": {
                          "selected": "",
                          "unselected": ""
                        }
                      },
                      "viewParams": {},
                      "viewPath": "",
                      "visible": true,
                      "width": ""
                    },
                    {
                      "align": "center",
                      "boolean": "checkbox",
                      "dateFormat": "MM/DD/YYYY",
                      "editable": false,
                      "field": "reason_description",
                      "filter": {
                        "boolean": {
                          "condition": ""
                        },
                        "date": {
                          "condition": "",
                          "value": ""
                        },
                        "enabled": false,
                        "number": {
                          "condition": "",
                          "value": ""
                        },
                        "string": {
                          "condition": "",
                          "value": ""
                        },
                        "visible": "on-hover"
                      },
                      "footer": {
                        "align": "center",
                        "justify": "left",
                        "style": {
                          "classes": ""
                        },
                        "title": ""
                      },
                      "header": {
                        "align": "center",
                        "justify": "left",
                        "style": {
                          "classes": ""
                        },
                        "title": "Description"
                      },
                      "justify": "auto",
                      "nullFormat": {
                        "includeNullStrings": false,
                        "nullFormatValue": "",
                        "strict": false
                      },
                      "number": "value",
                      "numberFormat": "0,0.##",
                      "progressBar": {
                        "bar": {
                          "color": "",
                          "style": {
                            "classes": ""
                          }
                        },
                        "max": 100,
                        "min": 0,
                        "track": {
                          "color": "",
                          "style": {
                            "classes": ""
                          }
                        },
                        "value": {
                          "enabled": true,
                          "format": "0,0.##",
                          "justify": "center",
                          "style": {
                            "classes": ""
                          }
                        }
                      },
                      "render": "auto",
                      "resizable": true,
                      "sort": "none",
                      "sortable": true,
                      "strictWidth": false,
                      "style": {
                        "classes": ""
                      },
                      "toggleSwitch": {
                        "color": {
                          "selected": "",
                          "unselected": ""
                        }
                      },
                      "viewParams": {},
                      "viewPath": "",
                      "visible": true,
                      "width": ""
                    },
                    {
                      "align": "center",
                      "boolean": "checkbox",
                      "dateFormat": "MM/DD/YYYY",
                      "editable": false,
                      "field": "reason_category_id",
                      "filter": {
                        "boolean": {
                          "condition": ""
                        },
                        "date": {
                          "condition": "",
                          "value": ""
                        },
                        "enabled": false,
                        "number": {
                          "condition": "",
                          "value": ""
                        },
                        "string": {
                          "condition": "",
                          "value": ""
                        },
                        "visible": "on-hover"
                      },
                      "footer": {
                        "align": "center",
                        "justify": "left",
                        "style": {
                          "classes": ""
                        },
                        "title": ""
                      },
                      "header": {
                        "align": "center",
                        "justify": "left",
                        "style": {
                          "classes": ""
                        },
                        "title": "Category ID"
                      },
                      "justify": "auto",
                      "nullFormat": {
                        "includeNullStrings": false,
                        "nullFormatValue": "",
                        "strict": false
                      },
                      "number": "value",
                      "numberFormat": "0,0.##",
                      "progressBar": {
                        "bar": {
                          "color": "",
                          "style": {
                            "classes": ""
                          }
                        },
                        "max": 100,
                        "min": 0,
                        "track": {
                          "color": "",
                          "style": {
                            "classes": ""
                          }
                        },
                        "value": {
                          "enabled": true,
                          "format": "0,0.##",
                          "justify": "center",
                          "style": {
                            "classes": ""
                          }
                        }
                      },
                      "render": "auto",
                      "resizable": true,
                      "sort": "none",
                      "sortable": true,
                      "strictWidth": false,
                      "style": {
                        "classes": ""
                      },
                      "toggleSwitch": {
                        "color": {
                          "selected": "",
                          "unselected": ""
                        }
                      },
                      "viewParams": {},
                      "viewPath": "",
                      "visible": false,
                      "width": ""
                    },
                    {
                      "align": "center",
                      "boolean": "checkbox",
                      "dateFormat": "MM/DD/YYYY",
                      "editable": false,
                      "field": "time_retired",
                      "filter": {
                        "boolean": {
                          "condition": ""
                        },
                        "date": {
                          "condition": "",
                          "value": ""
                        },
                        "enabled": false,
                        "number": {
                          "condition": "",
                          "value": ""
                        },
                        "string": {
                          "condition": "",
                          "value": ""
                        },
                        "visible": "on-hover"
                      },
                      "footer": {
                        "align": "center",
                        "justify": "left",
                        "style": {
                          "classes": ""
                        },
                        "title": ""
                      },
                      "header": {
                        "align": "center",
                        "justify": "left",
                        "style": {
                          "classes": ""
                        },
                        "title": "Time Retired"
                      },
                      "justify": "auto",
                      "nullFormat": {
                        "includeNullStrings": false,
                        "nullFormatValue": "",
                        "strict": false
                      },
                      "number": "value",
                      "numberFormat": "0,0.##",
                      "progressBar": {
                        "bar": {
                          "color": "",
                          "style": {
                            "classes": ""
                          }
                        },
                        "max": 100,
                        "min": 0,
                        "track": {
                          "color": "",
                          "style": {
                            "classes": ""
                          }
                        },
                        "value": {
                          "enabled": true,
                          "format": "0,0.##",
                          "justify": "center",
                          "style": {
                            "classes": ""
                          }
                        }
                      },
                      "render": "auto",
                      "resizable": true,
                      "sort": "none",
                      "sortable": true,
                      "strictWidth": false,
                      "style": {
                        "classes": ""
                      },
                      "toggleSwitch": {
                        "color": {
                          "selected": "",
                          "unselected": ""
                        }
                      },
                      "viewParams": {},
                      "viewPath": "",
                      "visible": true,
                      "width": ""
                    },
                    {
                      "align": "center",
                      "boolean": "checkbox",
                      "dateFormat": "MM/DD/YYYY",
                      "editable": false,
                      "field": "reason_category_name",
                      "filter": {
                        "boolean": {
                          "condition": ""
                        },
                        "date": {
                          "condition": "",
                          "value": ""
                        },
                        "enabled": false,
                        "number": {
                          "condition": "",
                          "value": ""
                        },
                        "string": {
                          "condition": "",
                          "value": ""
                        },
                        "visible": "on-hover"
                      },
                      "footer": {
                        "align": "center",
                        "justify": "left",
                        "style": {
                          "classes": ""
                        },
                        "title": ""
                      },
                      "header": {
                        "align": "center",
                        "justify": "left",
                        "style": {
                          "classes": ""
                        },
                        "title": "Category Name"
                      },
                      "justify": "auto",
                      "nullFormat": {
                        "includeNullStrings": false,
                        "nullFormatValue": "",
                        "strict": false
                      },
                      "number": "value",
                      "numberFormat": "0,0.##",
                      "progressBar": {
                        "bar": {
                          "color": "",
                          "style": {
                            "classes": ""
                          }
                        },
                        "max": 100,
                        "min": 0,
                        "track": {
                          "color": "",
                          "style": {
                            "classes": ""
                          }
                        },
                        "value": {
                          "enabled": true,
                          "format": "0,0.##",
                          "justify": "center",
                          "style": {
                            "classes": ""
                          }
                        }
                      },
                      "render": "auto",
                      "resizable": true,
                      "sort": "none",
                      "sortable": true,
                      "strictWidth": false,
                      "style": {
                        "classes": ""
                      },
                      "toggleSwitch": {
                        "color": {
                          "selected": "",
                          "unselected": ""
                        }
                      },
                      "viewParams": {},
                      "viewPath": "",
                      "visible": true,
                      "width": ""
                    },
                    {
                      "align": "center",
                      "boolean": "checkbox",
                      "dateFormat": "MM/DD/YYYY",
                      "editable": false,
                      "field": "reason_category_description",
                      "filter": {
                        "boolean": {
                          "condition": ""
                        },
                        "date": {
                          "condition": "",
                          "value": ""
                        },
                        "enabled": false,
                        "number": {
                          "condition": "",
                          "value": ""
                        },
                        "string": {
                          "condition": "",
                          "value": ""
                        },
                        "visible": "on-hover"
                      },
                      "footer": {
                        "align": "center",
                        "justify": "left",
                        "style": {
                          "classes": ""
                        },
                        "title": ""
                      },
                      "header": {
                        "align": "center",
                        "justify": "left",
                        "style": {
                          "classes": ""
                        },
                        "title": ""
                      },
                      "justify": "auto",
                      "nullFormat": {
                        "includeNullStrings": false,
                        "nullFormatValue": "",
                        "strict": false
                      },
                      "number": "value",
                      "numberFormat": "0,0.##",
                      "progressBar": {
                        "bar": {
                          "color": "",
                          "style": {
                            "classes": ""
                          }
                        },
                        "max": 100,
                        "min": 0,
                        "track": {
                          "color": "",
                          "style": {
                            "classes": ""
                          }
                        },
                        "value": {
                          "enabled": true,
                          "format": "0,0.##",
                          "justify": "center",
                          "style": {
                            "classes": ""
                          }
                        }
                      },
                      "render": "auto",
                      "resizable": true,
                      "sort": "none",
                      "sortable": true,
                      "strictWidth": false,
                      "style": {
                        "classes": ""
                      },
                      "toggleSwitch": {
                        "color": {
                          "selected": "",
                          "unselected": ""
                        }
                      },
                      "viewParams": {},
                      "viewPath": "",
                      "visible": false,
                      "width": ""
                    }
                  ],
                  "footerGroups": [
                    []
                  ]
                },
                "scripts": {
                  "customMethods": [],
                  "extensionFunctions": null,
                  "messageHandlers": [
                    {
                      "messageType": "refreshScrapReason",
                      "pageScope": true,
                      "script": "\t# implement your handler here\n\tself.view.refreshBinding(\u0027custom.Data\u0027)",
                      "sessionScope": false,
                      "viewScope": false
                    }
                  ]
                },
                "type": "ia.display.table"
              }
            ],
            "meta": {
              "name": "Row2"
            },
            "position": {
              "grow": 1
            },
            "type": "ia.container.flex"
          }
        ],
        "meta": {
          "name": "Reason"
        },
        "position": {
          "basis": "50%"
        },
        "props": {
          "direction": "column"
        },
        "type": "ia.container.flex"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "direction": "column"
    },
    "scripts": {
      "customMethods": [],
      "extensionFunctions": null,
      "messageHandlers": [
        {
          "messageType": "refreshStatesTable",
          "pageScope": true,
          "script": "\t# implement your handler here\n\tself.view.refreshBinding(\u0027custom.Data\u0027)\n\tself.view.refreshBinding(\u0027custom.CategoriesData\u0027)",
          "sessionScope": false,
          "viewScope": false
        },
        {
          "messageType": "importScrapCategory",
          "pageScope": true,
          "script": "\tlogger \u003d system.util.getLogger(\"insertScrapCategory\")\n\t\t    \n\ttry:\n\t    csvString \u003d payload.get(\"csvString\")\n\t    csvDict \u003d payload.get(\"csvDS\")\n\t    pyData \u003d system.dataset.toPyDataSet(csvDict)\n\t    existingData \u003d system.dataset.toPyDataSet(self.view.custom.Data)\n\t    \n\t    for row in pyData:\n\t    \tif any(r[\"reason_category_name\"] \u003d\u003d row[\"reason_category_name\"] for r in existingData):\n\t    \t            # If the combination already exists, log and continue to the next row\n\t    \t            logger.warn(\"Combination of ReasonCode {} and LineID {} already exists.\".format(row[\"reason_category_name\"]))\n\t    \t            continue\n\n\t        # If the combination doesn\u0027t exist, insert the new record\n\t        params \u003d {\n\t            \"id\": 0,\n\t            \"time_retired\": row[\"time_retired\"],\n\t            \"reason_category_description\": row[\"reason_category_description\"],\n\t            \"reason_category_name\": row[\"reason_category_name\"]\n\t        }\n\t\n\t        res \u003d mes.config.sp.addEditScrapReasonCategory(params)\n\t        if res.get(\u0027status\u0027) !\u003d \u0027success\u0027: \n\t            raise ValueError(\u0027Sproc call failed for row {}. Result: {}\u0027.format(row, str(res)))\n\t    \n\t    system.perspective.sendMessage(\u0027refreshTree\u0027)\n\t    system.perspective.sendMessage(\u0027refreshStatesTable\u0027)\n\t    #system.perspective.closePopup(self.view.params.ModalName)\n\t\n\texcept Exception as e:\n\t    errorParams \u003d {\n\t        \"ModalName\": \"ErrorModal\",\n\t        \"ErrorMessage\": str(e),\n\t    }\n\t    \n\t    system.perspective.openPopup(\"ErrorModal\", \"GlobalComponents/Modals/ErrorModal\", errorParams)\n\t    logger.warn(\u0027There was an error: \u0027 + str(e))",
          "sessionScope": false,
          "viewScope": false
        },
        {
          "messageType": "importScrapReasons",
          "pageScope": true,
          "script": "\tlogger \u003d system.util.getLogger(\"insertScrapReasons\")\n\t        \n\ttry:\n\t    csvString \u003d payload.get(\"csvString\")\n\t    csvDict \u003d payload.get(\"csvDS\")\n\t    pyData \u003d system.dataset.toPyDataSet(csvDict)\n\t    existingData \u003d system.dataset.toPyDataSet(self.view.custom.Data)\n\t    system.perspective.print(pyData)\n\t    \n\t    db \u003d \u0027MSSQL_MES\u0027\n\t    \n\t    for row in pyData:\n\t        if any(r[\"reason_code\"] \u003d\u003d row[\"reason_code\"] for r in existingData):\n\t            # If the combination already exists, log and continue to the next row\n\t            logger.warn(\"Combination of ReasonCode {} already exists.\".format(row[\"reason_code\"]))\n\t            continue\n\t        \n\t        # Fetch the ID for the given reason_category_name\n\t        query \u003d \"SELECT ID FROM scrap.reason_category WHERE reason_category_name \u003d ?\"\n\t        reason_category_id \u003d system.db.runScalarPrepQuery(query, [row[\"reason_category_name\"]], db)\n\t        \n\t        # If no matching ID found, you might want to log an error or handle it as required\n\t        if reason_category_id is None:\n\t            logger.warn(\"No matching ID found for reason_category_name: {}\".format(row[\"reason_category_name\"]))\n\t            continue\n\t        \n\t        # Replace the \"reason_category_id\" with the fetched ID\n\t        params \u003d {\n\t            \"id\": 0,\n\t            \"time_retired\": row[\"time_retired\"],\n\t            \"reason_description\": row[\"reason_description\"],\n\t            \"reason_name\": row[\"reason_name\"],\n\t            \"reason_code\": row[\"reason_code\"],\n\t            \"reason_category_id\": reason_category_id  \n\t        }\n\t\n\t        res \u003d mes.config.sp.addEditScrapReason(params)\n\t        if res.get(\u0027status\u0027) !\u003d \u0027success\u0027: \n\t            raise ValueError(\u0027Sproc call failed for row {}. Result: {}\u0027.format(row, str(res)))\n\t    \n\t    system.perspective.sendMessage(\u0027refreshTree\u0027)\n\t    system.perspective.sendMessage(\u0027refreshStatesTable\u0027)\n\t    #system.perspective.closePopup(self.view.params.ModalName)\n\t\n\texcept Exception as e:\n\t    errorParams \u003d {\n\t        \"ModalName\": \"ErrorModal\",\n\t        \"ErrorMessage\": str(e),\n\t    }\n\t    \n\t    system.perspective.openPopup(\"ErrorModal\", \"GlobalComponents/Modals/ErrorModal\", errorParams)\n\t    logger.warn(\u0027There was an error: \u0027 + str(e))",
          "sessionScope": false,
          "viewScope": false
        }
      ]
    },
    "type": "ia.container.flex"
  }
}