{
  "custom": {
    "Params": {
      "Type": "edit"
    }
  },
  "params": {
    "DeleteType": "value",
    "ID": "value",
    "ModalName": "value",
    "Name": "value",
    "Path": "value",
    "Type": "edit"
  },
  "propConfig": {
    "custom.Params": {
      "persistent": true
    },
    "custom.Params.EqType": {
      "binding": {
        "config": {
          "path": "view.params.Type"
        },
        "type": "property"
      }
    },
    "custom.Params.ID": {
      "binding": {
        "config": {
          "path": "view.params.ID"
        },
        "type": "property"
      }
    },
    "custom.Params.type": {
      "binding": {
        "config": {
          "path": "view.params.DeleteType"
        },
        "transforms": [
          {
            "expression": "if({value} \u003d \u0027scrap\u0027, \u0027reason\u0027, \u0027reason_category\u0027)",
            "type": "expression"
          }
        ],
        "type": "property"
      }
    },
    "params.DeleteType": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.ID": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.ModalName": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.Name": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.Path": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.Type": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 256,
      "width": 460
    }
  },
  "root": {
    "children": [
      {
        "children": [
          {
            "meta": {
              "name": "Label"
            },
            "position": {
              "basis": "32px",
              "grow": 1
            },
            "propConfig": {
              "props.text": {
                "binding": {
                  "config": {
                    "path": "view.params.Data.Description"
                  },
                  "type": "property"
                }
              }
            },
            "props": {
              "style": {
                "classes": "Global/MarginBottom Text/Heading"
              }
            },
            "type": "ia.display.label"
          }
        ],
        "meta": {
          "name": "Row1"
        },
        "position": {
          "display": false
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "meta": {
              "name": "Label"
            },
            "position": {
              "basis": "32px",
              "grow": 1
            },
            "props": {
              "style": {
                "classes": "Global/MarginBottom "
              },
              "text": "Are you sure you want to delete asset, this operation cannot be undone!",
              "textStyle": {
                "fontSize": "1.5rem",
                "textAlign": "center"
              }
            },
            "type": "ia.display.label"
          },
          {
            "meta": {
              "name": "Label_0"
            },
            "position": {
              "basis": "autp"
            },
            "propConfig": {
              "props.text": {
                "binding": {
                  "config": {
                    "path": "view.params.Name"
                  },
                  "type": "property"
                }
              }
            },
            "props": {
              "style": {
                "classes": "Global/MarginBottom "
              },
              "textStyle": {
                "color": "--error",
                "fontSize": "1.5rem",
                "fontWeight": "bold",
                "textAlign": "center",
                "textDecoration": "underline"
              }
            },
            "type": "ia.display.label"
          }
        ],
        "meta": {
          "name": "Row2"
        },
        "position": {
          "grow": 1
        },
        "props": {
          "alignContent": "center",
          "alignItems": "center",
          "direction": "column",
          "justify": "center"
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "children": [
              {
                "events": {
                  "dom": {
                    "onClick": {
                      "config": {
                        "script": "    logger \u003d system.util.getLogger(\u0027dynamic_deletion\u0027)\n    \n    try:\n        params \u003d self.view.custom.Params\n        selectType \u003d self.view.params.DeleteType\n\n        # Mapping types to functions\n        function_map \u003d {\n            \u0027asset\u0027: mes.config.sp.deleteAsset,\n            \u0027scrap\u0027: mes.config.sp.deleteScrapReason,\n            \u0027scrapcategory\u0027: mes.config.sp.deleteScrapReason\n        }\n        \n        # Fetch the appropriate function\n        function_to_run \u003d function_map.get(selectType)\n        \n        if function_to_run is None:\n            raise ValueError(\u0027Invalid type: {}. Expected one of {}\u0027.format(selectType, list(function_map.keys())))\n        \n        res \u003d function_to_run(params)\n \n        if res[\u0027status\u0027] !\u003d \u0027success\u0027: \n            raise ValueError(\u0027Sproc call failed. \u0027 + str(res))\n            \n        if selectType \u003d\u003d \u0027asset\u0027:\n            tagPath \u003d self.view.params.Path\n            mes.config.tag.deleteEq(tagPath)\n            \n        \n        system.perspective.sendMessage(\u0027refreshTree\u0027)\n        system.perspective.sendMessage(\u0027refreshStatesTable\u0027)\n        system.perspective.sendMessage(\u0027refreshScrapReasonCategory\u0027)\n        system.perspective.closePopup(self.view.params.ModalName)\n    except Exception as e:\n        errorParams \u003d {\n            \"ModalName\": \"ErrorModal\",\n            \"ErrorMessage\": str(e),\n        }\n        \n        system.perspective.openPopup(\"ErrorModal\", \"GlobalComponents/Modals/ErrorModal\", errorParams)\n        logger.warn(\u0027There was an error: \u0027 + str(e))"
                      },
                      "scope": "G",
                      "type": "script"
                    }
                  }
                },
                "meta": {
                  "name": "SaveButton"
                },
                "position": {
                  "basis": "129px"
                },
                "props": {
                  "params": {
                    "BackgroundColor": "--error",
                    "DisabledPopup": {
                      "message": "Please sign in as quarterback to proceed.",
                      "messageType": "",
                      "payload": {},
                      "title": "Invalid Permissions"
                    },
                    "Enabled": true,
                    "Hover": true,
                    "IconPath": "material/delete",
                    "IsSelectable": false,
                    "Label": "Delete",
                    "Selected": true,
                    "Size": "value",
                    "Type": ""
                  },
                  "path": "GlobalComponents/Buttons/Button",
                  "style": {
                    "marginLeft": "auto",
                    "marginRight": "auto"
                  }
                },
                "type": "ia.display.view"
              }
            ],
            "meta": {
              "name": "Save"
            },
            "position": {
              "basis": "132px"
            },
            "props": {
              "style": {
                "marginLeft": "auto",
                "marginRight": "auto"
              }
            },
            "type": "ia.container.flex"
          },
          {
            "children": [
              {
                "events": {
                  "dom": {
                    "onClick": {
                      "config": {
                        "script": "\tsystem.perspective.closePopup(self.view.params.ModalName)"
                      },
                      "scope": "G",
                      "type": "script"
                    }
                  }
                },
                "meta": {
                  "name": "Close"
                },
                "position": {
                  "basis": "129px"
                },
                "props": {
                  "params": {
                    "BackgroundColor": "value",
                    "DisabledPopup": {
                      "message": "Please sign in as quarterback to proceed.",
                      "messageType": "",
                      "payload": {},
                      "title": "Invalid Permissions"
                    },
                    "Enabled": true,
                    "Hover": true,
                    "IconPath": "material/close",
                    "IsSelectable": false,
                    "Label": "Close",
                    "Selected": true,
                    "Size": "value",
                    "Type": "normalsuccess"
                  },
                  "path": "GlobalComponents/Buttons/Button",
                  "style": {
                    "marginLeft": "auto",
                    "marginRight": "auto"
                  }
                },
                "type": "ia.display.view"
              }
            ],
            "meta": {
              "name": "ClosePopup"
            },
            "position": {
              "basis": "132px"
            },
            "props": {
              "style": {
                "marginLeft": "auto",
                "marginRight": "auto"
              }
            },
            "type": "ia.container.flex"
          }
        ],
        "meta": {
          "name": "Row3"
        },
        "position": {
          "basis": "42px"
        },
        "props": {
          "style": {
            "classes": "Global/MarginBottom Global/MarginLeft Global/MarginRight"
          }
        },
        "type": "ia.container.flex"
      }
    ],
    "events": {
      "dom": {
        "onClick": {
          "config": {
            "script": "\tsystem.perspective.print(self.view.custom.Params)"
          },
          "scope": "G",
          "type": "script"
        }
      }
    },
    "meta": {
      "name": "root"
    },
    "props": {
      "direction": "column",
      "style": {
        "classes": "Global/MarginAllTop"
      }
    },
    "type": "ia.container.flex"
  }
}