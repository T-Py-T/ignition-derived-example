{
  "custom": {
    "Instances": [
      {
        "EqPath": "[GatewayHealth]Gateways/Tag1",
        "Name": "201"
      },
      {
        "EqPath": "[GatewayHealth]Gateways/Tag1",
        "Name": "202"
      },
      {
        "EqPath": "[GatewayHealth]Gateways/Tag1",
        "Name": "ACCTC1"
      },
      {
        "EqPath": "[GatewayHealth]Gateways/Tag1",
        "Name": "ACCTC2"
      },
      {
        "EqPath": "[GatewayHealth]Gateways/Tag1",
        "Name": "EXPP1"
      },
      {
        "EqPath": "[GatewayHealth]Gateways/Tag1",
        "Name": "EXPP2"
      },
      {
        "EqPath": "[GatewayHealth]Gateways/Tag1",
        "Name": "FB1"
      },
      {
        "EqPath": "[GatewayHealth]Gateways/Tag1",
        "Name": "FB2"
      },
      {
        "EqPath": "[GatewayHealth]Gateways/Tag1",
        "Name": "LabSim"
      },
      {
        "EqPath": "[GatewayHealth]Gateways/Tag1",
        "Name": "NCC_PLC"
      },
      {
        "EqPath": "[GatewayHealth]Gateways/Tag1",
        "Name": "SFN1"
      },
      {
        "EqPath": "[GatewayHealth]Gateways/Tag1",
        "Name": "SFN2"
      },
      {
        "EqPath": "[GatewayHealth]Gateways/Tag1",
        "Name": "SFN3"
      },
      {
        "EqPath": "[GatewayHealth]Gateways/Tag1",
        "Name": "SFN4"
      },
      {
        "EqPath": "[GatewayHealth]Gateways/Tag1",
        "Name": "SFN5"
      },
      {
        "EqPath": "[GatewayHealth]Gateways/Tag1",
        "Name": "SFN6"
      },
      {
        "EqPath": "[GatewayHealth]Gateways/Tag1",
        "Name": "SFNP1"
      },
      {
        "EqPath": "[GatewayHealth]Gateways/Tag1",
        "Name": "SFNP2"
      },
      {
        "EqPath": "[GatewayHealth]Gateways/Tag1",
        "Name": "TestProgram"
      }
    ],
    "Server": null
  },
  "params": {
    "EqPath": "[GatewayHealth]Gateways/Tag1",
    "State": ""
  },
  "propConfig": {
    "custom.Instances": {
      "binding": {
        "config": {
          "path": "view.params.EqPath"
        },
        "transforms": [
          {
            "code": "\tinstances \u003d []\n\tstartPath \u003d value + \"/Devices\"\n\tres \u003d system.tag.browse(path\u003dstartPath)\n\n\tfor result in res.getResults():\n\t\tinstances.append({\"Name\":result[\"name\"], \"EqPath\": value})\n\treturn instances",
            "type": "script"
          }
        ],
        "type": "property"
      },
      "persistent": true
    },
    "custom.Server": {
      "binding": {
        "config": {
          "path": "view.params.EqPath"
        },
        "transforms": [
          {
            "code": "\n\tfullPath \u003d value + \"/OPC/Connections\"\n\ttag \u003d system.tag.browse(fullPath)\n\t\n\treturn tag[1][\"name\"]",
            "type": "script"
          }
        ],
        "type": "property"
      },
      "persistent": true
    },
    "params.EqPath": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.State": {
      "binding": {
        "config": {
          "path": "/root/FlexRepeater.props.instances"
        },
        "transforms": [
          {
            "code": "\tif len(value) \u003d\u003d 0:\n\t\treturn \"Empty\"\n\telse:\n\t\treturn \"\"",
            "type": "script"
          }
        ],
        "type": "property"
      },
      "paramDirection": "output",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 966,
      "width": 266
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "FlexRepeater"
        },
        "position": {
          "shrink": 0
        },
        "propConfig": {
          "props.instances": {
            "binding": {
              "config": {
                "path": "view.custom.Instances"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "direction": "column",
          "elementPosition": {
            "basis": "auto"
          },
          "path": "App/GatewayHealth/Diagnostics/Embedded/OPCDevice",
          "useDefaultViewHeight": false,
          "useDefaultViewWidth": false
        },
        "type": "ia.display.flex-repeater"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "direction": "column",
      "style": {
        "overflow": "hidden"
      }
    },
    "type": "ia.container.flex"
  }
}