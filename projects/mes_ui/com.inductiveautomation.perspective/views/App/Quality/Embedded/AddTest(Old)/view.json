{
  "custom": {
    "DATAEntered": false,
    "GetTestType": {
      "$": [
        "ds",
        192,
        1696430713128
      ],
      "$columns": [
        {
          "data": [
            1,
            2,
            3,
            31,
            37,
            38,
            39
          ],
          "name": "ID",
          "type": "Integer"
        },
        {
          "data": [
            "Part",
            "Material Lot",
            "Testing123",
            "New Test",
            "Visual Check",
            "Dimension Check",
            "Color Check"
          ],
          "name": "Name",
          "type": "String"
        },
        {
          "data": [
            "Part",
            "Material Lot",
            "Part",
            "New Category",
            "Visual Check",
            "Dimension Check",
            "Color Check"
          ],
          "name": "TestTypeCategory",
          "type": "String"
        },
        {
          "data": [
            null,
            null,
            "Testing XYZ",
            "New Description Testing\n123",
            "Check For Visual Items",
            "Check for Dimensions",
            "Check for Colors"
          ],
          "name": "Description",
          "type": "String"
        },
        {
          "data": [
            1684940955110,
            1684940955110,
            1684940955110,
            1696342801027,
            1696360259567,
            1696360277520,
            1696360290770
          ],
          "name": "DateCreated",
          "type": "Date"
        },
        {
          "data": [
            1684940955110,
            1684940955110,
            1696268436570,
            1696342825247,
            1696360259567,
            1696360277520,
            1696360290770
          ],
          "name": "DateModified",
          "type": "Date"
        }
      ]
    },
    "HasTestAttributes": false,
    "Label": "INVALID PART",
    "MachineDS": {
      "$": [
        "ds",
        192,
        1686092091593
      ],
      "$columns": [
        {
          "data": [
            7
          ],
          "name": "ID",
          "type": "Integer"
        },
        {
          "data": [
            "MT-375756"
          ],
          "name": "Name",
          "type": "String"
        },
        {
          "data": [
            "758092149"
          ],
          "name": "LotNumber",
          "type": "String"
        },
        {
          "data": [
            null
          ],
          "name": "Description",
          "type": "String"
        },
        {
          "data": [
            28
          ],
          "name": "RemainingQty",
          "type": "Double"
        },
        {
          "data": [
            true
          ],
          "name": "IsEnabled",
          "type": "Boolean"
        },
        {
          "data": [
            1685717735387
          ],
          "name": "DateModified",
          "type": "Date"
        }
      ]
    },
    "MaterialDS": {
      "$": [
        "ds",
        192,
        1696430713177
      ],
      "$columns": [
        {
          "data": [],
          "name": "ID",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "MaterialID",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "Name",
          "type": "String"
        },
        {
          "data": [],
          "name": "LotNumber",
          "type": "String"
        },
        {
          "data": [],
          "name": "Description",
          "type": "String"
        },
        {
          "data": [],
          "name": "RemainingQty",
          "type": "Double"
        },
        {
          "data": [],
          "name": "IsEnabled",
          "type": "Boolean"
        },
        {
          "data": [],
          "name": "DateModified",
          "type": "Date"
        }
      ]
    },
    "MaterialID": null,
    "MaterialLotID": null,
    "MaterialLotNumber": "",
    "PartDS": {
      "$": [
        "ds",
        192,
        1696430713176
      ],
      "$columns": [
        {
          "data": [],
          "name": "ID",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "Label",
          "type": "String"
        },
        {
          "data": [],
          "name": "ProductCodeID",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "ProductCode",
          "type": "String"
        },
        {
          "data": [],
          "name": "InventoryID",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "Inventory",
          "type": "String"
        },
        {
          "data": [],
          "name": "InventoryLocation",
          "type": "String"
        },
        {
          "data": [],
          "name": "CreationTime",
          "type": "Date"
        },
        {
          "data": [],
          "name": "AccumulatorID",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "Accumulator",
          "type": "String"
        },
        {
          "data": [],
          "name": "WorkOrder",
          "type": "String"
        }
      ]
    },
    "PartID": "",
    "PartLabelValid": false,
    "ProductCodeID": null,
    "TestType": null,
    "TestTypeCategory": null,
    "TestTypeID": null
  },
  "params": {},
  "propConfig": {
    "custom.DATAEntered": {
      "binding": {
        "config": {
          "expression": "if(\r\n\t(len({view.custom.TestTypeCategory}) \u003e 1 \u0026\u0026 {view.custom.PartID} \u003e\u003d 1) ||\r\n\t({view.custom.TestTypeCategory} \u003d \u0027Material Lot\u0027 \u0026\u0026 {view.custom.MaterialLotID} \u003e\u003d 1),\r\n\ttrue,\r\n\tfalse\r\n)"
        },
        "type": "expr"
      },
      "persistent": true
    },
    "custom.GetTestType": {
      "binding": {
        "config": {
          "expression": "runscript(\u0027mes.quality.sp.getTestTypes\u0027, 0, {session.custom.SelectedSite})"
        },
        "type": "expr"
      },
      "persistent": true
    },
    "custom.HasTestAttributes": {
      "binding": {
        "config": {
          "path": "view.custom.DATAEntered"
        },
        "transforms": [
          {
            "code": "\tTestTypeID    \u003d self.custom.TestTypeID\n\tPartID        \u003d self.custom.ProductCodeID\n\tMaterialLotID \u003d self.custom.MaterialID\n\t\n\tTestAttributes \u003d mes.quality.sp.getTestAttributes(TestTypeID, PartID, MaterialLotID)\n\tHasAttributes \u003d True if TestAttributes and len(system.dataset.toPyDataSet(TestAttributes)) \u003e 0 else False\n\t\n\treturn HasAttributes",
            "type": "script"
          }
        ],
        "type": "property"
      },
      "persistent": true
    },
    "custom.Label": {
      "binding": {
        "config": {
          "path": "/root/Dropdown.custom.LabelValue"
        },
        "type": "property"
      },
      "persistent": true
    },
    "custom.MaterialDS": {
      "binding": {
        "config": {
          "expression": "runscript(\u0027mes.schedule.sp.getMaterialLots\u0027, 0, {session.custom.SelectedSite}, None, {view.custom.MaterialLotNumber}, False, False)\r\n//getMaterialLots(SiteID, MaterialID \u003d None, MaterialLotNumber \u003d None, GetZeroQty \u003d False, GetDisabled \u003d False):\r\n"
        },
        "type": "expr"
      },
      "persistent": true
    },
    "custom.MaterialID": {
      "binding": {
        "config": {
          "path": "view.custom.MaterialDS"
        },
        "transforms": [
          {
            "code": "\tMaterialID \u003d None\n\tif value and len(system.dataset.toPyDataSet(value)) \u003e 0:\n\t\tMaterialID \u003d value.getValueAt(0, \u0027MaterialID\u0027)\n\t\n\treturn MaterialID",
            "type": "script"
          }
        ],
        "type": "property"
      },
      "persistent": true
    },
    "custom.MaterialLotID": {
      "binding": {
        "config": {
          "path": "view.custom.MaterialDS"
        },
        "transforms": [
          {
            "code": "\treturn value.getValueAt(0, \u0027ID\u0027)",
            "type": "script"
          }
        ],
        "type": "property"
      },
      "persistent": true
    },
    "custom.MaterialLotNumber": {
      "binding": {
        "config": {
          "path": "/root/MaterialValue.props.text"
        },
        "type": "property"
      },
      "persistent": true
    },
    "custom.PartDS": {
      "binding": {
        "config": {
          "expression": "runscript(\u0027mes.trace.sp.getParts\u0027, 0, Null, Null, {view.custom.Label}, True, Null,Null,Null,Null,False, False)\r\n\r\n//getParts(StartTime \u003d None, EndTime \u003d None, Label \u003d None, LabelExactMatch \u003d False, ProductCodeID \u003d None, Workorder \u003d None, InventoryID \u003d None, AccumulatorID \u003d None, GetCompletedOnly \u003d False, GetWIPOnly \u003d False):\r\n"
        },
        "type": "expr"
      },
      "persistent": true
    },
    "custom.PartID": {
      "binding": {
        "config": {
          "path": "/root/Dropdown.props.value"
        },
        "type": "property"
      },
      "persistent": true
    },
    "custom.PartLabelValid": {
      "binding": {
        "config": {
          "expression": "if(len({view.custom.PartDS}) \u003e 0, true, false)"
        },
        "type": "expr"
      },
      "persistent": true
    },
    "custom.ProductCodeID": {
      "binding": {
        "config": {
          "path": "view.custom.PartDS"
        },
        "transforms": [
          {
            "code": "\tProductCodeID \u003d None\n\tif value and len(system.dataset.toPyDataSet(value)) \u003e 0:\n\t\tProductCodeID \u003d value.getValueAt(0, \u0027ProductCodeID\u0027)\n\t\n\treturn ProductCodeID",
            "type": "script"
          }
        ],
        "type": "property"
      },
      "persistent": true
    },
    "custom.TestType": {
      "binding": {
        "config": {
          "path": "/root/Inventory/Table.props.selection.data[0].Name"
        },
        "type": "property"
      },
      "persistent": true
    },
    "custom.TestTypeCategory": {
      "binding": {
        "config": {
          "path": "/root/Inventory/Table.props.selection.data[0].TestTypeCategory"
        },
        "type": "property"
      },
      "persistent": true
    },
    "custom.TestTypeID": {
      "binding": {
        "config": {
          "path": "/root/Inventory/Table.props.selection.data[0].ID"
        },
        "type": "property"
      },
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 485,
      "width": 497
    }
  },
  "root": {
    "children": [
      {
        "children": [
          {
            "children": [
              {
                "meta": {
                  "name": "Label"
                },
                "position": {
                  "grow": 1
                },
                "props": {
                  "style": {
                    "marginRight": "8px"
                  },
                  "text": "Select Test Type:",
                  "textStyle": {
                    "fontWeight": "bold",
                    "textAlign": "center"
                  }
                },
                "type": "ia.display.label"
              }
            ],
            "meta": {
              "name": "Title"
            },
            "props": {
              "style": {
                "classes": "Global/MarginAll",
                "overflow": "hidden"
              }
            },
            "type": "ia.container.flex"
          },
          {
            "meta": {
              "name": "Table"
            },
            "position": {
              "grow": 1
            },
            "propConfig": {
              "props.data": {
                "binding": {
                  "config": {
                    "path": "view.custom.GetTestType"
                  },
                  "type": "property"
                }
              }
            },
            "props": {
              "columns": [
                {
                  "align": "center",
                  "boolean": "checkbox",
                  "dateFormat": "MM/DD/YYYY",
                  "editable": false,
                  "field": "Name",
                  "filter": {
                    "boolean": {
                      "condition": ""
                    },
                    "date": {
                      "condition": "",
                      "value": ""
                    },
                    "enabled": false,
                    "number": {
                      "condition": "",
                      "value": ""
                    },
                    "string": {
                      "condition": "",
                      "value": ""
                    },
                    "visible": "on-hover"
                  },
                  "footer": {
                    "align": "center",
                    "justify": "left",
                    "style": {
                      "classes": ""
                    },
                    "title": ""
                  },
                  "header": {
                    "align": "center",
                    "justify": "left",
                    "style": {
                      "classes": ""
                    },
                    "title": "Test Name"
                  },
                  "justify": "auto",
                  "nullFormat": {
                    "includeNullStrings": false,
                    "nullFormatValue": "",
                    "strict": false
                  },
                  "number": "value",
                  "numberFormat": "0,0.##",
                  "progressBar": {
                    "bar": {
                      "color": "",
                      "style": {
                        "classes": ""
                      }
                    },
                    "max": 100,
                    "min": 0,
                    "track": {
                      "color": "",
                      "style": {
                        "classes": ""
                      }
                    },
                    "value": {
                      "enabled": true,
                      "format": "0,0.##",
                      "justify": "center",
                      "style": {
                        "classes": ""
                      }
                    }
                  },
                  "render": "auto",
                  "resizable": true,
                  "sort": "none",
                  "sortable": true,
                  "strictWidth": false,
                  "style": {
                    "classes": ""
                  },
                  "toggleSwitch": {
                    "color": {
                      "selected": "",
                      "unselected": ""
                    }
                  },
                  "viewParams": {},
                  "viewPath": "",
                  "visible": true,
                  "width": ""
                },
                {
                  "align": "center",
                  "boolean": "checkbox",
                  "dateFormat": "MM/DD/YYYY",
                  "editable": false,
                  "field": "Description",
                  "filter": {
                    "boolean": {
                      "condition": ""
                    },
                    "date": {
                      "condition": "",
                      "value": ""
                    },
                    "enabled": false,
                    "number": {
                      "condition": "",
                      "value": ""
                    },
                    "string": {
                      "condition": "",
                      "value": ""
                    },
                    "visible": "on-hover"
                  },
                  "footer": {
                    "align": "center",
                    "justify": "left",
                    "style": {
                      "classes": ""
                    },
                    "title": ""
                  },
                  "header": {
                    "align": "center",
                    "justify": "left",
                    "style": {
                      "classes": ""
                    },
                    "title": ""
                  },
                  "justify": "auto",
                  "nullFormat": {
                    "includeNullStrings": true,
                    "nullFormatValue": "",
                    "strict": false
                  },
                  "number": "value",
                  "numberFormat": "0,0.##",
                  "progressBar": {
                    "bar": {
                      "color": "",
                      "style": {
                        "classes": ""
                      }
                    },
                    "max": 100,
                    "min": 0,
                    "track": {
                      "color": "",
                      "style": {
                        "classes": ""
                      }
                    },
                    "value": {
                      "enabled": true,
                      "format": "0,0.##",
                      "justify": "center",
                      "style": {
                        "classes": ""
                      }
                    }
                  },
                  "render": "auto",
                  "resizable": true,
                  "sort": "none",
                  "sortable": true,
                  "strictWidth": false,
                  "style": {
                    "classes": ""
                  },
                  "toggleSwitch": {
                    "color": {
                      "selected": "",
                      "unselected": ""
                    }
                  },
                  "viewParams": {},
                  "viewPath": "",
                  "visible": true,
                  "width": ""
                },
                {
                  "align": "center",
                  "boolean": "checkbox",
                  "dateFormat": "MM/DD/YYYY",
                  "editable": false,
                  "field": "ID",
                  "filter": {
                    "boolean": {
                      "condition": ""
                    },
                    "date": {
                      "condition": "",
                      "value": ""
                    },
                    "enabled": false,
                    "number": {
                      "condition": "",
                      "value": ""
                    },
                    "string": {
                      "condition": "",
                      "value": ""
                    },
                    "visible": "on-hover"
                  },
                  "footer": {
                    "align": "center",
                    "justify": "left",
                    "style": {
                      "classes": ""
                    },
                    "title": ""
                  },
                  "header": {
                    "align": "center",
                    "justify": "left",
                    "style": {
                      "classes": ""
                    },
                    "title": ""
                  },
                  "justify": "auto",
                  "nullFormat": {
                    "includeNullStrings": false,
                    "nullFormatValue": "",
                    "strict": false
                  },
                  "number": "value",
                  "numberFormat": "0,0.##",
                  "progressBar": {
                    "bar": {
                      "color": "",
                      "style": {
                        "classes": ""
                      }
                    },
                    "max": 100,
                    "min": 0,
                    "track": {
                      "color": "",
                      "style": {
                        "classes": ""
                      }
                    },
                    "value": {
                      "enabled": true,
                      "format": "0,0.##",
                      "justify": "center",
                      "style": {
                        "classes": ""
                      }
                    }
                  },
                  "render": "auto",
                  "resizable": true,
                  "sort": "none",
                  "sortable": true,
                  "strictWidth": false,
                  "style": {
                    "classes": ""
                  },
                  "toggleSwitch": {
                    "color": {
                      "selected": "",
                      "unselected": ""
                    }
                  },
                  "viewParams": {},
                  "viewPath": "",
                  "visible": false,
                  "width": ""
                },
                {
                  "align": "center",
                  "boolean": "checkbox",
                  "dateFormat": "MM/DD/YYYY",
                  "editable": false,
                  "field": "TestTypeCategory",
                  "filter": {
                    "boolean": {
                      "condition": ""
                    },
                    "date": {
                      "condition": "",
                      "value": ""
                    },
                    "enabled": false,
                    "number": {
                      "condition": "",
                      "value": ""
                    },
                    "string": {
                      "condition": "",
                      "value": ""
                    },
                    "visible": "on-hover"
                  },
                  "footer": {
                    "align": "center",
                    "justify": "left",
                    "style": {
                      "classes": ""
                    },
                    "title": ""
                  },
                  "header": {
                    "align": "center",
                    "justify": "left",
                    "style": {
                      "classes": ""
                    },
                    "title": ""
                  },
                  "justify": "auto",
                  "nullFormat": {
                    "includeNullStrings": false,
                    "nullFormatValue": "",
                    "strict": false
                  },
                  "number": "value",
                  "numberFormat": "0,0.##",
                  "progressBar": {
                    "bar": {
                      "color": "",
                      "style": {
                        "classes": ""
                      }
                    },
                    "max": 100,
                    "min": 0,
                    "track": {
                      "color": "",
                      "style": {
                        "classes": ""
                      }
                    },
                    "value": {
                      "enabled": true,
                      "format": "0,0.##",
                      "justify": "center",
                      "style": {
                        "classes": ""
                      }
                    }
                  },
                  "render": "auto",
                  "resizable": true,
                  "sort": "none",
                  "sortable": true,
                  "strictWidth": false,
                  "style": {
                    "classes": ""
                  },
                  "toggleSwitch": {
                    "color": {
                      "selected": "",
                      "unselected": ""
                    }
                  },
                  "viewParams": {},
                  "viewPath": "",
                  "visible": false,
                  "width": ""
                }
              ],
              "selection": {
                "selectedColumn": "Name",
                "selectedRow": 3
              },
              "style": {
                "classes": "Global/MarginAll"
              }
            },
            "type": "ia.display.table"
          },
          {
            "children": [
              {
                "meta": {
                  "name": "Label"
                },
                "position": {
                  "grow": 1
                },
                "props": {
                  "style": {
                    "marginRight": "8px"
                  },
                  "text": "Selected Test:",
                  "textStyle": {
                    "fontWeight": "bold",
                    "textAlign": "center"
                  }
                },
                "type": "ia.display.label"
              },
              {
                "meta": {
                  "name": "Label_0"
                },
                "position": {
                  "grow": 1
                },
                "propConfig": {
                  "props.text": {
                    "binding": {
                      "config": {
                        "path": ".../Table.props.selection.data[0].Name"
                      },
                      "type": "property"
                    }
                  }
                },
                "props": {
                  "style": {
                    "marginRight": "8px"
                  },
                  "textStyle": {
                    "fontWeight": "bold",
                    "textAlign": "left"
                  }
                },
                "type": "ia.display.label"
              }
            ],
            "meta": {
              "name": "Title_0"
            },
            "propConfig": {
              "position.display": {
                "binding": {
                  "config": {
                    "expression": "if(len({../Table.props.selection.data}) \u003e 0, true, false)"
                  },
                  "type": "expr"
                }
              }
            },
            "props": {
              "style": {
                "classes": "Global/MarginAll",
                "overflow": "hidden"
              }
            },
            "type": "ia.container.flex"
          }
        ],
        "meta": {
          "name": "Inventory"
        },
        "position": {
          "grow": 1
        },
        "props": {
          "direction": "column"
        },
        "type": "ia.container.flex"
      },
      {
        "meta": {
          "name": "PartLabel"
        },
        "propConfig": {
          "position.display": {
            "binding": {
              "config": {
                "expression": "if(len({../Inventory/Table.props.selection.data[0]}) \u003e 0, if({view.custom.TestTypeCategory} \u003d \u0027Material Lot\u0027, false, true),false)\r\n\r\n"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "style": {
            "classes": "Global/MarginBottom Global/MarginLeft TextFields/Root TextFields/TextTitle"
          },
          "text": "Part Label:",
          "textStyle": {
            "classes": "TextFields/TextTitle",
            "textAlign": "left"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "PartLabelValue"
        },
        "position": {
          "basis": "30px",
          "display": false
        },
        "propConfig": {
          "position.display": {
            "binding": {
              "config": {
                "expression": "if({view.custom.TestTypeCategory} \u003d \u0027Part\u0027, true, false)"
              },
              "enabled": false,
              "type": "expr"
            },
            "onChange": {
              "enabled": null,
              "script": "\tself.props.text \u003d \u0027\u0027"
            }
          }
        },
        "props": {
          "placeholder": "Enter Part Label....",
          "style": {
            "classes": "Global/MarginAll TextFields/TextField"
          }
        },
        "type": "ia.input.text-field"
      },
      {
        "meta": {
          "name": "ERRORLabel"
        },
        "propConfig": {
          "position.display": {
            "binding": {
              "config": {
                "expression": "if({../PartLabelValue.props.text} \u003d \u0027\u0027||{../PartLabelValue.props.text} \u003d None || {view.custom.PartLabelValid} \u003d true, false, True)\r\n"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "style": {
            "classes": "Global/MarginBottom Global/MarginLeft TextFields/Root TextFields/TextTitle"
          },
          "text": "Please enter a valid part label.....",
          "textStyle": {
            "classes": "TextFields/TextTitle",
            "textAlign": "center"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "MaterialTestLabel"
        },
        "propConfig": {
          "position.display": {
            "binding": {
              "config": {
                "expression": "if({view.custom.TestTypeCategory} \u003d \u0027Material Lot\u0027, true, false)"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "style": {
            "classes": "Global/MarginBottom Global/MarginLeft TextFields/Root TextFields/TextTitle"
          },
          "text": "Material Lot Number:",
          "textStyle": {
            "classes": "TextFields/TextTitle",
            "textAlign": "left"
          }
        },
        "type": "ia.display.label"
      },
      {
        "events": {
          "component": {
            "onActionPerformed": {
              "config": {
                "script": "\tself.refreshBinding(\u0027custom.LabelValue\u0027)\n\tself.view.refreshBinding(\u0027custom.DATAEntered\u0027)\n\tself.view.refreshBinding(\u0027custom.HasTestAttributes\u0027)"
              },
              "enabled": false,
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "Dropdown"
        },
        "position": {
          "basis": "36px"
        },
        "propConfig": {
          "custom.LabelValue": {
            "binding": {
              "config": {
                "path": "this.props.options"
              },
              "transforms": [
                {
                  "code": "\tfor item in value:\n\t\tif item[\u0027value\u0027] \u003d\u003d self.props.value:\n\t\t\treturn item[\u0027label\u0027]\n\tif self.props.value \u003d\u003d \u0027\u0027 or None:\n\t\treturn \u0027INVALID PART\u0027\n\telse:\n\t\treturn item[\u0027label\u0027]",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          },
          "position.display": {
            "binding": {
              "config": {
                "expression": "if(len({../Inventory/Table.props.selection.data[0]}) \u003e 0, if({view.custom.TestTypeCategory} \u003d \u0027Material Lot\u0027, false, true),false)\r\n\r\n"
              },
              "type": "expr"
            }
          },
          "props.options": {
            "binding": {
              "config": {
                "queryPath": "app/Quality/getPartLabels",
                "returnFormat": "json"
              },
              "type": "query"
            }
          },
          "props.value": {
            "onChange": {
              "enabled": null,
              "script": "\tself.refreshBinding(\u0027custom.LabelValue\u0027)\n\timport time\n\ttime.sleep(0.025)\n\tself.view.refreshBinding(\u0027custom.DATAEntered\u0027)"
            }
          }
        },
        "props": {
          "dropdownOptionStyle": {
            "classes": "Global/MarginAll TextFields/TextField"
          },
          "style": {
            "classes": "Global/MarginAll TextFields/TextField"
          }
        },
        "type": "ia.input.dropdown"
      },
      {
        "meta": {
          "name": "ERRORLabel_0"
        },
        "propConfig": {
          "position.display": {
            "binding": {
              "config": {
                "expression": "if({../ERRORLabel.position.display} \u003d false \u0026\u0026 {view.custom.HasTestAttributes} \u003d false, if({../Dropdown.props.value} \u003d None||{../Dropdown.props.value} \u003d \u0027\u0027, false, true), false)\r\n"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "style": {
            "classes": "Global/MarginBottom Global/MarginLeft TextFields/Root TextFields/TextTitle"
          },
          "text": "The selected part has no test attibutes.",
          "textStyle": {
            "classes": "TextFields/TextTitle",
            "textAlign": "center"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "MaterialValue"
        },
        "position": {
          "basis": "30px"
        },
        "propConfig": {
          "position.display": {
            "binding": {
              "config": {
                "expression": "if({view.custom.TestTypeCategory} \u003d \u0027Material Lot\u0027, true, false)"
              },
              "type": "expr"
            },
            "onChange": {
              "enabled": null,
              "script": "\tself.props.text \u003d \u0027\u0027"
            }
          }
        },
        "props": {
          "placeholder": "Enter Material Lot Number.....",
          "style": {
            "classes": "Global/MarginAll TextFields/TextField"
          }
        },
        "type": "ia.input.text-field"
      },
      {
        "children": [
          {
            "children": [
              {
                "events": {
                  "dom": {
                    "onClick": {
                      "config": {
                        "script": "\n\t\n\t\n\tTestTypeID \u003d self.view.custom.TestTypeID\n\tPartID \u003d self.view.custom.PartID\n\tMaterialLotID \u003d self.view.custom.MaterialLotID\n\tTestTypeName \u003d self.view.custom.TestType \n\t#Inserts Test for TypeID \u003d 1 which is Part Test\n\tif TestTypeID \u003d\u003d 1:\n\t\tTestID \u003d mes.quality.sp.insertAndGetNewTest(TestTypeID \u003d TestTypeID, PartID \u003d PartID).getValueAt(0, 0)\n\t\tmessageType \u003d \u0027refreshQualityTable\u0027 \n\t\tpayload \u003d {}\n\t\tsystem.perspective.sendMessage(messageType, payload, view \u003d \u0027session\u0027)\n\t\tsystem.perspective.closePopup(\"TestType\")\n\t\tsystem.perspective.navigate(view \u003d \u0027App/Quality/Test Edit/FullView\u0027, params \u003d {\u0027TestID\u0027:TestID})\n\tif TestTypeID \u003d\u003d 2:\n\t\tTestID \u003d mes.quality.sp.insertAndGetNewTest(TestTypeID \u003d TestTypeID, PartID \u003d None, MaterialLotID \u003d MaterialLotID).getValueAt(0, 0)\t\n\t\tmessageType \u003d \u0027refreshQualityTable\u0027 \n\t\tpayload \u003d {}\n\t\tsystem.perspective.sendMessage(messageType, payload, view \u003d \u0027session\u0027)\n\t\tsystem.perspective.closePopup(\"TestType\")\n\t\tsystem.perspective.navigate(view \u003d \u0027App/Quality/Test Edit/FullView\u0027, params \u003d {\u0027TestID\u0027:TestID})\n\tif TestTypeID \u003e 2:\n\t\tTestID \u003d mes.quality.sp.insertAndGetNewTest(TestTypeID \u003d TestTypeID, PartID \u003d PartID).getValueAt(0, 0)\n\t\tmessageType \u003d \u0027refreshQualityTable\u0027 \n\t\tpayload \u003d {}\n\t\tsystem.perspective.sendMessage(messageType, payload, view \u003d \u0027session\u0027)\n\t\tsystem.perspective.closePopup(\"TestType\")\n\t\tsystem.perspective.navigate(view \u003d \u0027App/Quality/Test Edit/FullView\u0027, params \u003d {\u0027TestID\u0027:TestID})\n"
                      },
                      "scope": "G",
                      "type": "script"
                    }
                  }
                },
                "meta": {
                  "name": "SaveButton"
                },
                "position": {
                  "grow": 1
                },
                "propConfig": {
                  "position.display": {
                    "binding": {
                      "config": {
                        "expression": "{view.custom.HasTestAttributes}"
                      },
                      "type": "expr"
                    }
                  }
                },
                "props": {
                  "params": {
                    "Label": "Save",
                    "backgroundColor": "value",
                    "disabledPopup": {
                      "message": "Please sign in as quarterback to proceed.",
                      "messageType": "",
                      "payload": {},
                      "title": "Invalid Permissions"
                    },
                    "enabled": true,
                    "hover": true,
                    "iconPath": "material/add",
                    "isSelectable": false,
                    "label": "Add",
                    "selected": true,
                    "size": "142px",
                    "type": "normalsuccess"
                  },
                  "path": "GlobalComponents/Buttons/Button",
                  "style": {
                    "marginRight": "8px"
                  }
                },
                "type": "ia.display.view"
              }
            ],
            "meta": {
              "name": "Save"
            },
            "position": {
              "basis": "50%",
              "grow": 1
            },
            "type": "ia.container.flex"
          },
          {
            "children": [
              {
                "events": {
                  "dom": {
                    "onClick": {
                      "config": {
                        "script": "\tsystem.perspective.closePopup(\"TestType\")"
                      },
                      "scope": "G",
                      "type": "script"
                    }
                  }
                },
                "meta": {
                  "name": "CancelButton"
                },
                "position": {
                  "grow": 1
                },
                "props": {
                  "params": {
                    "IconPath": "material/cancel",
                    "Label": "Cancel",
                    "backgroundColor": "value",
                    "disabledPopup": {
                      "message": "Please sign in as quarterback to proceed.",
                      "messageType": "",
                      "payload": {},
                      "title": "Invalid Permissions"
                    },
                    "enabled": true,
                    "hover": true,
                    "isSelectable": false,
                    "label": "Cancel",
                    "selected": true,
                    "size": "value",
                    "type": "normalfail"
                  },
                  "path": "GlobalComponents/Buttons/Button"
                },
                "type": "ia.display.view"
              }
            ],
            "meta": {
              "name": "Cancel"
            },
            "position": {
              "basis": "50%",
              "grow": 1
            },
            "props": {
              "direction": "column"
            },
            "type": "ia.container.flex"
          }
        ],
        "meta": {
          "name": "Footer"
        },
        "position": {
          "basis": "40px",
          "grow": 1
        },
        "props": {
          "style": {
            "classes": "Global/MarginAll"
          }
        },
        "type": "ia.container.flex"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "direction": "column"
    },
    "type": "ia.container.flex"
  }
}