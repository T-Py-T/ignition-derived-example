{
  "custom": {
    "DATAEntered": false,
    "FilteredProductCodes": {
      "$": [
        "ds",
        192,
        1696439579575
      ],
      "$columns": [
        {
          "data": [],
          "name": "ID",
          "type": "String"
        },
        {
          "data": [],
          "name": "ProductCode",
          "type": "String"
        },
        {
          "data": [],
          "name": "Description",
          "type": "String"
        },
        {
          "data": [],
          "name": "IdealRunRate",
          "type": "String"
        }
      ]
    },
    "GetTestType": {
      "$": [
        "ds",
        192,
        1696439578562
      ],
      "$columns": [
        {
          "data": [
            1,
            2,
            3,
            31,
            37,
            38,
            39,
            40
          ],
          "name": "ID",
          "type": "Integer"
        },
        {
          "data": [
            "Part",
            "Material Lot",
            "Testing123",
            "New Test",
            "Visual Check",
            "Dimension Check",
            "Color Check",
            "TemperatureCheck"
          ],
          "name": "Name",
          "type": "String"
        },
        {
          "data": [
            "Part",
            "Material Lot",
            "Part",
            "New Category",
            "Visual Check",
            "Dimension Check",
            "Color Check",
            "TemperatureCheck"
          ],
          "name": "TestTypeCategory",
          "type": "String"
        },
        {
          "data": [
            null,
            null,
            "Testing XYZ",
            "New Description Testing\n123",
            "Check For Visual Items",
            "Check for Dimensions",
            "Check for Colors",
            "Checks for the Temperatures"
          ],
          "name": "Description",
          "type": "String"
        },
        {
          "data": [
            1684940955110,
            1684940955110,
            1684940955110,
            1696342801027,
            1696360259567,
            1696360277520,
            1696360290770,
            1696431776297
          ],
          "name": "DateCreated",
          "type": "Date"
        },
        {
          "data": [
            1684940955110,
            1684940955110,
            1696268436570,
            1696342825247,
            1696360259567,
            1696360277520,
            1696360290770,
            1696431776297
          ],
          "name": "DateModified",
          "type": "Date"
        }
      ]
    },
    "HasTestAttributes": null,
    "Label": "--92",
    "NewTestID": "92",
    "PartDS": {
      "$": [
        "ds",
        192,
        1696439579654
      ],
      "$columns": [
        {
          "data": [],
          "name": "ID",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "Label",
          "type": "String"
        },
        {
          "data": [],
          "name": "ProductCodeID",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "ProductCode",
          "type": "String"
        },
        {
          "data": [],
          "name": "InventoryID",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "Inventory",
          "type": "String"
        },
        {
          "data": [],
          "name": "InventoryLocation",
          "type": "String"
        },
        {
          "data": [],
          "name": "CreationTime",
          "type": "Date"
        },
        {
          "data": [],
          "name": "AccumulatorID",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "Accumulator",
          "type": "String"
        },
        {
          "data": [],
          "name": "WorkOrder",
          "type": "String"
        }
      ]
    },
    "PartID": 2,
    "PartLabelValid": false,
    "ProductCode": "",
    "ProductCodeDS": {
      "$": [
        "ds",
        192,
        1696439578540
      ],
      "$columns": [
        {
          "data": [
            19,
            2,
            1,
            16,
            13,
            12,
            3,
            10,
            11,
            20,
            21,
            22
          ],
          "name": "ID",
          "type": "Integer"
        },
        {
          "data": [
            "10073",
            "HighPPM",
            "LowPPM",
            "NewPC",
            "ObviousFake",
            "PC-3032_QATest",
            "PC-41093",
            "PC-41093_Alt",
            "PC-65053",
            "ProductCode1",
            "ProductCode2",
            "ProductCode3"
          ],
          "name": "ProductCode",
          "type": "String"
        },
        {
          "data": [
            "Part Descrition",
            "Widget",
            "Widget",
            "New Description",
            "Guided Tour Product",
            "QATest",
            "Testing nq 2",
            "testst1",
            "new_test",
            "ProductCode1",
            "ProductCode2",
            "ProductCode3"
          ],
          "name": "Description",
          "type": "String"
        },
        {
          "data": [
            60,
            1250,
            75,
            55,
            200,
            500,
            31,
            556,
            55,
            36,
            68,
            45
          ],
          "name": "IdealRunRate",
          "type": "Integer"
        }
      ]
    },
    "ProductCodeID": "",
    "ProductCodeList": {
      "$": [
        "ds",
        192,
        1696430387131
      ],
      "$columns": [
        {
          "data": [
            2
          ],
          "name": "ID",
          "type": "Integer"
        },
        {
          "data": [
            "HighPPM"
          ],
          "name": "ProductCode",
          "type": "String"
        },
        {
          "data": [
            "Widget"
          ],
          "name": "Description",
          "type": "String"
        },
        {
          "data": [
            1250
          ],
          "name": "IdealRunRate",
          "type": "Integer"
        }
      ]
    },
    "ProductCodeSelections": {
      "$": [
        "ds",
        192,
        1696439579574
      ],
      "$columns": [
        {
          "data": [],
          "name": "ProductCodeID",
          "type": "Integer"
        }
      ]
    },
    "TestType": null,
    "TestTypeCategory": null,
    "TestTypeID": null
  },
  "params": {},
  "propConfig": {
    "custom.DATAEntered": {
      "binding": {
        "config": {
          "expression": "if(\r\n\t(len({view.custom.TestTypeCategory}) \u003e 1 \u0026\u0026 {view.custom.PartID} \u003e\u003d 1) ||\r\n\t({view.custom.TestTypeCategory} \u003d \u0027Material Lot\u0027 \u0026\u0026 {view.custom.MaterialLotID} \u003e\u003d 1),\r\n\ttrue,\r\n\tfalse\r\n)"
        },
        "type": "expr"
      },
      "persistent": true
    },
    "custom.FilteredProductCodes": {
      "binding": {
        "config": {
          "path": "view.custom.ProductCodeSelections"
        },
        "transforms": [
          {
            "code": "\tProductCodeDS_data \u003d self.custom.ProductCodeDS\n\tProductCodeSelections_data \u003d value\n\t\n\tProductCodeDS \u003d system.dataset.toPyDataSet(ProductCodeDS_data)\n\tProductCodeSelections \u003d system.dataset.toPyDataSet(ProductCodeSelections_data)\n\t\n\t\n\t\n\tdef filter_dataset(selected_ids, dataset):\n\t    filtered_rows \u003d [row for row in dataset if row[\u0027ID\u0027] in selected_ids]\n\t    return filtered_rows\n\t\n\t# Get the IDs to filter\n\tselected_ids \u003d [row[\u0027ProductCodeID\u0027] for row in ProductCodeSelections]\n\t\n\t# Filter ProductCodeDS based on ProductCodeSelections\n\tfiltered_data \u003d filter_dataset(selected_ids, ProductCodeDS)\n\t\n\t#Blank DS\n\theaders \u003d [\u0027ID\u0027,\u0027ProductCode\u0027,\u0027Description\u0027,\u0027IdealRunRate\u0027]\n\tdata \u003d []\n\t\n\t# Display the filtered data\n\tfor item in filtered_data:\n\t    data.append(item)\n\treturn system.dataset.toDataSet(headers, data)\n\t",
            "type": "script"
          }
        ],
        "type": "property"
      },
      "persistent": true
    },
    "custom.GetTestType": {
      "binding": {
        "config": {
          "expression": "runscript(\u0027mes.quality.sp.getTestTypes\u0027, 0, {session.custom.SelectedSite})"
        },
        "type": "expr"
      },
      "persistent": true
    },
    "custom.HasTestAttributes": {
      "binding": {
        "config": {
          "path": "view.custom.DATAEntered"
        },
        "transforms": [
          {
            "code": "\tTestTypeID    \u003d self.custom.TestTypeID\n\tPartID        \u003d self.custom.ProductCodeID\n\tMaterialLotID \u003d self.custom.MaterialID\n\t\n\tTestAttributes \u003d mes.quality.sp.getTestAttributes(TestTypeID, PartID, MaterialLotID)\n\tHasAttributes \u003d True if TestAttributes and len(system.dataset.toPyDataSet(TestAttributes)) \u003e 0 else False\n\t\n\treturn HasAttributes",
            "type": "script"
          }
        ],
        "type": "property"
      },
      "persistent": true
    },
    "custom.Label": {
      "binding": {
        "config": {
          "expression": "{view.custom.ProductCode}+\u0027-\u0027+{view.custom.TestType}+\u0027-\u0027+{view.custom.NewTestID}"
        },
        "type": "expr"
      },
      "persistent": true
    },
    "custom.NewTestID": {
      "binding": {
        "config": {
          "expression": "MAX(runscript(\u0027mes.quality.sp.getTests\u0027, 0, {session.custom.SelectedSite}), \u0027ID\u0027)+1"
        },
        "transforms": [
          {
            "formatType": "numeric",
            "formatValue": "number",
            "type": "format"
          }
        ],
        "type": "expr"
      },
      "persistent": true
    },
    "custom.PartDS": {
      "binding": {
        "config": {
          "expression": "runscript(\u0027mes.trace.sp.getParts\u0027, 0, Null, Null, {view.custom.Label}, True, Null,Null,Null,Null,False, False)\r\n\r\n//getParts(StartTime \u003d None, EndTime \u003d None, Label \u003d None, LabelExactMatch \u003d False, ProductCodeID \u003d None, Workorder \u003d None, InventoryID \u003d None, AccumulatorID \u003d None, GetCompletedOnly \u003d False, GetWIPOnly \u003d False):\r\n"
        },
        "type": "expr"
      },
      "persistent": true
    },
    "custom.PartLabelValid": {
      "binding": {
        "config": {
          "expression": "if(len({view.custom.PartDS}) \u003e 0, true, false)"
        },
        "type": "expr"
      },
      "persistent": true
    },
    "custom.ProductCode": {
      "binding": {
        "config": {
          "path": "/root/ProductCode.props.value"
        },
        "type": "property"
      },
      "persistent": true
    },
    "custom.ProductCodeDS": {
      "binding": {
        "config": {
          "expression": "runScript(\"mes.config.sp.getProductCodes\", 0)"
        },
        "type": "expr"
      },
      "persistent": true
    },
    "custom.ProductCodeID": {
      "binding": {
        "config": {
          "path": "/root/ProductCode.props.value"
        },
        "type": "property"
      },
      "persistent": true
    },
    "custom.ProductCodeSelections": {
      "binding": {
        "config": {
          "parameters": {
            "TestTypeID": "{view.custom.TestTypeID}"
          },
          "queryPath": "app/Quality/ProductCodeFromTestType"
        },
        "type": "query"
      },
      "persistent": true
    },
    "custom.TestType": {
      "binding": {
        "config": {
          "path": "/root/Inventory/Table.props.selection.data[0].Name"
        },
        "type": "property"
      },
      "persistent": true
    },
    "custom.TestTypeCategory": {
      "binding": {
        "config": {
          "path": "/root/Inventory/Table.props.selection.data[0].TestTypeCategory"
        },
        "type": "property"
      },
      "persistent": true
    },
    "custom.TestTypeID": {
      "binding": {
        "config": {
          "path": "/root/Inventory/Table.props.selection.data[0].ID"
        },
        "type": "property"
      },
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 485,
      "width": 497
    }
  },
  "root": {
    "children": [
      {
        "children": [
          {
            "children": [
              {
                "meta": {
                  "name": "Label"
                },
                "position": {
                  "grow": 1
                },
                "props": {
                  "style": {
                    "marginRight": "8px"
                  },
                  "text": "Select Test Type:",
                  "textStyle": {
                    "fontWeight": "bold",
                    "textAlign": "center"
                  }
                },
                "type": "ia.display.label"
              }
            ],
            "meta": {
              "name": "Title"
            },
            "props": {
              "style": {
                "classes": "Global/MarginAll",
                "overflow": "hidden"
              }
            },
            "type": "ia.container.flex"
          },
          {
            "events": {
              "component": {
                "onRowClick": {
                  "config": {
                    "script": "\tself.parent.parent.getChild(\"ProductCode\").props.value \u003d \u0027\u0027\n\tself.view.refreshBinding(\u0027custom.NewTestID\u0027)"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "Table"
            },
            "position": {
              "grow": 1
            },
            "propConfig": {
              "props.data": {
                "binding": {
                  "config": {
                    "path": "view.custom.GetTestType"
                  },
                  "type": "property"
                }
              }
            },
            "props": {
              "columns": [
                {
                  "align": "center",
                  "boolean": "checkbox",
                  "dateFormat": "MM/DD/YYYY",
                  "editable": false,
                  "field": "Name",
                  "filter": {
                    "boolean": {
                      "condition": ""
                    },
                    "date": {
                      "condition": "",
                      "value": ""
                    },
                    "enabled": false,
                    "number": {
                      "condition": "",
                      "value": ""
                    },
                    "string": {
                      "condition": "",
                      "value": ""
                    },
                    "visible": "on-hover"
                  },
                  "footer": {
                    "align": "center",
                    "justify": "left",
                    "style": {
                      "classes": ""
                    },
                    "title": ""
                  },
                  "header": {
                    "align": "center",
                    "justify": "left",
                    "style": {
                      "classes": ""
                    },
                    "title": "Test Name"
                  },
                  "justify": "auto",
                  "nullFormat": {
                    "includeNullStrings": false,
                    "nullFormatValue": "",
                    "strict": false
                  },
                  "number": "value",
                  "numberFormat": "0,0.##",
                  "progressBar": {
                    "bar": {
                      "color": "",
                      "style": {
                        "classes": ""
                      }
                    },
                    "max": 100,
                    "min": 0,
                    "track": {
                      "color": "",
                      "style": {
                        "classes": ""
                      }
                    },
                    "value": {
                      "enabled": true,
                      "format": "0,0.##",
                      "justify": "center",
                      "style": {
                        "classes": ""
                      }
                    }
                  },
                  "render": "auto",
                  "resizable": true,
                  "sort": "none",
                  "sortable": true,
                  "strictWidth": false,
                  "style": {
                    "classes": ""
                  },
                  "toggleSwitch": {
                    "color": {
                      "selected": "",
                      "unselected": ""
                    }
                  },
                  "viewParams": {},
                  "viewPath": "",
                  "visible": true,
                  "width": ""
                },
                {
                  "align": "center",
                  "boolean": "checkbox",
                  "dateFormat": "MM/DD/YYYY",
                  "editable": false,
                  "field": "Description",
                  "filter": {
                    "boolean": {
                      "condition": ""
                    },
                    "date": {
                      "condition": "",
                      "value": ""
                    },
                    "enabled": false,
                    "number": {
                      "condition": "",
                      "value": ""
                    },
                    "string": {
                      "condition": "",
                      "value": ""
                    },
                    "visible": "on-hover"
                  },
                  "footer": {
                    "align": "center",
                    "justify": "left",
                    "style": {
                      "classes": ""
                    },
                    "title": ""
                  },
                  "header": {
                    "align": "center",
                    "justify": "left",
                    "style": {
                      "classes": ""
                    },
                    "title": ""
                  },
                  "justify": "auto",
                  "nullFormat": {
                    "includeNullStrings": true,
                    "nullFormatValue": "",
                    "strict": false
                  },
                  "number": "value",
                  "numberFormat": "0,0.##",
                  "progressBar": {
                    "bar": {
                      "color": "",
                      "style": {
                        "classes": ""
                      }
                    },
                    "max": 100,
                    "min": 0,
                    "track": {
                      "color": "",
                      "style": {
                        "classes": ""
                      }
                    },
                    "value": {
                      "enabled": true,
                      "format": "0,0.##",
                      "justify": "center",
                      "style": {
                        "classes": ""
                      }
                    }
                  },
                  "render": "auto",
                  "resizable": true,
                  "sort": "none",
                  "sortable": true,
                  "strictWidth": false,
                  "style": {
                    "classes": ""
                  },
                  "toggleSwitch": {
                    "color": {
                      "selected": "",
                      "unselected": ""
                    }
                  },
                  "viewParams": {},
                  "viewPath": "",
                  "visible": true,
                  "width": ""
                },
                {
                  "align": "center",
                  "boolean": "checkbox",
                  "dateFormat": "MM/DD/YYYY",
                  "editable": false,
                  "field": "ID",
                  "filter": {
                    "boolean": {
                      "condition": ""
                    },
                    "date": {
                      "condition": "",
                      "value": ""
                    },
                    "enabled": false,
                    "number": {
                      "condition": "",
                      "value": ""
                    },
                    "string": {
                      "condition": "",
                      "value": ""
                    },
                    "visible": "on-hover"
                  },
                  "footer": {
                    "align": "center",
                    "justify": "left",
                    "style": {
                      "classes": ""
                    },
                    "title": ""
                  },
                  "header": {
                    "align": "center",
                    "justify": "left",
                    "style": {
                      "classes": ""
                    },
                    "title": ""
                  },
                  "justify": "auto",
                  "nullFormat": {
                    "includeNullStrings": false,
                    "nullFormatValue": "",
                    "strict": false
                  },
                  "number": "value",
                  "numberFormat": "0,0.##",
                  "progressBar": {
                    "bar": {
                      "color": "",
                      "style": {
                        "classes": ""
                      }
                    },
                    "max": 100,
                    "min": 0,
                    "track": {
                      "color": "",
                      "style": {
                        "classes": ""
                      }
                    },
                    "value": {
                      "enabled": true,
                      "format": "0,0.##",
                      "justify": "center",
                      "style": {
                        "classes": ""
                      }
                    }
                  },
                  "render": "auto",
                  "resizable": true,
                  "sort": "none",
                  "sortable": true,
                  "strictWidth": false,
                  "style": {
                    "classes": ""
                  },
                  "toggleSwitch": {
                    "color": {
                      "selected": "",
                      "unselected": ""
                    }
                  },
                  "viewParams": {},
                  "viewPath": "",
                  "visible": false,
                  "width": ""
                },
                {
                  "align": "center",
                  "boolean": "checkbox",
                  "dateFormat": "MM/DD/YYYY",
                  "editable": false,
                  "field": "TestTypeCategory",
                  "filter": {
                    "boolean": {
                      "condition": ""
                    },
                    "date": {
                      "condition": "",
                      "value": ""
                    },
                    "enabled": false,
                    "number": {
                      "condition": "",
                      "value": ""
                    },
                    "string": {
                      "condition": "",
                      "value": ""
                    },
                    "visible": "on-hover"
                  },
                  "footer": {
                    "align": "center",
                    "justify": "left",
                    "style": {
                      "classes": ""
                    },
                    "title": ""
                  },
                  "header": {
                    "align": "center",
                    "justify": "left",
                    "style": {
                      "classes": ""
                    },
                    "title": ""
                  },
                  "justify": "auto",
                  "nullFormat": {
                    "includeNullStrings": false,
                    "nullFormatValue": "",
                    "strict": false
                  },
                  "number": "value",
                  "numberFormat": "0,0.##",
                  "progressBar": {
                    "bar": {
                      "color": "",
                      "style": {
                        "classes": ""
                      }
                    },
                    "max": 100,
                    "min": 0,
                    "track": {
                      "color": "",
                      "style": {
                        "classes": ""
                      }
                    },
                    "value": {
                      "enabled": true,
                      "format": "0,0.##",
                      "justify": "center",
                      "style": {
                        "classes": ""
                      }
                    }
                  },
                  "render": "auto",
                  "resizable": true,
                  "sort": "none",
                  "sortable": true,
                  "strictWidth": false,
                  "style": {
                    "classes": ""
                  },
                  "toggleSwitch": {
                    "color": {
                      "selected": "",
                      "unselected": ""
                    }
                  },
                  "viewParams": {},
                  "viewPath": "",
                  "visible": false,
                  "width": ""
                }
              ],
              "style": {
                "classes": "Global/MarginAll"
              }
            },
            "type": "ia.display.table"
          },
          {
            "children": [
              {
                "meta": {
                  "name": "Label"
                },
                "position": {
                  "grow": 1
                },
                "props": {
                  "style": {
                    "marginRight": "8px"
                  },
                  "text": "Only product codes with test attributes appear:",
                  "textStyle": {
                    "fontWeight": "bold",
                    "textAlign": "center"
                  }
                },
                "type": "ia.display.label"
              }
            ],
            "meta": {
              "name": "Title_0"
            },
            "propConfig": {
              "position.display": {
                "binding": {
                  "config": {
                    "expression": "if(len({../Table.props.selection.data}) \u003e 0, true, false)"
                  },
                  "type": "expr"
                }
              }
            },
            "props": {
              "style": {
                "classes": "Global/MarginAll",
                "overflow": "hidden"
              }
            },
            "type": "ia.container.flex"
          }
        ],
        "meta": {
          "name": "Inventory"
        },
        "position": {
          "grow": 1
        },
        "props": {
          "direction": "column"
        },
        "type": "ia.container.flex"
      },
      {
        "meta": {
          "name": "ERRORLabel"
        },
        "propConfig": {
          "position.display": {
            "binding": {
              "config": {
                "expression": "if({../PartLabelValue.props.text} \u003d \u0027\u0027||{../PartLabelValue.props.text} \u003d None || {view.custom.PartLabelValid} \u003d true, false, True)\r\n"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "style": {
            "classes": "Global/MarginBottom Global/MarginLeft TextFields/Root TextFields/TextTitle"
          },
          "text": "Please enter a valid part label.....",
          "textStyle": {
            "classes": "TextFields/TextTitle",
            "textAlign": "center"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "ERRORLabel_0"
        },
        "propConfig": {
          "position.display": {
            "binding": {
              "config": {
                "expression": "if({../ERRORLabel.position.display} \u003d false \u0026\u0026 {view.custom.HasTestAttributes} \u003d false, if({../Dropdown.props.value} \u003d None||{../Dropdown.props.value} \u003d \u0027\u0027, false, true), false)\r\n"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "style": {
            "classes": "Global/MarginBottom Global/MarginLeft TextFields/Root TextFields/TextTitle"
          },
          "text": "The selected part has no test attibutes.",
          "textStyle": {
            "classes": "TextFields/TextTitle",
            "textAlign": "center"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "PartLabel"
        },
        "propConfig": {
          "position.display": {
            "binding": {
              "config": {
                "expression": "if(len({../Inventory/Table.props.selection.data[0]}) \u003e 0, true, false)\r\n"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "style": {
            "classes": "Global/MarginBottom Global/MarginLeft TextFields/Root TextFields/TextTitle"
          },
          "text": "Product Code:",
          "textStyle": {
            "classes": "TextFields/TextTitle",
            "textAlign": "left"
          }
        },
        "type": "ia.display.label"
      },
      {
        "events": {
          "component": {
            "onActionPerformed": {
              "config": {
                "script": "\tself.refreshBinding(\u0027custom.LabelValue\u0027)\n\tself.view.refreshBinding(\u0027custom.DATAEntered\u0027)\n\tself.view.refreshBinding(\u0027custom.HasTestAttributes\u0027)"
              },
              "enabled": false,
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "ProductCode"
        },
        "position": {
          "basis": "36px"
        },
        "propConfig": {
          "custom.LabelValue": {
            "binding": {
              "config": {
                "path": "this.props.options"
              },
              "transforms": [
                {
                  "code": "\tfor item in value:\n\t\tif item[\u0027value\u0027] \u003d\u003d self.props.value:\n\t\t\treturn item[\u0027label\u0027]\n\tif self.props.value \u003d\u003d \u0027\u0027 or None:\n\t\treturn \u0027INVALID PART\u0027\n\telse:\n\t\treturn item[\u0027label\u0027]",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          },
          "position.display": {
            "binding": {
              "config": {
                "expression": "if(len({../Inventory/Table.props.selection.data[0]}) \u003e 0, true, false)\r\n"
              },
              "type": "expr"
            }
          },
          "props.options": {
            "binding": {
              "config": {
                "expression": "{view.custom.FilteredProductCodes}"
              },
              "transforms": [
                {
                  "code": "\t#options \u003d [{ \"label\": \"All\", \"value\": \"\"  }]\n\toptions \u003d []\n\tpydata \u003d system.dataset.toPyDataSet(value)\n\t\n\tfor row in pydata:\n\t\tlabel \u003d row[\"ProductCode\"]\n\t\tvalue \u003d row[\"ID\"]\n\t\toptions.append({ \"label\": label, \"value\": value })\n\t\t\n\treturn options\n\t\t",
                  "type": "script"
                }
              ],
              "type": "expr"
            }
          }
        },
        "props": {
          "dropdownOptionStyle": {
            "classes": "Global/MarginAll TextFields/TextField"
          },
          "style": {
            "classes": "Global/MarginAll TextFields/TextField"
          }
        },
        "type": "ia.input.dropdown"
      },
      {
        "children": [
          {
            "children": [
              {
                "events": {
                  "dom": {
                    "onClick": {
                      "config": {
                        "script": "\n\t\n\t#Test Vars\n\tTestTypeID \u003d self.view.custom.TestTypeID\n\tTestTypeName \u003d self.view.custom.TestType \n\t\n\t\n\t##NewPart Vars\n\tProductCode \u003d self.view.custom.ProductCodeID\n\tLabel \u003d self.view.custom.Label\n\t\n\t#Generate New Label and grab PartID\n\tNewPart \u003d mes.trace.sp.insertAndGetNewPart(ProductCode, None, Label, None)\n\tpyData \u003d system.dataset.toPyDataSet(NewPart)\n\tfor row in pyData:\n\t\tPartID \u003d row[\"PartID\"]\n\t\n\t\n\t\n\n\tif TestTypeID \u003e 0 and PartID \u003e 0:\n\t\tTestID \u003d mes.quality.sp.insertAndGetNewTest(TestTypeID \u003d TestTypeID, PartID \u003d PartID).getValueAt(0, 0)\n\t\tmessageType \u003d \u0027refreshQualityTable\u0027 \n\t\tpayload \u003d {}\n\t\tsystem.perspective.sendMessage(messageType, payload, view \u003d \u0027session\u0027)\n\t\tsystem.perspective.closePopup(\"TestType\")\n\t\tsystem.perspective.navigate(view \u003d \u0027App/Quality/Test Edit/FullView\u0027, params \u003d {\u0027TestID\u0027:TestID})"
                      },
                      "scope": "G",
                      "type": "script"
                    }
                  }
                },
                "meta": {
                  "name": "SaveButton"
                },
                "position": {
                  "grow": 1
                },
                "propConfig": {
                  "position.display": {
                    "binding": {
                      "config": {
                        "expression": "if({view.custom.ProductCodeID} \u003e 0, true, false)"
                      },
                      "type": "expr"
                    }
                  }
                },
                "props": {
                  "params": {
                    "Label": "Save",
                    "backgroundColor": "value",
                    "disabledPopup": {
                      "message": "Please sign in as quarterback to proceed.",
                      "messageType": "",
                      "payload": {},
                      "title": "Invalid Permissions"
                    },
                    "enabled": true,
                    "hover": true,
                    "iconPath": "material/add",
                    "isSelectable": false,
                    "label": "Add",
                    "selected": true,
                    "size": "142px",
                    "type": "normalsuccess"
                  },
                  "path": "GlobalComponents/Buttons/Button",
                  "style": {
                    "marginRight": "8px"
                  }
                },
                "type": "ia.display.view"
              }
            ],
            "meta": {
              "name": "Save"
            },
            "position": {
              "basis": "50%",
              "grow": 1
            },
            "type": "ia.container.flex"
          },
          {
            "children": [
              {
                "events": {
                  "dom": {
                    "onClick": {
                      "config": {
                        "script": "\tsystem.perspective.closePopup(\"TestType\")"
                      },
                      "scope": "G",
                      "type": "script"
                    }
                  }
                },
                "meta": {
                  "name": "CancelButton"
                },
                "position": {
                  "grow": 1
                },
                "props": {
                  "params": {
                    "IconPath": "material/cancel",
                    "Label": "Cancel",
                    "backgroundColor": "value",
                    "disabledPopup": {
                      "message": "Please sign in as quarterback to proceed.",
                      "messageType": "",
                      "payload": {},
                      "title": "Invalid Permissions"
                    },
                    "enabled": true,
                    "hover": true,
                    "isSelectable": false,
                    "label": "Cancel",
                    "selected": true,
                    "size": "value",
                    "type": "normalfail"
                  },
                  "path": "GlobalComponents/Buttons/Button"
                },
                "type": "ia.display.view"
              }
            ],
            "meta": {
              "name": "Cancel"
            },
            "position": {
              "basis": "50%",
              "grow": 1
            },
            "props": {
              "direction": "column"
            },
            "type": "ia.container.flex"
          }
        ],
        "meta": {
          "name": "Footer"
        },
        "position": {
          "basis": "40px",
          "grow": 1
        },
        "props": {
          "style": {
            "classes": "Global/MarginAll"
          }
        },
        "type": "ia.container.flex"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "direction": "column"
    },
    "type": "ia.container.flex"
  }
}