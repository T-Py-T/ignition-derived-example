{
  "custom": {
    "AllAreasOEE_AQP": null,
    "AllLinesOEE_AQP": {
      "$": [
        "ds",
        192,
        1705001337415
      ],
      "$columns": [
        {
          "data": [
            1023,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18
          ],
          "name": "AreaID",
          "type": "Integer"
        },
        {
          "data": [
            1026,
            23,
            22,
            21,
            20,
            19,
            18,
            17,
            16,
            11,
            10,
            9,
            5
          ],
          "name": "LineID",
          "type": "Integer"
        },
        {
          "data": [
            "Line 1",
            "Line 11",
            "Line 12",
            "Line 14",
            "Line 15",
            "Line 16",
            "Line 17",
            "Line 18",
            "Line 19",
            "Line 21",
            "Line 22",
            "Line 23",
            "Line 24"
          ],
          "name": "Line",
          "type": "String"
        },
        {
          "data": [
            0.972819,
            0,
            0.972705,
            0.972815,
            0.303338,
            0.972815,
            0.303068,
            0.97277,
            0.972815,
            0.972613,
            0,
            0.972814,
            0.305467
          ],
          "name": "OEE",
          "type": "Double"
        },
        {
          "data": [
            1,
            0,
            0.9998846757080911,
            1,
            0.3118138204631424,
            1,
            0.3115370421625611,
            0.9999538702832365,
            1,
            0.999792416274564,
            0,
            1,
            0.31400498200941046
          ],
          "name": "A",
          "type": "Double"
        },
        {
          "data": [
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1
          ],
          "name": "P",
          "type": "Double"
        },
        {
          "data": [
            0.9728190625835992,
            0.9728169368303639,
            0.9728171882060452,
            0.9728152588243664,
            0.9728177852042689,
            0.9728153291409611,
            0.9728144021045532,
            0.9728145592649106,
            0.9728147838169964,
            0.9728151848952136,
            0.9728147091629402,
            0.9728139349601562,
            0.9728100508327402
          ],
          "name": "Q",
          "type": "Double"
        }
      ]
    },
    "AllSiteOEE_AQP": null,
    "AreaDropdown": [
      {
        "label": "All",
        "value": "all"
      },
      {
        "label": "PE Extrusion",
        "value": 18
      },
      {
        "label": "Cast House",
        "value": 1021
      }
    ],
    "Areas": null,
    "FilteredDS": {
      "$": [
        "ds",
        192,
        1705001407140
      ],
      "$columns": [
        {
          "data": [
            1023,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18
          ],
          "name": "AreaID",
          "type": "Integer"
        },
        {
          "data": [
            1026,
            23,
            22,
            21,
            20,
            19,
            18,
            17,
            16,
            11,
            10,
            9,
            5
          ],
          "name": "LineID",
          "type": "Integer"
        },
        {
          "data": [
            "Line 1",
            "Line 11",
            "Line 12",
            "Line 14",
            "Line 15",
            "Line 16",
            "Line 17",
            "Line 18",
            "Line 19",
            "Line 21",
            "Line 22",
            "Line 23",
            "Line 24"
          ],
          "name": "Line",
          "type": "String"
        },
        {
          "data": [
            0.972819,
            0,
            0.972705,
            0.972815,
            0.303338,
            0.972815,
            0.303068,
            0.97277,
            0.972815,
            0.972613,
            0,
            0.972814,
            0.305467
          ],
          "name": "OEE",
          "type": "Double"
        },
        {
          "data": [
            1,
            0,
            0.9998846757080911,
            1,
            0.3118138204631424,
            1,
            0.3115370421625611,
            0.9999538702832365,
            1,
            0.999792416274564,
            0,
            1,
            0.31400498200941046
          ],
          "name": "A",
          "type": "Double"
        },
        {
          "data": [
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            0,
            1,
            1
          ],
          "name": "P",
          "type": "Double"
        },
        {
          "data": [
            0.9728190625835992,
            0.9728169368303639,
            0.9728171882060452,
            0.9728152588243664,
            0.9728177852042689,
            0.9728153291409611,
            0.9728144021045532,
            0.9728145592649106,
            0.9728147838169964,
            0.9728151848952136,
            0.9728147091629402,
            0.9728139349601562,
            0.9728100508327402
          ],
          "name": "Q",
          "type": "Double"
        }
      ]
    },
    "FilteredLines": null,
    "FilteredLinesByArea": [],
    "GroupBy": "area",
    "IsValidDate": true,
    "LineDropdown": [
      {
        "label": "All",
        "value": "all"
      },
      {
        "label": "Line 1",
        "value": 1018
      },
      {
        "label": "Line 11",
        "value": 23
      },
      {
        "label": "Line 12",
        "value": 22
      },
      {
        "label": "Line 14",
        "value": 21
      },
      {
        "label": "Line 15",
        "value": 20
      },
      {
        "label": "Line 16",
        "value": 19
      },
      {
        "label": "Line 17",
        "value": 18
      },
      {
        "label": "Line 18",
        "value": 17
      },
      {
        "label": "Line 19",
        "value": 16
      },
      {
        "label": "Line 2",
        "value": 1025
      },
      {
        "label": "Line 20",
        "value": 12
      },
      {
        "label": "Line 21",
        "value": 11
      },
      {
        "label": "Line 22",
        "value": 10
      },
      {
        "label": "Line 23",
        "value": 9
      },
      {
        "label": "Line 24",
        "value": 5
      }
    ],
    "LoadingBar": null,
    "OEEThickness": 5
  },
  "params": {},
  "permissions": {
    "securityLevels": [
      {
        "children": [
          {
            "children": [
              {
                "children": [],
                "name": "Administrator"
              },
              {
                "children": [],
                "name": "Manager"
              }
            ],
            "name": "Roles"
          }
        ],
        "name": "Authenticated"
      }
    ],
    "type": "AnyOf"
  },
  "propConfig": {
    "custom.AllAreasOEE_AQP": {
      "binding": {
        "config": {
          "enableValueCache": false,
          "parameters": {
            "endTime": "{view.custom.EndTime}",
            "site": "{session.custom.SelectedSite}",
            "startTime": "{view.custom.StartTime}"
          },
          "queryPath": "app/OEE/getReportAreaOEE_AQP"
        },
        "type": "query"
      },
      "persistent": true
    },
    "custom.AllLinesOEE_AQP": {
      "binding": {
        "config": {
          "enableValueCache": false,
          "parameters": {
            "area": "\u0027\u0027",
            "endTime": "{view.custom.EndTime}",
            "line": "\u0027\u0027",
            "shift": "\u0027\u0027",
            "siteID": "{session.custom.SelectedSite}",
            "startTime": "{view.custom.StartTime}"
          },
          "queryPath": "app/OEE/getReportLinesOEE_AQP"
        },
        "type": "query"
      },
      "persistent": true
    },
    "custom.AllSiteOEE_AQP": {
      "binding": {
        "config": {
          "enableValueCache": false,
          "parameters": {
            "endTime": "{view.custom.EndTime}",
            "site": "{session.custom.SelectedSite}",
            "startTime": "{view.custom.StartTime}"
          },
          "queryPath": "app/OEE/getReportSiteOEE_AQP"
        },
        "type": "query"
      },
      "persistent": true
    },
    "custom.AreaDropdown": {
      "binding": {
        "config": {
          "path": "session.custom.AreaDropdown"
        },
        "type": "property"
      },
      "persistent": true
    },
    "custom.Areas": {
      "binding": {
        "config": {
          "path": "view.custom.AllAreasOEE_AQP"
        },
        "transforms": [
          {
            "code": "\tjson \u003d gpa.data.datasetToJson(value)\n\tareaArray \u003d []\n\t\n\tfor area in json:\n\t\tareaArray.append({\n\t\t\t  \"viewPath\": \"GlobalComponents/Objects/Gauges/OEE/AQPCombined\",\n\t\t\t  \"viewParams\": {\n\t\t\t\t  \t\"EqPath\": \u0027\u0027, \n\t\t\t\t  \t\"State\": \"\", \n\t\t\t\t  \t\"Thickness\": self.custom.OEEThickness,\n\t\t\t\t  \t\"IsReport\": True,\n\t\t\t\t  \t\"AreaName\": area[\"AreaName\"],\n\t\t\t\t  \t\"ReportData\": {\n\t\t\t\t  \t\t\u0027OEE\u0027: area[\u0027OEE\u0027],\n\t\t\t\t  \t\t\u0027A\u0027: area[\u0027A\u0027],\n\t\t\t\t  \t\t\u0027Q\u0027: area[\u0027Q\u0027],\n\t\t\t\t  \t\t\u0027P\u0027: area[\u0027P\u0027]\n\t\t\t\t  \t},\n\t\t\t  \t},\n\t\t\t  \"direction\": \"row\",\n\t\t\t  \"justify\": \"flex-start\",\n\t\t\t  \"alignItems\": \"flex-start\"\t\n\t\t})\n\t\t\n\treturn areaArray\n\t\n\t\t",
            "type": "script"
          }
        ],
        "type": "property"
      },
      "persistent": true
    },
    "custom.ChartData": {
      "binding": {
        "config": {
          "struct": {
            "selectedAreaID": "{view.custom.SelectedAreaID}",
            "selectedLineID": "{view.custom.SelectedLineID}"
          },
          "waitOnAll": true
        },
        "transforms": [
          {
            "code": "\tparams \u003d {}\n\tselectedSiteName \u003d self.session.custom.SelectedSiteName\n\t\n\tif value[\u0027selectedLineID\u0027] \u003d\u003d \u0027\u0027 and value[\u0027selectedAreaID\u0027] \u003d\u003d \u0027\u0027:\n\t\tsiteOEEData \u003d gpa.data.datasetToJson(self.custom.AllSiteOEE_AQP)\n\t\tfor data in siteOEEData:\n\t\t\tsystem.perspective.print(data)\n\t\t\tparams[\u0027dataAvailability\u0027] \u003d [{ \u0027Line\u0027: selectedSiteName, \u0027OEE\u0027: data[\u0027A\u0027] * 100 }]\n\t\t\tparams[\u0027dataOEE\u0027] \u003d [{ \u0027Line\u0027: selectedSiteName, \u0027OEE\u0027: data[\u0027OEE\u0027] * 100 }]\n\t\t\tparams[\u0027dataPerformance\u0027] \u003d [{ \u0027Line\u0027: selectedSiteName, \u0027OEE\u0027: data[\u0027P\u0027] * 100 }]\n\t\t\tparams[\u0027dataQuality\u0027] \u003d [{ \u0027Line\u0027: selectedSiteName, \u0027OEE\u0027: data[\u0027Q\u0027] * 100 }]\n\t\t\t\n\tif value[\u0027selectedAreaID\u0027] !\u003d \u0027\u0027 and value[\u0027selectedLineID\u0027] \u003d\u003d \u0027\u0027:\n\t\tareaOEEData \u003d gpa.data.datasetToJson(self.custom.AllAreasOEE_AQP)\n\t\tareaName \u003d \u0027\u0027\n\t\tselectedAreaID \u003d self.custom.SelectedAreaID\n\t\tfor area in self.custom.AreaDropdown: \n\t\t\tif area[\u0027value\u0027] \u003d\u003d selectedAreaID: areaName \u003d area[\u0027label\u0027]\n\t\t\tfor data in areaOEEData:\n\t\t\t\tif data[\u0027AreaID\u0027] \u003d\u003d selectedAreaID:\n\t\t\t\t\tparams[\u0027dataAvailability\u0027] \u003d [{ \u0027Line\u0027: areaName, \u0027OEE\u0027: data[\u0027A\u0027] * 100 }]\n\t\t\t\t\tparams[\u0027dataOEE\u0027] \u003d [{ \u0027Line\u0027: areaName, \u0027OEE\u0027: data[\u0027OEE\u0027] * 100 }]\n\t\t\t\t\tparams[\u0027dataPerformance\u0027] \u003d [{ \u0027Line\u0027: areaName, \u0027OEE\u0027: data[\u0027P\u0027] * 100 }]\n\t\t\t\t\tparams[\u0027dataQuality\u0027] \u003d [{ \u0027Line\u0027: areaName, \u0027OEE\u0027: data[\u0027Q\u0027] * 100 }]\n\t\n\tif value[\u0027selectedLineID\u0027] !\u003d \u0027\u0027 and value[\u0027selectedAreaID\u0027] \u003d\u003d \u0027\u0027:\n\t\tlineOEEData \u003d gpa.data.datasetToJson(self.custom.AllLinesOEE_AQP)\n\t\tlineName \u003d \u0027\u0027\n\t\tselectedLineID \u003d self.custom.SelectedLineID\n\t\tfor line in self.custom.LineDropdown: \n\t\t\tif line[\u0027value\u0027] \u003d\u003d selectedLineID: lineName \u003d line[\u0027label\u0027]\n\t\tfor data in lineOEEData:\n\t\t\tif data[\u0027LineID\u0027] \u003d\u003d selectedLineID:\n\t\t\t\tparams[\u0027dataAvailability\u0027] \u003d [{ \u0027Line\u0027: lineName, \u0027OEE\u0027: data[\u0027A\u0027] * 100 }]\n\t\t\t\tparams[\u0027dataOEE\u0027] \u003d [{ \u0027Line\u0027: lineName, \u0027OEE\u0027: data[\u0027OEE\u0027] * 100 }]\n\t\t\t\tparams[\u0027dataPerformance\u0027] \u003d [{ \u0027Line\u0027: lineName, \u0027OEE\u0027: data[\u0027P\u0027] * 100 }]\n\t\t\t\tparams[\u0027dataQuality\u0027] \u003d [{ \u0027Line\u0027: lineName, \u0027OEE\u0027: data[\u0027Q\u0027] * 100 }]\n\t\t\t\t\n#\tif value[\u0027selectedLineID\u0027] \u003d\u003d \u0027all\u0027 or value[\u0027selectedAreaID\u0027] \u003d\u003d \u0027all\u0027:\n#\t\terrorParams \u003d {\n#\t\t\t\"ModalName\": \"ErrorModal\",\n#\t\t\t\"ErrorMessage\": \"Please select a area or line before continuing.\"\n#\t\t}\n#\t\tsystem.perspective.sendMessage(\u0027oaqpAllSelected\u0027)\n#\t\tsystem.perspective.openPopup(\"ErrorModal\", \"GlobalComponents/Modals/ErrorModal\", errorParams)\n\t\t\n\treturn params",
            "type": "script"
          }
        ],
        "type": "expr-struct"
      },
      "persistent": false
    },
    "custom.EndTime": {
      "binding": {
        "config": {
          "path": "/root/Header/timeSelector.props.params.timeEnd"
        },
        "type": "property"
      },
      "onChange": {
        "enabled": null,
        "script": "\tself.refreshBinding(\u0027custom.FilteredDS\u0027)"
      },
      "persistent": false
    },
    "custom.FilteredDS": {
      "binding": {
        "config": {
          "path": "view.custom.SelectedAreaID"
        },
        "transforms": [
          {
            "code": "\tselectedArea \u003d value\n\tselectedLine \u003d self.custom.SelectedLineID\n\t\n\tif selectedArea \u003d\u003d \u0027all\u0027 and selectedLine \u003d\u003d \u0027\u0027:\n\t\treturn self.custom.AllLinesOEE_AQP\n\telif selectedLine \u003d\u003d \u0027all\u0027 and selectedArea \u003d\u003d \u0027\u0027:\n\t\treturn self.custom.AllLinesOEE_AQP\n\telif selectedArea \u003d\u003d \u0027\u0027 and selectedLine \u003d\u003d \u0027\u0027:\n\t\treturn self.custom.AllLinesOEE_AQP\n\telif selectedArea !\u003d \u0027\u0027 and selectedLine \u003d\u003d \u0027\u0027:\n\t\treturn self.custom.FilteredLinesByArea\n\telif selectedLine !\u003d \u0027\u0027 and selectedArea \u003d\u003d \u0027\u0027:\n\t\treturn self.custom.FilteredLines",
            "type": "script"
          }
        ],
        "type": "property"
      },
      "persistent": true
    },
    "custom.FilteredLines": {
      "binding": {
        "config": {
          "path": "view.custom.AllLinesOEE_AQP"
        },
        "transforms": [
          {
            "code": "\tselectedLineID \u003d self.custom.SelectedLineID\n\tfilteredData \u003d []\n\t\n\tif selectedLineID !\u003d \u0027\u0027:\n\t\tjson \u003d gpa.data.datasetToJson(value)\n\t\t\n\t\tfor line in json:\n\t\t\tif line[\u0027LineID\u0027] \u003d\u003d selectedLineID:\n\t\t\t\tfilteredData.append({\n\t\t\t\t\t\u0027LineID\u0027: line[\u0027LineID\u0027],\n\t\t\t\t\t\u0027AreaID\u0027: line[\u0027AreaID\u0027],\n\t\t\t\t\t\u0027Line\u0027: line[\u0027Line\u0027],\n\t\t\t\t\t\u0027OEE\u0027: line[\u0027OEE\u0027],\n\t\t\t\t\t\u0027A\u0027: line[\u0027A\u0027],\n\t\t\t\t\t\u0027Q\u0027: line[\u0027Q\u0027],\n\t\t\t\t\t\u0027P\u0027: line[\u0027P\u0027]\n\t\t\t\t})\n\t\t\n#\t\treturn gpa.data.jsonToDataset(filteredData)\n\t\treturn filteredData\n\t\t\t\t\n\t\t",
            "type": "script"
          }
        ],
        "type": "property"
      },
      "onChange": {
        "enabled": null,
        "script": "\tself.refreshBinding(\u0027custom.FilteredDS\u0027)"
      },
      "persistent": true
    },
    "custom.FilteredLinesByArea": {
      "binding": {
        "config": {
          "path": "view.custom.AllLinesOEE_AQP"
        },
        "transforms": [
          {
            "code": "\tselectedAreaID \u003d self.custom.SelectedAreaID\n\tfilteredData \u003d []\n\t\n\tif selectedAreaID !\u003d \u0027\u0027:\n\t\tjson_data \u003d gpa.data.datasetToJson(value)\n\t\tfor area in json_data:\n\t\t\tif area[\u0027AreaID\u0027] \u003d\u003d selectedAreaID:\n\t\t\t\tfilteredData.append({\n\t\t\t\t\t\u0027LineID\u0027: area[\u0027LineID\u0027],\n\t\t\t\t\t\u0027AreaID\u0027: area[\u0027AreaID\u0027],\n\t\t\t\t\t\u0027Line\u0027: area[\u0027Line\u0027],\n\t\t\t\t\t\u0027OEE\u0027: area[\u0027OEE\u0027],\n\t\t\t\t\t\u0027A\u0027: area[\u0027A\u0027],\n\t\t\t\t\t\u0027Q\u0027: area[\u0027Q\u0027],\n\t\t\t\t\t\u0027P\u0027: area[\u0027P\u0027]\n\t\t\t\t})\n\n#\t\treturn gpa.data.jsonToDataset(filteredData)\n\t\t#return json\n\t\treturn filteredData\n\t\t",
            "type": "script"
          }
        ],
        "type": "property"
      },
      "onChange": {
        "enabled": null,
        "script": "\tself.refreshBinding(\u0027custom.FilteredDS\u0027)"
      },
      "persistent": true
    },
    "custom.GroupBy": {
      "binding": {
        "config": {
          "path": "/root/Header/GroupContainer/FilterSelection.props.value"
        },
        "type": "property"
      },
      "persistent": true
    },
    "custom.IsValidDate": {
      "persistent": true
    },
    "custom.LineDropdown": {
      "binding": {
        "config": {
          "path": "session.custom.LineDropdown"
        },
        "type": "property"
      },
      "persistent": true
    },
    "custom.LoadingBar": {
      "binding": {
        "config": {
          "struct": {
            "allAreas": "runScript(\u0027gpa.data.datasetToJson\u0027, 0, {view.custom.AllAreasOEE_AQP})",
            "allLines": "runScript(\u0027gpa.data.datasetToJson\u0027, 0, {view.custom.AllLinesOEE_AQP})",
            "allSites": "runScript(\u0027gpa.data.datasetToJson\u0027, 0, {view.custom.AllSiteOEE_AQP})"
          },
          "waitOnAll": true
        },
        "transforms": [
          {
            "code": "\t\n\tdef showSpinner():\n\t    self.getChild(\"root/loading\").position.display \u003d True\n\t    self.getChild(\"root/Content\").position.display \u003d False\n\tdef hideSpinner():\n\t    self.getChild(\"root/loading\").position.display \u003d False\n\t    self.getChild(\"root/Content\").position.display \u003d True\n\t    \n\tready \u003d False\n\t\n\tshowSpinner()\n\twhile ready !\u003d True:\n\t\tif len(value.allAreas) \u003e 0 and len(value.allLines) \u003e 0 and len(value.allSites) \u003e 0:\n\t\t\tready \u003d True\n\t\t\tbreak\n\t\telse: ready \u003d False\n\n\thideSpinner()\n\treturn ready",
            "type": "script"
          }
        ],
        "type": "expr-struct"
      },
      "persistent": true
    },
    "custom.OEEThickness": {
      "persistent": true
    },
    "custom.SelectedAreaID": {
      "binding": {
        "config": {
          "path": "/root/Header/LineContainer/SelectFilter.props.value"
        },
        "transforms": [
          {
            "expression": "if({view.custom.GroupBy} \u003d \u0027area\u0027, {value}, \u0027\u0027)",
            "type": "expression"
          }
        ],
        "type": "property"
      },
      "onChange": {
        "enabled": null,
        "script": "\tself.getChild(\"root/Content/OEEContainer/OEETable\").refreshBinding(\u0027props.params.Params.Dataset\u0027)\n\tself.refreshBinding(\u0027custom.FilteredLinesByArea\u0027)\n\tself.refreshBinding(\u0027custom.ChartData\u0027)\n\n\t"
      },
      "persistent": false
    },
    "custom.SelectedLineID": {
      "binding": {
        "config": {
          "path": "/root/Header/LineContainer/SelectFilter.props.value"
        },
        "transforms": [
          {
            "expression": "if({view.custom.GroupBy} \u003d \u0027line\u0027, {value}, \u0027\u0027)",
            "type": "expression"
          }
        ],
        "type": "property"
      },
      "onChange": {
        "enabled": null,
        "script": "\tself.getChild(\"root/Content/OEEContainer/OEETable\").refreshBinding(\u0027props.params.Params.Dataset\u0027)\n\tself.refreshBinding(\u0027custom.FilteredLines\u0027)\n\tself.refreshBinding(\u0027custom.ChartData\u0027)\n"
      },
      "persistent": false
    },
    "custom.StartTime": {
      "binding": {
        "config": {
          "path": "/root/Header/timeSelector.props.params.timeStart"
        },
        "type": "property"
      },
      "onChange": {
        "enabled": null,
        "script": "\tself.refreshBinding(\u0027custom.FilteredDS\u0027)"
      },
      "persistent": false
    }
  },
  "props": {
    "defaultSize": {
      "height": 900,
      "width": 1700
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "Filters"
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "events": {
              "dom": {
                "onClick": {
                  "config": {
                    "script": "\tself.view.refreshBinding(\u0027custom.AllLinesOEE_AQP\u0027)\n\t\n\tstartTime \u003d self.getSibling(\"timeSelector\").props.params.timeStart\n\tendTime \u003d self.getSibling(\"timeSelector\").props.params.timeEnd\n\t\n\tself.view.custom.StartTime \u003d startTime\n\tself.view.custom.EndTime \u003d endTime"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "RunReport"
            },
            "position": {
              "basis": "150px",
              "display": false
            },
            "props": {
              "params": {
                "BackgroundColor": "value",
                "DisabledPopup": {
                  "message": "Please sign in as quarterback to proceed.",
                  "messageType": "",
                  "payload": {},
                  "title": "Invalid Permissions"
                },
                "Enabled": true,
                "Hover": true,
                "IconPath": "material/check",
                "IsSelectable": false,
                "Label": "Run Report",
                "Selected": true,
                "Size": "value",
                "Type": "value"
              },
              "path": "GlobalComponents/Buttons/Button",
              "style": {
                "paddingBottom": "3ch",
                "paddingLeft": "1ch",
                "paddingRight": "1ch",
                "paddingTop": "3ch"
              }
            },
            "type": "ia.display.view"
          },
          {
            "events": {
              "dom": {
                "onClick": {
                  "config": {
                    "script": "\tsystem.perspective.print(self.props.params.timeStart)"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "timeSelector"
            },
            "position": {
              "basis": "275px",
              "shrink": 0
            },
            "propConfig": {
              "props.params.timeEnd": {
                "binding": {
                  "config": {
                    "expression": "addHours(now(), 1)"
                  },
                  "type": "expr"
                }
              }
            },
            "props": {
              "params": {
                "enabledQuickRange": false,
                "timeStart": {
                  "$": [
                    "ts",
                    201,
                    1704991823942
                  ],
                  "$ts": 1702399815569
                }
              },
              "path": "GlobalComponents/Selections/ReportDateRangeSelector"
            },
            "type": "ia.display.view"
          },
          {
            "children": [
              {
                "events": {
                  "component": {
                    "onActionPerformed": {
                      "config": {
                        "script": "\n\tself.parent.parent.getChild(\"LineContainer/SelectFilter\").refreshBinding(\u0027props.options\u0027)"
                      },
                      "enabled": false,
                      "scope": "G",
                      "type": "script"
                    }
                  }
                },
                "meta": {
                  "name": "FilterSelection"
                },
                "position": {
                  "basis": "42px",
                  "grow": 1,
                  "shrink": 0
                },
                "propConfig": {
                  "props.value": {
                    "binding": {
                      "config": {
                        "bidirectional": true,
                        "path": "view.custom.groupBy"
                      },
                      "enabled": false,
                      "overlayOptOut": true,
                      "type": "property"
                    }
                  }
                },
                "props": {
                  "dropdownOptionStyle": {
                    "classes": "TextFields/Dropdown"
                  },
                  "options": [
                    {
                      "label": "Line",
                      "value": "line"
                    },
                    {
                      "label": "Area",
                      "value": "area"
                    }
                  ],
                  "placeholder": {
                    "text": "Group by..."
                  },
                  "style": {
                    "classes": "TextFields/Dropdown",
                    "marginBottom": 35,
                    "marginTop": 20
                  },
                  "value": "area"
                },
                "type": "ia.input.dropdown"
              },
              {
                "meta": {
                  "name": "Shift"
                },
                "position": {
                  "basis": "42px",
                  "display": false
                },
                "props": {
                  "dropdownOptionStyle": {
                    "classes": "TextFields/Dropdown"
                  },
                  "options": [
                    {
                      "label": "Line",
                      "value": "equipmentName"
                    },
                    {
                      "label": "Area",
                      "value": "area"
                    },
                    {
                      "label": "Operator",
                      "value": "operator"
                    },
                    {
                      "label": "Shift",
                      "value": "shift"
                    }
                  ],
                  "placeholder": {
                    "text": "Shift"
                  },
                  "style": {
                    "classes": "TextFields/Dropdown"
                  },
                  "value": "Shift"
                },
                "type": "ia.input.dropdown"
              }
            ],
            "meta": {
              "name": "GroupContainer"
            },
            "position": {
              "basis": "250px"
            },
            "props": {
              "direction": "column",
              "justify": "space-around",
              "style": {
                "overflow": "hidden",
                "paddingTop": 1
              }
            },
            "type": "ia.container.flex"
          },
          {
            "children": [
              {
                "meta": {
                  "name": "SelectFilter"
                },
                "position": {
                  "basis": "42px",
                  "grow": 1,
                  "shrink": 0
                },
                "propConfig": {
                  "props.options": {
                    "binding": {
                      "config": {
                        "path": "view.custom.GroupBy"
                      },
                      "transforms": [
                        {
                          "expression": "if({value} \u003d \u0027line\u0027, {view.custom.LineDropdown}, {view.custom.AreaDropdown})",
                          "type": "expression"
                        }
                      ],
                      "type": "property"
                    }
                  },
                  "props.value": {
                    "persistent": true
                  }
                },
                "props": {
                  "dropdownOptionStyle": {
                    "classes": "TextFields/Dropdown"
                  },
                  "placeholder": {
                    "text": "Select"
                  },
                  "style": {
                    "classes": "TextFields/Dropdown"
                  },
                  "value": "all"
                },
                "type": "ia.input.dropdown"
              },
              {
                "meta": {
                  "name": "SelectArea"
                },
                "position": {
                  "basis": "42px",
                  "display": false
                },
                "propConfig": {
                  "props.value": {
                    "binding": {
                      "config": {
                        "bidirectional": true,
                        "path": "view.custom.GroupBy"
                      },
                      "overlayOptOut": true,
                      "type": "property"
                    }
                  }
                },
                "props": {
                  "dropdownOptionStyle": {
                    "classes": "TextFields/Dropdown"
                  },
                  "options": [
                    {
                      "label": "Line",
                      "value": "equipmentName"
                    },
                    {
                      "label": "Area",
                      "value": "area"
                    },
                    {
                      "label": "Operator",
                      "value": "operator"
                    },
                    {
                      "label": "Shift",
                      "value": "shift"
                    }
                  ],
                  "placeholder": {
                    "text": "Group by..."
                  },
                  "style": {
                    "classes": "TextFields/Dropdown"
                  }
                },
                "type": "ia.input.dropdown"
              }
            ],
            "meta": {
              "name": "LineContainer"
            },
            "position": {
              "basis": "250px"
            },
            "props": {
              "direction": "column",
              "justify": "space-around",
              "style": {
                "marginBottom": 30,
                "overflow": "hidden",
                "paddingTop": 15
              }
            },
            "type": "ia.container.flex"
          },
          {
            "children": [
              {
                "meta": {
                  "name": "SelectedShift"
                },
                "position": {
                  "basis": "42px"
                },
                "propConfig": {
                  "props.value": {
                    "binding": {
                      "config": {
                        "bidirectional": true,
                        "path": "view.custom.groupBy"
                      },
                      "overlayOptOut": true,
                      "type": "property"
                    }
                  }
                },
                "props": {
                  "dropdownOptionStyle": {
                    "classes": "TextFields/Dropdown"
                  },
                  "options": [
                    {
                      "label": "Line",
                      "value": "equipmentName"
                    },
                    {
                      "label": "Area",
                      "value": "area"
                    },
                    {
                      "label": "Operator",
                      "value": "operator"
                    },
                    {
                      "label": "Shift",
                      "value": "shift"
                    }
                  ],
                  "placeholder": {
                    "text": "Group by..."
                  },
                  "style": {
                    "classes": "Global/MarginAllTop Global/MarginBottom TextFields/Dropdown"
                  }
                },
                "type": "ia.input.dropdown"
              }
            ],
            "meta": {
              "name": "Shift"
            },
            "position": {
              "basis": "250px",
              "display": false
            },
            "props": {
              "direction": "column",
              "style": {
                "borderLeftColor": "#E0E0E0",
                "borderLeftStyle": "solid",
                "borderLeftWidth": 1,
                "borderTopWidth": "1px",
                "overflow": "hidden",
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12
              }
            },
            "type": "ia.container.flex"
          },
          {
            "events": {
              "dom": {
                "onClick": {
                  "config": {
                    "script": "\tself.view.custom.filters.lineFilters \u003d None\n\tself.view.custom.filters.shiftFilters \u003d None\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "ClearAllFilters"
            },
            "position": {
              "basis": "100px",
              "display": false
            },
            "props": {
              "params": {
                "enabled": true,
                "label": "Clear Filters"
              },
              "path": "GlobalComponents/Buttons/Button",
              "style": {
                "paddingBottom": "3ch",
                "paddingLeft": "1ch",
                "paddingRight": "1ch",
                "paddingTop": "3ch"
              }
            },
            "type": "ia.display.view"
          },
          {
            "events": {
              "dom": {
                "onClick": {
                  "config": {
                    "script": "\tself.getSibling(\"AnalysisObject\").props.params.dataList[\u0027oapqByArea\u0027] \u003d []\n\tself.getSibling(\"AnalysisObject\").props.params.dataList[\u0027oapqByLine\u0027] \u003d []\n\tself.getSibling(\"AnalysisObject\").props.params.dataList[\u0027oapqByOperator\u0027] \u003d []\n\tself.getSibling(\"AnalysisObject\").props.params.dataList[\u0027oapqBySite\u0027] \u003d []\n\tself.getSibling(\"AnalysisObject\").props.params.dataList[\u0027oapqByShift\u0027] \u003d []\n\tself.getSibling(\"AnalysisObject\").props.params.dataList[\u0027getShifts\u0027] \u003d []\n\tself.getSibling(\"AnalysisObject\").props.params.dataList[\u0027getLines\u0027] \u003d []\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "ClearData"
            },
            "position": {
              "basis": "100px",
              "display": false
            },
            "props": {
              "params": {
                "enabled": true,
                "label": "Clear Data"
              },
              "path": "GlobalComponents/Buttons/Button",
              "style": {
                "paddingBottom": "3ch",
                "paddingLeft": "1ch",
                "paddingRight": "1ch",
                "paddingTop": "3ch"
              }
            },
            "type": "ia.display.view"
          },
          {
            "meta": {
              "name": "EmbeddedView_0"
            },
            "position": {
              "basis": "100px",
              "display": false
            },
            "propConfig": {
              "props.params.columns": {
                "binding": {
                  "config": {
                    "path": ".../Content/TableContainer/Table.props.columns"
                  },
                  "type": "property"
                }
              },
              "props.params.data": {
                "binding": {
                  "config": {
                    "struct": {
                      "groupBy": "{view.custom.groupBy}",
                      "oapqByArea": "{view.custom.oapqByArea}",
                      "oapqByLine": "{view.custom.oapqByLine}",
                      "oapqByOperator": "{view.custom.oapqByOperator}",
                      "oapqByShift": "{view.custom.oapqByShift}",
                      "oapqBySite": "{view.custom.oapqBySite}"
                    },
                    "waitOnAll": true
                  },
                  "transforms": [
                    {
                      "code": "\tgroupBy \u003d self.view.custom.groupBy\n\toapqByLine \u003d self.view.custom.oapqByLine\n\toapqBySite \u003d self.view.custom.oapqBySite\n\toapqByArea \u003d self.view.custom.oapqByArea\n\toapqByShift \u003d self.view.custom.oapqByShift\n\toapqByOperator \u003d self.view.custom.oapqByOperator\n\t\n\tif groupBy \u003d\u003d \"equipmentName\":\n\t\tdata \u003d oapqByLine\n\telif groupBy \u003d\u003d \"area\":\n\t\tdata \u003d oapqByArea\n\telif groupBy \u003d\u003d \"shift\":\n\t\tdata \u003d oapqByShift\n\telif groupBy \u003d\u003d \"operator\":\n\t\tdata \u003d oapqByOperator\n\telif groupBy \u003d\u003d \"site\":\n\t\tdata \u003d oapqBySite\n\telse:\n\t\tdata \u003d oapqByLine\n\t\n\treturn data",
                      "type": "script"
                    }
                  ],
                  "type": "expr-struct"
                }
              }
            },
            "props": {
              "params": {
                "enabled": true,
                "extension": "csv",
                "filename": "oapq",
                "iconPath": "material/save"
              },
              "path": "GlobalComponents/Buttons/Button",
              "style": {
                "paddingBottom": "3ch",
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": "3ch"
              }
            },
            "type": "ia.display.view"
          },
          {
            "meta": {
              "name": "Label"
            },
            "position": {
              "basis": "50px",
              "display": false,
              "grow": 1
            },
            "props": {
              "style": {
                "paddingBottom": "3ch",
                "paddingLeft": "1ch",
                "paddingRight": "1ch",
                "paddingTop": "3ch",
                "textAlign": "right"
              },
              "text": "Run Report after selecting Area, Line, or Shift."
            },
            "type": "ia.display.label"
          }
        ],
        "meta": {
          "name": "Header"
        },
        "position": {
          "basis": "100px",
          "shrink": 0
        },
        "props": {
          "style": {
            "classes": "Global/MarginBottom",
            "overflow": "hidden"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "children": [
              {
                "children": [
                  {
                    "meta": {
                      "name": "SiteOEE"
                    },
                    "position": {
                      "basis": "50%",
                      "grow": 1,
                      "shrink": 0
                    },
                    "propConfig": {
                      "props.params.Params.ReportData.A": {
                        "binding": {
                          "config": {
                            "path": "view.custom.AllSiteOEE_AQP"
                          },
                          "transforms": [
                            {
                              "expression": "{value}[\"A\"]",
                              "type": "expression"
                            }
                          ],
                          "type": "property"
                        }
                      },
                      "props.params.Params.ReportData.OEE": {
                        "binding": {
                          "config": {
                            "path": "view.custom.AllSiteOEE_AQP"
                          },
                          "transforms": [
                            {
                              "expression": "{value}[\"OEE\"]",
                              "type": "expression"
                            }
                          ],
                          "type": "property"
                        }
                      },
                      "props.params.Params.ReportData.P": {
                        "binding": {
                          "config": {
                            "path": "view.custom.AllSiteOEE_AQP"
                          },
                          "transforms": [
                            {
                              "expression": "{value}[\"P\"]",
                              "type": "expression"
                            }
                          ],
                          "type": "property"
                        }
                      },
                      "props.params.Params.ReportData.Q": {
                        "binding": {
                          "config": {
                            "path": "view.custom.AllSiteOEE_AQP"
                          },
                          "transforms": [
                            {
                              "expression": "{value}[\"Q\"]",
                              "type": "expression"
                            }
                          ],
                          "type": "property"
                        }
                      }
                    },
                    "props": {
                      "params": {
                        "EqPath": "value",
                        "HideTitle": false,
                        "Icon": "material/error",
                        "IconDisplay": true,
                        "Params": {
                          "EqPath": "",
                          "IsReport": true,
                          "ReportData": {},
                          "State": "fail",
                          "Thickness": 15
                        },
                        "Path": "GlobalComponents/Objects/Gauges/OEE/ReportAQP",
                        "Provider": "value",
                        "SizeBasis": "value",
                        "TagPath": "value",
                        "Title": "Site OEE",
                        "Type": "fail",
                        "useDefaultHeight": false,
                        "useDefaultWidth": false
                      },
                      "path": "GlobalComponents/Cards/Card",
                      "style": {
                        "classes": "Global/MarginBottom"
                      }
                    },
                    "scripts": {
                      "customMethods": [],
                      "extensionFunctions": null,
                      "messageHandlers": [
                        {
                          "messageType": "aggregate",
                          "pageScope": false,
                          "script": "\t# implement your handler here\n#\tnetPlannedChangeover \u003d payload[\"netPlannedChangeover\"]\n#\tnetChangeoverDuration \u003d payload[\"netChangeoverDuration\"]\n#\t\n#\tlineData \u003d payload[\u0027lineData\u0027]\n#\tfor line in lineData:\n#\t\tif line[\u0027label\u0027] \u003d\u003d self.props.params.title:\n#\t\t\toee \u003d line[\u0027oee\u0027]\n#\t\t\ta \u003d line[\u0027availability\u0027]\n#\t\t\tp \u003d line[\u0027performance\u0027]\n#\t\t\tq \u003d line[\u0027quality\u0027]\n#\t\t\t\n#\t\t\tself.props.params.availability.value \u003d a\n#\t\t\tself.props.params.performance.value \u003d p\n#\t\t\tself.props.params.quality.value \u003d q\n#\t\t\tself.props.params.oEE.value \u003d oee\n#\tself.props.params.data[0].value \u003d netPlannedChangeover\n#\tself.props.params.data[1].value \u003d netChangeoverDuration",
                          "sessionScope": false,
                          "viewScope": false
                        }
                      ]
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "AreaOEE"
                    },
                    "position": {
                      "basis": "50%",
                      "grow": 1,
                      "shrink": 0
                    },
                    "propConfig": {
                      "meta.visible": {
                        "binding": {
                          "config": {
                            "expression": "if({view.custom.SelectedLineID}\u003d\u0027\u0027,true,false) \u0026\u0026 if(len({view.custom.FilteredDS}) \u003d 0, false, true)"
                          },
                          "type": "expr"
                        }
                      },
                      "props.params.Params.ReportData.A": {
                        "binding": {
                          "config": {
                            "path": "view.custom.AllAreasOEE_AQP"
                          },
                          "transforms": [
                            {
                              "code": "\tvalue \u003d system.dataset.toPyDataSet(value)\n\tAreaID \u003d self.view.custom.SelectedAreaID\n\t\n\tif AreaID \u003d\u003d \u0027all\u0027:\n\t\tvalue \u003d system.dataset.toPyDataSet(self.view.custom.AllSiteOEE_AQP)\n\t\t# Calculate mean of A for all entries\n\t\ttotal_A \u003d sum(data[\"A\"] for data in value)\n\t\tmean_A \u003d total_A / len(value)\n\t\treturn mean_A\n\telse:\n\t    for data in value:\n\t        if data[\"AreaID\"] \u003d\u003d int(AreaID):\n\t            return data[\"A\"]",
                              "type": "script"
                            }
                          ],
                          "type": "property"
                        }
                      },
                      "props.params.Params.ReportData.OEE": {
                        "binding": {
                          "config": {
                            "path": "view.custom.AllAreasOEE_AQP"
                          },
                          "transforms": [
                            {
                              "code": "\tvalue \u003d system.dataset.toPyDataSet(value)\n\tAreaID \u003d self.view.custom.SelectedAreaID\n\t\n\tif AreaID \u003d\u003d \u0027all\u0027:\n\t\tvalue \u003d system.dataset.toPyDataSet(self.view.custom.AllSiteOEE_AQP)\n\t\t# Calculate mean of OEE for all entries\n\t\ttotal_OEE \u003d sum(data[\"OEE\"] for data in value)\n\t\tmean_OEE \u003d total_OEE / len(value)\n\t\treturn mean_OEE\n\telse:\n\t    for data in value:\n\t        if data[\"AreaID\"] \u003d\u003d int(AreaID):\n\t            return data[\"OEE\"]",
                              "type": "script"
                            }
                          ],
                          "type": "property"
                        }
                      },
                      "props.params.Params.ReportData.P": {
                        "binding": {
                          "config": {
                            "path": "view.custom.AllAreasOEE_AQP"
                          },
                          "transforms": [
                            {
                              "code": "\tvalue \u003d system.dataset.toPyDataSet(value)\n\tAreaID \u003d self.view.custom.SelectedAreaID\n\t\n\tif AreaID \u003d\u003d \u0027all\u0027:\n\t\tvalue \u003d system.dataset.toPyDataSet(self.view.custom.AllSiteOEE_AQP)\n\t\t# Calculate mean of P for all entries\n\t\ttotal_P \u003d sum(data[\"P\"] for data in value)\n\t\tmean_P \u003d total_P / len(value)\n\t\treturn mean_P\n\telse:\n\t    for data in value:\n\t        if data[\"AreaID\"] \u003d\u003d int(AreaID):\n\t            return data[\"P\"]",
                              "type": "script"
                            }
                          ],
                          "type": "property"
                        }
                      },
                      "props.params.Params.ReportData.Q": {
                        "binding": {
                          "config": {
                            "path": "view.custom.AllAreasOEE_AQP"
                          },
                          "transforms": [
                            {
                              "code": "\tvalue \u003d system.dataset.toPyDataSet(value)\n\tAreaID \u003d self.view.custom.SelectedAreaID\n\t\n\tif AreaID \u003d\u003d \u0027all\u0027:\n\t\tvalue \u003d system.dataset.toPyDataSet(self.view.custom.AllSiteOEE_AQP)\n\t\t# Calculate mean of Q for all entries\n\t\ttotal_Q \u003d sum(data[\"Q\"] for data in value)\n\t\tmean_Q \u003d total_Q / len(value)\n\t\treturn mean_Q\n\telse:\n\t    for data in value:\n\t        if data[\"AreaID\"] \u003d\u003d int(AreaID):\n\t            return data[\"Q\"]",
                              "type": "script"
                            }
                          ],
                          "type": "property"
                        }
                      }
                    },
                    "props": {
                      "params": {
                        "EqPath": "value",
                        "HideTitle": false,
                        "Icon": "material/error",
                        "IconDisplay": true,
                        "Params": {
                          "EqPath": "",
                          "IsReport": true,
                          "ReportData": {},
                          "State": "fail",
                          "Thickness": 15
                        },
                        "Path": "GlobalComponents/Objects/Gauges/OEE/ReportAQP",
                        "Provider": "value",
                        "SizeBasis": "value",
                        "TagPath": "value",
                        "Title": "Area OEE",
                        "Type": "fail",
                        "useDefaultHeight": false,
                        "useDefaultWidth": false
                      },
                      "path": "GlobalComponents/Cards/Card",
                      "style": {
                        "classes": "Global/MarginBottom",
                        "paddingBottom": 10
                      }
                    },
                    "scripts": {
                      "customMethods": [],
                      "extensionFunctions": null,
                      "messageHandlers": [
                        {
                          "messageType": "aggregate",
                          "pageScope": false,
                          "script": "\t# implement your handler here\n#\tnetPlannedChangeover \u003d payload[\"netPlannedChangeover\"]\n#\tnetChangeoverDuration \u003d payload[\"netChangeoverDuration\"]\n#\t\n#\tlineData \u003d payload[\u0027lineData\u0027]\n#\tfor line in lineData:\n#\t\tif line[\u0027label\u0027] \u003d\u003d self.props.params.title:\n#\t\t\toee \u003d line[\u0027oee\u0027]\n#\t\t\ta \u003d line[\u0027availability\u0027]\n#\t\t\tp \u003d line[\u0027performance\u0027]\n#\t\t\tq \u003d line[\u0027quality\u0027]\n#\t\t\t\n#\t\t\tself.props.params.availability.value \u003d a\n#\t\t\tself.props.params.performance.value \u003d p\n#\t\t\tself.props.params.quality.value \u003d q\n#\t\t\tself.props.params.oEE.value \u003d oee\n#\tself.props.params.data[0].value \u003d netPlannedChangeover\n#\tself.props.params.data[1].value \u003d netChangeoverDuration",
                          "sessionScope": false,
                          "viewScope": false
                        }
                      ]
                    },
                    "type": "ia.display.view"
                  }
                ],
                "meta": {
                  "name": "OEESite"
                },
                "position": {
                  "basis": "350px"
                },
                "props": {
                  "alignContent": "flex-start",
                  "direction": "column",
                  "style": {
                    "classes": "Global/MarginRight",
                    "overflow": "hidden"
                  }
                },
                "type": "ia.container.flex"
              },
              {
                "children": [
                  {
                    "custom": {
                      "limit": 10
                    },
                    "meta": {
                      "name": "OEEChart",
                      "visible": false
                    },
                    "position": {
                      "display": false,
                      "grow": 1
                    },
                    "propConfig": {
                      "custom.data": {
                        "binding": {
                          "config": {
                            "path": "view.custom.oapqByLine"
                          },
                          "overlayOptOut": true,
                          "transforms": [
                            {
                              "code": "\tlineData \u003d value\n\tdataOEE \u003d []\n\tdataAvailability \u003d []\n\tdataPerformance \u003d []\n\tdataQuality \u003d []\n\tlimit \u003d 20\n\tfor index, line in enumerate(lineData):\n\t\trowDataOEE \u003d {}\n\t\trowDataAvailability \u003d {}\n\t\trowDataPerformance \u003d {}\n\t\trowDataQuality \u003d {}\n\t\trowDataOEE[\u0027OEE\u0027] \u003d int(line[\u0027oee\u0027]*100)\n\t\trowDataAvailability[\u0027OEE\u0027] \u003d int(line[\u0027oeeAvailability\u0027]*100)\n\t\trowDataPerformance[\u0027OEE\u0027] \u003d int(line[\u0027oeePerformance\u0027]*100)\n\t\trowDataQuality[\u0027OEE\u0027] \u003d int(line[\u0027oeeQuality\u0027]*100)\n\t\t\n\t\trowDataOEE[\u0027Line\u0027] \u003d line[\u0027equipmentName\u0027]\n\t\trowDataAvailability[\u0027Line\u0027] \u003d line[\u0027equipmentName\u0027]\n\t\trowDataPerformance[\u0027Line\u0027] \u003d line[\u0027equipmentName\u0027]\n\t\trowDataQuality[\u0027Line\u0027] \u003d line[\u0027equipmentName\u0027]\n\t\t\n\t\tif line[\u0027equipmentName\u0027] not in (\u0027Site\u0027,\u0027Assembly\u0027,\u0027Printing\u0027,\u0027Packaging\u0027,\u0027Molding\u0027) and index \u003c limit:\n\t\t\tdataOEE.append(rowDataOEE)\n\t\t\tdataAvailability.append(rowDataAvailability)\n\t\t\tdataPerformance.append(rowDataPerformance)\n\t\t\tdataQuality.append(rowDataQuality)\n\t\n\n\tdata \u003d {\"dataOEE\":dataOEE, \"dataAvailability\":dataAvailability, \"dataPerformance\":dataPerformance, \"dataQuality\":dataQuality}\n\treturn data",
                              "type": "script"
                            }
                          ],
                          "type": "property"
                        }
                      },
                      "props.params": {
                        "binding": {
                          "config": {
                            "struct": {
                              "groupBy": "{view.custom.groupBy}",
                              "limit": "{this.custom.limit}",
                              "oapqByArea": "{view.custom.oapqByArea}",
                              "oapqByLine": "{view.custom.oapqByLine}",
                              "oapqByOperator": "{view.custom.oapqByOperator}",
                              "oapqByShift": "{view.custom.oapqByShift}"
                            },
                            "waitOnAll": true
                          },
                          "transforms": [
                            {
                              "code": "\tkeys \u003d []\n\tgroupBy \u003d value.groupBy\n\tif groupBy \u003d\u003d \"equipmentName\":\n\t\tdata \u003d self.view.custom.oapqByLine\n\telif groupBy \u003d\u003d \"area\":\n\t\tdata \u003d self.view.custom.oapqByArea\n\telif groupBy \u003d\u003d \"operator\":\n\t\tdata \u003d self.view.custom.oapqByOperator\n\telif groupBy \u003d\u003d \"shift\":\n\t\tdata \u003d self.view.custom.oapqByShift\n\telse:\n\t\tdata \u003d self.view.custom.oapqByLine\n\t\n\tdataOEE \u003d []\n\tdataAvailability \u003d []\n\tdataPerformance \u003d []\n\tdataQuality \u003d []\n\tlimit \u003d self.custom.limit\n\tfor index, row in enumerate(data):\n\t\trowDataOEE \u003d {}\n\t\trowDataAvailability \u003d {}\n\t\trowDataPerformance \u003d {}\n\t\trowDataQuality \u003d {}\n\t\t\n\t\trowDataOEE[\u0027OEE\u0027] \t\t\t\t\u003d int(row[\u0027oee\u0027]*100)\n\t\trowDataAvailability[\u0027OEE\u0027] \t\t\u003d int(row[\u0027oeeAvailability\u0027]*100)\n\t\trowDataPerformance[\u0027OEE\u0027] \t\t\u003d int(row[\u0027oeePerformance\u0027]*100)\n\t\trowDataQuality[\u0027OEE\u0027] \t\t\t\u003d int(row[\u0027oeeQuality\u0027]*100)\n\t\t\n\t\trowDataOEE[\u0027Line\u0027] \t\t\t\t\u003d row[groupBy]\n\t\trowDataAvailability[\u0027Line\u0027] \t\u003d row[groupBy]\n\t\trowDataPerformance[\u0027Line\u0027] \t\t\u003d row[groupBy]\n\t\trowDataQuality[\u0027Line\u0027] \t\t\t\u003d row[groupBy]\n\n\t\t#if row[groupBy] not in (\u0027Site\u0027,\u0027Assembly\u0027,\u0027Printing\u0027,\u0027Packaging\u0027,\u0027Molding\u0027) and index \u003c limit:\n\n\t\tdataOEE\t\t\t\t\t\t\t.append(rowDataOEE)\n\t\tdataAvailability\t\t\t\t.append(rowDataAvailability)\n\t\tdataPerformance\t\t\t\t\t.append(rowDataPerformance)\n\t\tdataQuality\t\t\t\t\t\t.append(rowDataQuality)\n\t\n\tdataOEE \t\t\t\u003d sorted(dataOEE, \t\t\tkey \u003d lambda row: row[\"OEE\"], reverse\u003dTrue)\n\tdataAvailability \t\u003d sorted(dataAvailability, \tkey \u003d lambda row: row[\"OEE\"], reverse\u003dTrue)\n\tdataPerformance \t\u003d sorted(dataPerformance, \tkey \u003d lambda row: row[\"OEE\"], reverse\u003dTrue)\n\tdataQuality \t\t\u003d sorted(dataQuality, \t\tkey \u003d lambda row: row[\"OEE\"], reverse\u003dTrue)\n\t\n\tdataOEE \t\t\t\u003d dataOEE[:limit]\n\tdataAvailability \t\u003d dataAvailability[:limit]\n\tdataPerformance \t\u003d dataPerformance[:limit]\n\tdataQuality \t\t\u003d dataQuality[:limit]\n\n\tdata \u003d {\n\t\t\"dataOEE\":dataOEE, \n\t\t\"dataAvailability\":dataAvailability, \n\t\t\"dataPerformance\":dataPerformance, \n\t\t\"dataQuality\":dataQuality,\n\t\t\"selectedCategory\":\"OEE\",\n\t\t\u0027header\u0027:\u0027OAPQ\u0027,\n\t\t\"limit\":self.custom.limit,\n\t}\n\treturn data\n\t",
                              "type": "script"
                            }
                          ],
                          "type": "expr-struct"
                        }
                      }
                    },
                    "props": {
                      "columns": [
                        {
                          "align": "center",
                          "boolean": "checkbox",
                          "dateFormat": "MM/DD/YYYY HH:mm:ss",
                          "editable": false,
                          "field": "equipmentName",
                          "footer": {
                            "align": "center",
                            "justify": "left",
                            "style": {
                              "classes": ""
                            },
                            "title": "Line"
                          },
                          "header": {
                            "align": "center",
                            "justify": "left",
                            "style": {
                              "classes": ""
                            },
                            "title": "Line"
                          },
                          "justify": "auto",
                          "number": "value",
                          "numberFormat": "0,0",
                          "render": "auto",
                          "resizable": true,
                          "sortable": true,
                          "strictWidth": true,
                          "style": {
                            "classes": ""
                          },
                          "viewParams": {},
                          "viewPath": "",
                          "visible": true,
                          "width": ""
                        },
                        {
                          "align": "center",
                          "boolean": "checkbox",
                          "dateFormat": "MM/DD/YYYY HH:mm:ss",
                          "editable": false,
                          "field": "oee",
                          "footer": {
                            "align": "center",
                            "justify": "left",
                            "style": {
                              "classes": ""
                            },
                            "title": "OEE"
                          },
                          "header": {
                            "align": "center",
                            "justify": "left",
                            "style": {
                              "classes": ""
                            },
                            "title": "OEE"
                          },
                          "justify": "auto",
                          "number": "value",
                          "numberFormat": "0,0.0%",
                          "render": "auto",
                          "resizable": true,
                          "sortable": true,
                          "strictWidth": true,
                          "style": {
                            "classes": ""
                          },
                          "viewParams": {},
                          "viewPath": "",
                          "visible": true,
                          "width": ""
                        },
                        {
                          "align": "center",
                          "boolean": "checkbox",
                          "dateFormat": "MM/DD/YYYY HH:mm:ss",
                          "editable": false,
                          "field": "oeeAvailability",
                          "footer": {
                            "align": "center",
                            "justify": "left",
                            "style": {
                              "classes": ""
                            },
                            "title": "A"
                          },
                          "header": {
                            "align": "center",
                            "justify": "left",
                            "style": {
                              "classes": ""
                            },
                            "title": "A"
                          },
                          "justify": "auto",
                          "number": "value",
                          "numberFormat": "0,0.0%",
                          "render": "auto",
                          "resizable": true,
                          "sortable": true,
                          "strictWidth": true,
                          "style": {
                            "classes": ""
                          },
                          "viewParams": {},
                          "viewPath": "",
                          "visible": true,
                          "width": ""
                        },
                        {
                          "align": "center",
                          "boolean": "checkbox",
                          "dateFormat": "MM/DD/YYYY HH:mm:ss",
                          "editable": false,
                          "field": "oeePerformance",
                          "footer": {
                            "align": "center",
                            "justify": "left",
                            "style": {
                              "classes": ""
                            },
                            "title": "P"
                          },
                          "header": {
                            "align": "center",
                            "justify": "left",
                            "style": {
                              "classes": ""
                            },
                            "title": "P"
                          },
                          "justify": "auto",
                          "number": "value",
                          "numberFormat": "0,0.0%",
                          "render": "auto",
                          "resizable": true,
                          "sortable": true,
                          "strictWidth": true,
                          "style": {
                            "classes": ""
                          },
                          "viewParams": {},
                          "viewPath": "",
                          "visible": true,
                          "width": ""
                        },
                        {
                          "align": "center",
                          "boolean": "checkbox",
                          "dateFormat": "MM/DD/YYYY HH:mm:ss",
                          "editable": false,
                          "field": "oeeQuality",
                          "footer": {
                            "align": "center",
                            "justify": "left",
                            "style": {
                              "classes": ""
                            },
                            "title": "Q"
                          },
                          "header": {
                            "align": "center",
                            "justify": "left",
                            "style": {
                              "classes": ""
                            },
                            "title": "Q"
                          },
                          "justify": "auto",
                          "number": "value",
                          "numberFormat": "0,0.0%",
                          "render": "auto",
                          "resizable": true,
                          "sortable": true,
                          "strictWidth": true,
                          "style": {
                            "classes": ""
                          },
                          "viewParams": {},
                          "viewPath": "",
                          "visible": true,
                          "width": ""
                        }
                      ],
                      "path": "App/OEE/Management/Reports/Embedded/OEEChart",
                      "style": {
                        "classes": "Global/MarginRight"
                      }
                    },
                    "type": "ia.display.view"
                  },
                  {
                    "meta": {
                      "name": "EmbeddedView",
                      "visible": false
                    },
                    "position": {
                      "basis": "320px",
                      "display": false,
                      "grow": 1
                    },
                    "propConfig": {
                      "props.params.Params.dataAvailability": {
                        "binding": {
                          "config": {
                            "path": "view.custom.ChartData.dataAvailability"
                          },
                          "type": "property"
                        }
                      },
                      "props.params.Params.dataOEE": {
                        "binding": {
                          "config": {
                            "path": "view.custom.ChartData.dataOEE"
                          },
                          "type": "property"
                        }
                      },
                      "props.params.Params.dataPerformance": {
                        "binding": {
                          "config": {
                            "path": "view.custom.ChartData.dataPerformance"
                          },
                          "type": "property"
                        }
                      },
                      "props.params.Params.dataQuality": {
                        "binding": {
                          "config": {
                            "path": "view.custom.ChartData.dataQuality"
                          },
                          "type": "property"
                        }
                      }
                    },
                    "props": {
                      "params": {
                        "EqPath": "value",
                        "HideTitle": false,
                        "Icon": "",
                        "IconDisplay": true,
                        "Params": {
                          "EqPath": "value",
                          "State": "value",
                          "selectedCategory": "Availability"
                        },
                        "Path": "App/OEE/Management/Reports/Embedded/OEEChart",
                        "Provider": "value",
                        "SizeBasis": "value",
                        "TagPath": "value",
                        "Title": "OEE Chart",
                        "Type": "value",
                        "useDefaultHeight": false,
                        "useDefaultWidth": false
                      },
                      "path": "GlobalComponents/Cards/Card",
                      "style": {
                        "classes": "Global/MarginRight"
                      }
                    },
                    "type": "ia.display.view"
                  }
                ],
                "meta": {
                  "name": "OEEChart",
                  "visible": false
                },
                "position": {
                  "basis": "420px",
                  "display": false
                },
                "props": {
                  "direction": "column"
                },
                "type": "ia.container.flex"
              },
              {
                "meta": {
                  "name": "OEETable"
                },
                "position": {
                  "basis": "320px",
                  "grow": 1
                },
                "propConfig": {
                  "props.params.Params.Dataset": {
                    "binding": {
                      "config": {
                        "path": "view.custom.FilteredDS"
                      },
                      "type": "property"
                    }
                  }
                },
                "props": {
                  "params": {
                    "EqPath": "value",
                    "HideTitle": false,
                    "Icon": "",
                    "IconDisplay": true,
                    "Params": {
                      "EqPath": "value",
                      "State": "value",
                      "TagPath": "value",
                      "TagProvider": "value"
                    },
                    "Path": "App/OEE/Management/Reports/Embedded/OEETable",
                    "Provider": "value",
                    "SizeBasis": "value",
                    "TagPath": "value",
                    "Title": "OEE Table (Timeperiod)",
                    "Type": "value",
                    "useDefaultHeight": false,
                    "useDefaultWidth": false
                  },
                  "path": "GlobalComponents/Cards/Card"
                },
                "type": "ia.display.view"
              }
            ],
            "meta": {
              "name": "OEEContainer"
            },
            "position": {
              "basis": "300px",
              "grow": 2,
              "shrink": 0
            },
            "props": {
              "style": {
                "overflow": "hidden"
              }
            },
            "type": "ia.container.flex"
          }
        ],
        "meta": {
          "name": "Content"
        },
        "position": {
          "basis": "200px",
          "grow": 1,
          "shrink": 0
        },
        "propConfig": {
          "position.display": {
            "binding": {
              "config": {
                "path": "../Header/AnalysisObject.props.params.run"
              },
              "transforms": [
                {
                  "expression": "!{value}",
                  "type": "expression"
                }
              ],
              "type": "property"
            }
          }
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "children": [
              {
                "meta": {
                  "name": "Progress"
                },
                "position": {
                  "basis": "25px",
                  "grow": 1
                },
                "props": {
                  "indeterminate": true
                },
                "type": "ia.display.progress"
              }
            ],
            "meta": {
              "name": "FlexContainer"
            },
            "position": {
              "basis": "300px"
            },
            "props": {
              "direction": "column"
            },
            "type": "ia.container.flex"
          }
        ],
        "meta": {
          "name": "loading"
        },
        "position": {
          "basis": "200px",
          "grow": 1
        },
        "propConfig": {
          "position.display": {
            "binding": {
              "config": {
                "expression": "!{../Content.position.display}"
              },
              "enabled": false,
              "type": "expr"
            },
            "persistent": true
          }
        },
        "props": {
          "alignItems": "center",
          "justify": "center",
          "style": {
            "backgroundColor": "#AAAAAA",
            "overflow": "visible"
          }
        },
        "type": "ia.container.flex"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "direction": "column",
      "style": {
        "classes": "Global/MarginAll"
      }
    },
    "type": "ia.container.flex"
  }
}