{
  "custom": {
    "EnterpriseID": 1,
    "SitesDropdown": {
      "$": [
        "ds",
        192,
        1704301589019
      ],
      "$columns": [
        {
          "data": [
            9,
            1014
          ],
          "name": "ID",
          "type": "Integer"
        },
        {
          "data": [
            "1NL",
            "GOOBS QA"
          ],
          "name": "Name",
          "type": "String"
        },
        {
          "data": [
            "Fiberon/1NL",
            "Fiberon/GOOBS QA"
          ],
          "name": "TagPath",
          "type": "String"
        },
        {
          "data": [
            true,
            true
          ],
          "name": "IsEnabled",
          "type": "Boolean"
        }
      ]
    }
  },
  "params": {
    "SelectedArea": "",
    "SiteID": "all"
  },
  "propConfig": {
    "custom.EnterpriseID": {
      "persistent": true
    },
    "custom.SitesDropdown": {
      "binding": {
        "config": {
          "parameters": {
            "enterpriseID": "{view.custom.EnterpriseID}"
          },
          "queryPath": "app/Equipment_Config/getAllSites"
        },
        "type": "query"
      },
      "persistent": true
    },
    "params.SelectedArea": {
      "binding": {
        "config": {
          "bidirectional": true,
          "path": "/root/FlexContainer/Dropdown.props.value"
        },
        "enabled": false,
        "type": "property"
      },
      "paramDirection": "inout",
      "persistent": true
    },
    "params.SiteID": {
      "binding": {
        "config": {
          "bidirectional": true,
          "path": "/root/FlexContainer/Sites.props.value"
        },
        "type": "property"
      },
      "paramDirection": "output",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 51,
      "width": 288
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "AreaName"
        },
        "props": {
          "style": {
            "classes": "Text/Heading TextFields/TextTitle",
            "overflow": "hidden"
          },
          "text": "Select:"
        },
        "type": "ia.display.label"
      },
      {
        "children": [
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "\tsiteId \u003d self.props.value\n\tareaName \u003d \"\"\n\teqPath \u003d \"\"\n\toptionsArr \u003d self.props.options\n\tareaOptionsArr \u003d self.custom.AreaOptions\n#\tsystem.perspective.print(eqPath)\n\t\n\tfor option in optionsArr:\n\t\tif option[\"value\"] \u003d\u003d siteId:\n\t\t\tareaName \u003d option[\"label\"]\n\t\n\tfor path in areaOptionsArr:\n\t\tif path[\"value\"] \u003d\u003d siteId:\n\t\t\teqPath \u003d path[\"eqPath\"]\n\t\n#\tpayload \u003d {\"areaId\": siteId, \"areaName\": areaName, \"eqPath\": eqPath}\t\n#\tsystem.perspective.sendMessage(\"changedAreaOverview\", payload\u003dpayload)\n\tisSite \u003d self.view.params.SiteID\n\tif isSite \u003d\u003d \u0027all\u0027: isSite \u003d True\n\telse: isSite \u003d False\n\tsystem.perspective.sendMessage(\u0027refreshSiteCharts\u0027, params\u003d{\u0027IsSite\u0027: isSite})\n\t\n\tself.view.params.SelectedArea \u003d eqPath\n\n\n\t\t\t\n\t"
                  },
                  "enabled": false,
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "Sites"
            },
            "position": {
              "basis": "190px"
            },
            "propConfig": {
              "props.options": {
                "binding": {
                  "config": {
                    "path": "view.custom.SitesDropdown"
                  },
                  "transforms": [
                    {
                      "code": "\ttry:\n\t\tjson \u003d gpa.data.datasetToJson(value)\n\t\tarr \u003d [{\u0027value\u0027: \u0027all\u0027, \u0027label\u0027: \u0027All\u0027}]\n\t\t\n\t\tfor j in json:\n\t\t\tarr.append({ \u0027value\u0027: j.get(\u0027ID\u0027), \u0027label\u0027: j.get(\u0027Name\u0027) })\n\t\t\n\t\treturn arr\n\texcept Exception as e:\n\t\traise str(e)",
                      "type": "script"
                    }
                  ],
                  "type": "property"
                }
              },
              "props.value": {
                "binding": {
                  "config": {
                    "path": "view.params.SelectedArea"
                  },
                  "enabled": false,
                  "type": "property"
                }
              }
            },
            "props": {
              "placeholder": {
                "text": ""
              },
              "style": {
                "classes": "TextFields/Dropdown",
                "overflow": "hidden"
              },
              "value": "all"
            },
            "type": "ia.input.dropdown"
          }
        ],
        "meta": {
          "name": "FlexContainer"
        },
        "position": {
          "basis": "207.1px",
          "grow": 1
        },
        "props": {
          "style": {
            "marginRight": "16px",
            "overflow": "hidden"
          }
        },
        "type": "ia.container.flex"
      }
    ],
    "events": {
      "dom": {
        "onClick": {
          "config": {
            "script": "\tsystem.perspective.print(self.view.params.SelectedArea)"
          },
          "scope": "G",
          "type": "script"
        }
      }
    },
    "meta": {
      "name": "root"
    },
    "props": {
      "style": {
        "overflow": "hidden"
      }
    },
    "scripts": {
      "customMethods": [],
      "extensionFunctions": null,
      "messageHandlers": [
        {
          "messageType": "changedSite",
          "pageScope": true,
          "script": "\tsiteID \u003d payload.get(\u0027SiteID\u0027)\n\t\n\tif siteID !\u003d self.view.params.SiteID:\n\t\tself.getChild(\"FlexContainer/Sites\").props.value \u003d siteID",
          "sessionScope": false,
          "viewScope": false
        }
      ]
    },
    "type": "ia.container.flex"
  }
}