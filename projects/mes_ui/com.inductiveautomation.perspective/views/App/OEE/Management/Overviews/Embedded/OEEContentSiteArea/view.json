{
  "custom": {
    "AreaID": null,
    "LineColor": null,
    "LineIcon": null,
    "LineState": "",
    "MetricsInstances": [
      {
        "Header": "OEE",
        "LegendColor": "yellow",
        "Metric": "64.3%",
        "ShowLegend": false,
        "Units": "",
        "instancePosition": {},
        "instanceStyle": {
          "classes": ""
        }
      },
      {
        "Header": "Availability",
        "LegendColor": "#EBB800",
        "Metric": "66.09%",
        "ShowLegend": true,
        "Units": "",
        "instancePosition": {},
        "instanceStyle": {
          "classes": ""
        }
      },
      {
        "Header": "Quality",
        "LegendColor": "#00EB5F",
        "Metric": "97.28%",
        "ShowLegend": true,
        "Units": "",
        "instancePosition": {},
        "instanceStyle": {
          "classes": ""
        }
      },
      {
        "Header": "Performance",
        "LegendColor": "#00D2EB",
        "Metric": "100.0%",
        "ShowLegend": true,
        "Units": "",
        "instancePosition": {},
        "instanceStyle": {
          "classes": ""
        }
      }
    ],
    "OEEValues": {
      "Availability": 0.6609479,
      "OEE": 0.642975,
      "Performance": 1,
      "Quality": 0.9728468
    }
  },
  "params": {
    "EqPath": "Fiberon/1NL",
    "IsSite": false
  },
  "propConfig": {
    "custom.AreaID": {
      "binding": {
        "config": {
          "path": "view.params.EqPath"
        },
        "transforms": [
          {
            "code": "\teq \u003d value.split(\u0027/\u0027)[-1]\n\n\tareas \u003d self.session.custom.AreaDropdown\n\t\n\tfor area in areas:\n\t\tif area.get(\u0027label\u0027) \u003d\u003d eq:\n\t\t\treturn area.get(\u0027value\u0027)",
            "type": "script"
          }
        ],
        "type": "property"
      },
      "persistent": true
    },
    "custom.LineColor": {
      "binding": {
        "config": {
          "fallbackDelay": 2.5,
          "mode": "indirect",
          "references": {
            "1": "{view.params.EqPath}"
          },
          "tagPath": "{1}/OEE_Events/stateColor"
        },
        "type": "tag"
      },
      "persistent": true
    },
    "custom.LineIcon": {
      "binding": {
        "config": {
          "fallbackDelay": 2.5,
          "mode": "indirect",
          "references": {
            "1": "{view.params.EqPath}"
          },
          "tagPath": "{1}/OEE_Events/stateIcon"
        },
        "type": "tag"
      },
      "persistent": true
    },
    "custom.LineState": {
      "binding": {
        "config": {
          "fallbackDelay": 2.5,
          "mode": "indirect",
          "references": {
            "1": "{view.params.EqPath}"
          },
          "tagPath": "{1}/OEE_Events/stateDescription"
        },
        "transforms": [
          {
            "expression": "upper({value})",
            "type": "expression"
          }
        ],
        "type": "tag"
      },
      "persistent": true
    },
    "custom.MetricsInstances": {
      "binding": {
        "config": {
          "path": "view.custom.OEEValues"
        },
        "transforms": [
          {
            "code": "\tlogger \u003d system.util.getLogger(\u0027oeeInstancesMetrics\u0027)\n\tmetrics \u003d value\n\torder \u003d [\"OEE\", \"Availability\", \"Quality\", \"Performance\"]\n\t\n\tarr \u003d []\n\t\n\ttry:\n\t    for header in order:\n\t        value \u003d metrics.get(header, None)  # This will get the value or None if the header is not a key in metrics\n\t        if header \u003d\u003d \u0027Availability\u0027:\n\t        \tcolor \u003d \u0027#EBB800\u0027\n\t        \tlegend \u003d True\n\t        elif header \u003d\u003d \u0027Quality\u0027:\n\t        \tcolor \u003d \u0027#00EB5F\u0027\n\t        \tlegend \u003d True\n\t        elif header \u003d\u003d \u0027Performance\u0027:\n\t        \tcolor \u003d \u0027#00D2EB\u0027\n\t        \tlegend \u003d True\n\t        else:\n\t        \tcolor \u003d \u0027yellow\u0027\n\t        \tlegend \u003d False\n\t        if value is not None:\n\t            instance \u003d {\n\t                \"instanceStyle\": {\n\t                    \"classes\": \"\"\n\t                },\n\t                \"instancePosition\": {},\n\t                \"Header\": header,\n\t                \"Units\": \"\",\n\t                \"Metric\": str(round(value * 100, 2)) + \u0027%\u0027,  # or use some formatting if needed\n\t                \"ShowLegend\": legend,\n\t                \"LegendColor\": color\n\t            }\n\t            arr.append(instance)\n\t\n\t    return arr\n\t\n\texcept Exception as e:\n\t    logger.warn(str(e))",
            "type": "script"
          }
        ],
        "type": "property"
      },
      "persistent": true
    },
    "custom.OEEValues": {
      "binding": {
        "config": {
          "path": "/root/Cirlces/OEECircles.props.params.OEEValues"
        },
        "type": "property"
      },
      "persistent": true
    },
    "params.EqPath": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.IsSite": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 363,
      "width": 349
    }
  },
  "root": {
    "children": [
      {
        "children": [
          {
            "meta": {
              "name": "OEECircles"
            },
            "position": {
              "grow": 1
            },
            "propConfig": {
              "props.params.EQPath": {
                "binding": {
                  "config": {
                    "path": "view.params.EqPath"
                  },
                  "type": "property"
                }
              }
            },
            "props": {
              "params": {
                "FontSize": "1.25em",
                "OEEValues": {
                  "Availability": 0.6609479,
                  "OEE": 0.642975,
                  "Performance": 1,
                  "Quality": 0.9728468
                }
              },
              "path": "App/OEE/Management/Overviews/Embedded/OEECircles",
              "style": {
                "overflow": "hidden"
              },
              "useDefaultViewHeight": true,
              "useDefaultViewWidth": true
            },
            "type": "ia.display.view"
          },
          {
            "meta": {
              "name": "Metrics"
            },
            "position": {
              "basis": "173px",
              "grow": 1
            },
            "propConfig": {
              "props.instances": {
                "binding": {
                  "config": {
                    "path": "view.custom.MetricsInstances"
                  },
                  "type": "property"
                }
              }
            },
            "props": {
              "direction": "column",
              "path": "GlobalComponents/Metrics/NumberMetricHorizontal",
              "style": {
                "overflow": "hidden"
              }
            },
            "type": "ia.display.flex-repeater"
          },
          {
            "meta": {
              "name": "GoodParts"
            },
            "position": {
              "display": false,
              "grow": 1
            },
            "propConfig": {
              "props.params.EqPath": {
                "binding": {
                  "config": {
                    "path": "view.params.EqPath"
                  },
                  "type": "property"
                }
              }
            },
            "props": {
              "path": "GlobalComponents/Objects/Gauges/GoodParts/FullView",
              "style": {
                "overflow": "hidden",
                "overflowX": "hidden",
                "overflowY": "hidden"
              },
              "useDefaultViewHeight": true,
              "useDefaultViewWidth": true
            },
            "type": "ia.display.view"
          }
        ],
        "meta": {
          "name": "Cirlces"
        },
        "props": {
          "alignItems": "center",
          "style": {
            "overflow": "hidden"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "meta": {
              "name": "ParetoChart"
            },
            "propConfig": {
              "props.params.AreaID": {
                "binding": {
                  "config": {
                    "path": "view.custom.AreaID"
                  },
                  "type": "property"
                }
              },
              "props.params.EqPath": {
                "binding": {
                  "config": {
                    "path": "view.params.EqPath"
                  },
                  "type": "property"
                }
              },
              "props.params.IsSite": {
                "binding": {
                  "config": {
                    "path": "view.params.IsSite"
                  },
                  "type": "property"
                }
              }
            },
            "props": {
              "path": "GlobalComponents/Charts/SiteChart",
              "style": {
                "overflow": "hidden",
                "overflowX": "hidden",
                "overflowY": "hidden",
                "zoom": 0.71
              },
              "useDefaultViewHeight": true,
              "useDefaultViewWidth": true
            },
            "type": "ia.display.view"
          }
        ],
        "meta": {
          "name": "Pareto"
        },
        "props": {
          "style": {
            "overflow": "hidden",
            "overflowX": "hidden",
            "overflowY": "hidden"
          }
        },
        "type": "ia.container.flex"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "direction": "column",
      "style": {
        "overflow": "hidden"
      }
    },
    "type": "ia.container.flex"
  }
}