{
  "custom": {
    "AccumulatorID": "",
    "LabelDS": {
      "$": [
        "ds",
        192,
        1702585450236
      ],
      "$columns": [
        {
          "data": [],
          "name": "ID",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "Label",
          "type": "String"
        },
        {
          "data": [],
          "name": "CompositePartID",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "ProductCodeID",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "ScheduleID",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "Status",
          "type": "String"
        },
        {
          "data": [],
          "name": "CreationTime",
          "type": "Date"
        },
        {
          "data": [],
          "name": "AccumulatorID",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "IsCompletedProduct",
          "type": "Boolean"
        },
        {
          "data": [],
          "name": "InventoryID",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "IsEnabled",
          "type": "Boolean"
        },
        {
          "data": [],
          "name": "WorkorderID",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "InventoryLocation",
          "type": "String"
        }
      ]
    }
  },
  "params": {
    "ModalName": "value"
  },
  "propConfig": {
    "custom.AccumulatorID": {
      "binding": {
        "config": {
          "path": "/root/Inventory/Input/Content/InventorySelection.props.value"
        },
        "type": "property"
      },
      "persistent": true
    },
    "custom.LabelDS": {
      "binding": {
        "config": {
          "parameters": {
            "accumulatorID": "{view.custom.AccumulatorID}"
          },
          "queryPath": "app/Config/getAccumulatorLabels"
        },
        "type": "query"
      },
      "persistent": true
    },
    "params.ModalName": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 238,
      "width": 335
    }
  },
  "root": {
    "children": [
      {
        "children": [
          {
            "children": [
              {
                "meta": {
                  "name": "Label"
                },
                "position": {
                  "grow": 1
                },
                "props": {
                  "style": {
                    "marginRight": "8px"
                  },
                  "text": "Select Accumulator:",
                  "textStyle": {
                    "fontWeight": "bold",
                    "textAlign": "center"
                  }
                },
                "type": "ia.display.label"
              }
            ],
            "meta": {
              "name": "Title"
            },
            "props": {
              "style": {
                "overflow": "hidden"
              }
            },
            "type": "ia.container.flex"
          },
          {
            "children": [
              {
                "children": [
                  {
                    "events": {
                      "dom": {
                        "onClick": {
                          "config": {
                            "script": "\tself.getSibling(\"ValidationIcon\").position.display \u003d False\n\tself.parent.parent.getChild(\"ErrorValidation\").position.display \u003d False\n\tself.props.style.classes \u003d localUI.Constants.DROP_DOWN_NORMAL"
                          },
                          "scope": "G",
                          "type": "script"
                        }
                      }
                    },
                    "meta": {
                      "name": "InventorySelection"
                    },
                    "position": {
                      "grow": 1
                    },
                    "propConfig": {
                      "custom.options": {
                        "binding": {
                          "config": {
                            "expression": "runScript(\"mes.trace.sp.getAccumulators\", 0, {session.custom.SelectedSite})"
                          },
                          "transforms": [
                            {
                              "code": "\toptions \u003d []\n\tpydata \u003d system.dataset.toPyDataSet(value)\n\t\n\tfor row in pydata:\n\t\toptions.append({\n\t\t\t\"label\": row[\"Name\"],\n\t\t\t\"value\": row[\"ID\"]\n\t\t})\n\t\t\n\treturn options\n\t\t\t\n\t",
                              "type": "script"
                            }
                          ],
                          "type": "expr"
                        }
                      },
                      "props.options": {
                        "binding": {
                          "config": {
                            "path": "this.custom.options"
                          },
                          "type": "property"
                        }
                      },
                      "props.value": {
                        "onChange": {
                          "enabled": null,
                          "script": "\tpayload \u003d currentValue.getValue()\n\tif previousValue !\u003d currentValue:\n\t\tself.parent.parent.getChild(\"ErrorValidation\").position.display \u003d False\n\t\t"
                        }
                      }
                    },
                    "props": {
                      "placeholder": {
                        "icon": {
                          "path": "material/search"
                        },
                        "text": ""
                      },
                      "style": {
                        "classes": "TextFields/Dropdown"
                      }
                    },
                    "type": "ia.input.dropdown"
                  },
                  {
                    "meta": {
                      "name": "ValidationIcon"
                    },
                    "position": {
                      "basis": "25px",
                      "display": false
                    },
                    "props": {
                      "params": {
                        "icon": "material/error",
                        "type": "fail"
                      },
                      "path": "StyleGuide/Components/Icons/IconMain"
                    },
                    "type": "ia.display.view"
                  }
                ],
                "meta": {
                  "name": "Content"
                },
                "position": {
                  "basis": "40px",
                  "shrink": 0
                },
                "type": "ia.container.flex"
              },
              {
                "children": [
                  {
                    "meta": {
                      "name": "Label"
                    },
                    "position": {
                      "basis": "419px"
                    },
                    "props": {
                      "style": {
                        "classes": "TextFields/ErrorText"
                      },
                      "text": "Please check for valid input"
                    },
                    "type": "ia.display.label"
                  }
                ],
                "meta": {
                  "name": "ErrorValidation"
                },
                "position": {
                  "basis": "40px",
                  "display": false,
                  "grow": 1
                },
                "type": "ia.container.flex"
              }
            ],
            "meta": {
              "name": "Input"
            },
            "position": {
              "basis": "58.6px"
            },
            "propConfig": {
              "position.display": {
                "binding": {
                  "config": {
                    "path": "view.params.type"
                  },
                  "transforms": [
                    {
                      "fallback": true,
                      "inputType": "scalar",
                      "mappings": [
                        {
                          "input": "add",
                          "output": true
                        },
                        {
                          "input": "remove",
                          "output": false
                        }
                      ],
                      "outputType": "scalar",
                      "type": "map"
                    }
                  ],
                  "type": "property"
                }
              }
            },
            "props": {
              "direction": "column"
            },
            "type": "ia.container.flex"
          }
        ],
        "meta": {
          "name": "Inventory"
        },
        "position": {
          "basis": "50%",
          "grow": 1
        },
        "props": {
          "direction": "column"
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "children": [
              {
                "meta": {
                  "name": "Label"
                },
                "position": {
                  "grow": 1
                },
                "props": {
                  "style": {
                    "marginRight": "8px"
                  },
                  "text": "Enter Label:",
                  "textStyle": {
                    "fontWeight": "bold",
                    "textAlign": "center"
                  }
                },
                "type": "ia.display.label"
              }
            ],
            "meta": {
              "name": "Title"
            },
            "props": {
              "style": {
                "overflow": "hidden"
              }
            },
            "type": "ia.container.flex"
          },
          {
            "children": [
              {
                "children": [
                  {
                    "events": {
                      "dom": {
                        "onClick": {
                          "config": {
                            "script": "\tself.getSibling(\"ValidationIcon\").position.display \u003d False\n\tself.parent.parent.getChild(\"ErrorValidation\").position.display \u003d False\n\tself.props.style.classes \u003d localUI.Constants.DROP_DOWN_NORMAL"
                          },
                          "scope": "G",
                          "type": "script"
                        }
                      }
                    },
                    "meta": {
                      "name": "LabelSelection"
                    },
                    "position": {
                      "basis": "150px",
                      "grow": 1
                    },
                    "propConfig": {
                      "custom.options": {
                        "binding": {
                          "config": {
                            "expression": "runScript(\"mes.trace.sp.getAccumulators\", 0, {session.custom.SelectedSite})"
                          },
                          "transforms": [
                            {
                              "code": "\toptions \u003d []\n\tpydata \u003d system.dataset.toPyDataSet(value)\n\t\n\tfor row in pydata:\n\t\toptions.append({\n\t\t\t\"label\": row[\"Name\"],\n\t\t\t\"value\": row[\"ID\"]\n\t\t})\n\t\t\n\treturn options\n\t\t\t\n\t",
                              "type": "script"
                            }
                          ],
                          "type": "expr"
                        }
                      },
                      "props.options": {
                        "binding": {
                          "config": {
                            "path": "view.custom.LabelDS"
                          },
                          "type": "property"
                        }
                      },
                      "props.value": {
                        "onChange": {
                          "enabled": null,
                          "script": "\tpayload \u003d currentValue.getValue()\n\tif previousValue !\u003d currentValue:\n\t\tself.parent.parent.getChild(\"ErrorValidation\").position.display \u003d False\n\t\t"
                        }
                      }
                    },
                    "props": {
                      "placeholder": {
                        "icon": {
                          "path": "material/search"
                        },
                        "text": ""
                      },
                      "style": {
                        "classes": "TextFields/Dropdown"
                      }
                    },
                    "type": "ia.input.dropdown"
                  },
                  {
                    "meta": {
                      "name": "ValidationIcon"
                    },
                    "position": {
                      "basis": "25px",
                      "display": false
                    },
                    "props": {
                      "params": {
                        "icon": "material/error",
                        "type": "fail"
                      },
                      "path": "StyleGuide/Components/Icons/IconMain"
                    },
                    "type": "ia.display.view"
                  }
                ],
                "meta": {
                  "name": "Content"
                },
                "position": {
                  "basis": "40px",
                  "shrink": 0
                },
                "type": "ia.container.flex"
              },
              {
                "children": [
                  {
                    "meta": {
                      "name": "Label"
                    },
                    "position": {
                      "basis": "419px"
                    },
                    "props": {
                      "style": {
                        "classes": "TextFields/ErrorText"
                      },
                      "text": "Please check for valid input"
                    },
                    "type": "ia.display.label"
                  }
                ],
                "meta": {
                  "name": "ErrorValidation"
                },
                "position": {
                  "basis": "40px",
                  "display": false,
                  "grow": 1
                },
                "type": "ia.container.flex"
              }
            ],
            "meta": {
              "name": "Input"
            },
            "position": {
              "basis": "58.6px"
            },
            "propConfig": {
              "position.display": {
                "binding": {
                  "config": {
                    "path": "view.params.type"
                  },
                  "transforms": [
                    {
                      "fallback": true,
                      "inputType": "scalar",
                      "mappings": [
                        {
                          "input": "add",
                          "output": true
                        },
                        {
                          "input": "remove",
                          "output": false
                        }
                      ],
                      "outputType": "scalar",
                      "type": "map"
                    }
                  ],
                  "type": "property"
                }
              }
            },
            "props": {
              "direction": "column"
            },
            "type": "ia.container.flex"
          }
        ],
        "meta": {
          "name": "Label"
        },
        "position": {
          "basis": "50%",
          "grow": 1
        },
        "props": {
          "direction": "column"
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "children": [
              {
                "events": {
                  "dom": {
                    "onClick": {
                      "config": {
                        "script": "\ttry:\n\t\t# Grabs values from inputs\n\t\taccumulator \u003d self.parent.parent.parent.getChild(\"Inventory/Input/Content/InventorySelection\").props.value\n\t\tlabel \u003d self.parent.parent.parent.getChild(\"Label/Input/Content/TextField\").props.text\n\t\t\n\t\tif accumulator \u003d\u003d \"\" or label \u003d\u003d \"\":\n\t\t\traise Exception(\u0027One or more parameters (Accumulator, Label) are empty\u0027)\n\t\t\n\t\tif accumulator !\u003d \"\" and label !\u003d \"\":\n\t\t\tAccumulatorID \u003d self.parent.parent.parent.getChild(\"Inventory/Input/Content/InventorySelection\").props.value\n\t\t\tlabel \u003d self.parent.parent.parent.getChild(\"Label/Input/Content/TextField\").props.text\n\t\t\tLabelCheck \u003d mes.trace.sp.getParts(Label \u003d label)\n\t\t\trows \u003d LabelCheck.getRowCount()\n\t\t\tif rows \u003d\u003d 0:\n\t\t\t\tID \u003d 0\n\t\t\telse:\n\t\t\t\tID \u003d LabelCheck.getValueAt(0,0)\n\t\t\tif ID \u003e 0:\n\t\t\t\tmes.trace.sp.addPartToAccumulator(AccumulatorID, ID)\n\t\t\t\tsystem.perspective.print(\"sending data\")\n\t\t\t\tsystem.perspective.closePopup(self.view.params.ModalName)\n\t\t\telse:\n\t\t\t\traise Exception(\u0027Please enter a valid label for accumulator\u0027)\n\t\t\t\t\n\t\tmessageType \u003d \u0027refreshTable\u0027\n\t\tpayload \u003d {}\n\t\tsystem.perspective.sendMessage(messageType, payload, scope \u003d \u0027session\u0027)\n\t\t\n\t\tmessageType \u003d \u0027changedInventory\u0027\n\t\tpayload \u003d {}\n\t\tsystem.perspective.sendMessage(messageType, payload, scope \u003d \u0027session\u0027)\n\texcept Exception as e:\n\t\tmsg \u003d str(e)\n\t\tgpa.frontEnd.localUI.throwError(msg)"
                      },
                      "scope": "G",
                      "type": "script"
                    }
                  }
                },
                "meta": {
                  "name": "SaveButton"
                },
                "position": {
                  "grow": 1
                },
                "props": {
                  "params": {
                    "Label": "Save",
                    "backgroundColor": "value",
                    "disabledPopup": {
                      "message": "Please sign in as quarterback to proceed.",
                      "messageType": "",
                      "payload": {},
                      "title": "Invalid Permissions"
                    },
                    "enabled": true,
                    "hover": true,
                    "iconPath": "material/add",
                    "isSelectable": false,
                    "label": "Add",
                    "selected": true,
                    "size": "142px",
                    "type": "normalsuccess"
                  },
                  "path": "GlobalComponents/Buttons/Button",
                  "style": {
                    "marginRight": "8px"
                  }
                },
                "type": "ia.display.view"
              }
            ],
            "meta": {
              "name": "Save"
            },
            "position": {
              "basis": "50%",
              "grow": 1
            },
            "type": "ia.container.flex"
          },
          {
            "children": [
              {
                "events": {
                  "dom": {
                    "onClick": {
                      "config": {
                        "script": "\tsystem.perspective.closePopup(self.view.params.ModalName)"
                      },
                      "scope": "G",
                      "type": "script"
                    }
                  }
                },
                "meta": {
                  "name": "CancelButton"
                },
                "position": {
                  "grow": 1
                },
                "props": {
                  "params": {
                    "IconPath": "material/cancel",
                    "Label": "Cancel",
                    "backgroundColor": "value",
                    "disabledPopup": {
                      "message": "Please sign in as quarterback to proceed.",
                      "messageType": "",
                      "payload": {},
                      "title": "Invalid Permissions"
                    },
                    "enabled": true,
                    "hover": true,
                    "isSelectable": false,
                    "label": "Cancel",
                    "selected": true,
                    "size": "value",
                    "type": "normalfail"
                  },
                  "path": "GlobalComponents/Buttons/Button"
                },
                "type": "ia.display.view"
              }
            ],
            "meta": {
              "name": "Cancel"
            },
            "position": {
              "basis": "50%",
              "grow": 1
            },
            "props": {
              "direction": "column"
            },
            "type": "ia.container.flex"
          }
        ],
        "meta": {
          "name": "Footer"
        },
        "position": {
          "basis": "42px",
          "grow": 1
        },
        "type": "ia.container.flex"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "direction": "column",
      "style": {
        "classes": "Global/MarginAll"
      }
    },
    "type": "ia.container.flex"
  }
}