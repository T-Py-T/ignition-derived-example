{
  "name": "_types_",
  "tagType": "Folder",
  "tags": [
    {
      "name": "GPA",
      "tagType": "Folder",
      "tags": [
        {
          "name": "SPC",
          "tagType": "Folder"
        },
        {
          "name": "SQC",
          "tagType": "Folder"
        },
        {
          "name": "Schedule",
          "tagType": "Folder",
          "tags": [
            {
              "name": "JobMemory",
              "tagType": "UdtType",
              "tags": [
                {
                  "valueSource": "memory",
                  "dataType": "DataSet",
                  "name": "printerLabels",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "Float8",
                  "name": "targetChangeoverTime",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "DataSet",
                  "name": "manualChecks",
                  "value": "{\"columns\":[{\"name\":\"checkName\",\"type\":\"java.lang.String\"},{\"name\":\"checkType\",\"type\":\"java.lang.String\"},{\"name\":\"checkParam1\",\"type\":\"java.lang.String\"},{\"name\":\"checkParam2\",\"type\":\"java.lang.String\"},{\"name\":\"checkParam3\",\"type\":\"java.lang.String\"},{\"name\":\"actualValue\",\"type\":\"java.lang.String\"}],\"rows\":[]}",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "if({[.]priceUnit} \u003d 0 || {[.]priceUnit} \u003d null || {[.]priceUnit} \u003d \u0027\u0027, 0,  {[.]materialCost}/{[.]priceUnit})",
                  "dataType": "Float4",
                  "name": "costPerUnit",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "String",
                  "name": "platform",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "String",
                  "name": "productCode",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "Float4",
                  "name": "priceUnit",
                  "tagType": "AtomicTag"
                },
                {
                  "name": "RunCounts",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "valueSource": "memory",
                      "historyMaxAge": 10,
                      "expression": "// Total Parts - Reject \u003d Total Good Parts per shift\r\n{[.]oeeOutfeedCount} - {[.]oeeRejectCount}",
                      "historySampleRateUnits": "MIN",
                      "tagGroup": "Default",
                      "enabled": true,
                      "tagType": "AtomicTag",
                      "dataType": "Int4",
                      "historyProvider": "IgnitionHistorian",
                      "historyMaxAgeUnits": "MIN",
                      "name": "runRawScrap",
                      "historyEnabled": false,
                      "executionMode": "TagGroupRate",
                      "executionRate": 10000,
                      "value": 0,
                      "sampleMode": "Periodic",
                      "historySampleRate": 1
                    },
                    {
                      "valueSource": "memory",
                      "historyMaxAge": 10,
                      "expression": "// Total Parts - Reject \u003d Total Good Parts per shift\r\n{[.]oeeOutfeedCount} - {[.]oeeRejectCount}",
                      "historySampleRateUnits": "MIN",
                      "tagGroup": "Default",
                      "enabled": true,
                      "tagType": "AtomicTag",
                      "dataType": "Int4",
                      "historyProvider": "IgnitionHistorian",
                      "historyMaxAgeUnits": "MIN",
                      "name": "runRawInfeed",
                      "historyEnabled": false,
                      "executionMode": "TagGroupRate",
                      "executionRate": 10000,
                      "value": 0,
                      "sampleMode": "Periodic",
                      "historySampleRate": 1
                    },
                    {
                      "valueSource": "memory",
                      "sourceTagPath": "[.]../../../machineInput/reject",
                      "name": "derivedRejectCounts",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "sourceTagPath": "[.]../../../machineInput/infeed",
                      "name": "derivedInfeedCounts",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "historyMaxAge": 10,
                      "expression": "// Total Parts - Reject \u003d Total Good Parts per shift\r\n{[.]oeeOutfeedCount} - {[.]oeeRejectCount}",
                      "historySampleRateUnits": "MIN",
                      "tagGroup": "Default",
                      "enabled": true,
                      "tagType": "AtomicTag",
                      "dataType": "Int4",
                      "historyProvider": "IgnitionHistorian",
                      "historyMaxAgeUnits": "MIN",
                      "name": "runRawReject",
                      "historyEnabled": false,
                      "executionMode": "TagGroupRate",
                      "executionRate": 10000,
                      "value": 0,
                      "sampleMode": "Periodic",
                      "historySampleRate": 1
                    },
                    {
                      "valueSource": "memory",
                      "sourceTagPath": "[.]../../../machineInput/outfeed",
                      "name": "derivedOutfeedCounts",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "historyMaxAge": 10,
                      "expression": "// Total Parts - Reject \u003d Total Good Parts per shift\r\nif( {[.]runRawOutfeed} - ({[.]runRawReject} + {[.]runRawScrap}) \u003c 0,\r\n\t0,\r\n\t{[.]runRawOutfeed} - ({[.]runRawReject} + {[.]runRawScrap})\r\n\t)\r\n",
                      "historySampleRateUnits": "MIN",
                      "tagGroup": "Default",
                      "enabled": true,
                      "tagType": "AtomicTag",
                      "dataType": "Int4",
                      "historyProvider": "IgnitionHistorian",
                      "historyMaxAgeUnits": "MIN",
                      "name": "runGoodParts",
                      "historyEnabled": false,
                      "executionMode": "TagGroupRate",
                      "executionRate": 10000,
                      "sampleMode": "Periodic",
                      "historySampleRate": 1
                    },
                    {
                      "valueSource": "memory",
                      "expression": "{[.]../runId}\u003d0",
                      "dataType": "Boolean",
                      "name": "runEnded",
                      "value": false,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "historyMaxAge": 10,
                      "expression": "// Total Parts - Reject \u003d Total Good Parts per shift\r\n{[.]oeeOutfeedCount} - {[.]oeeRejectCount}",
                      "historySampleRateUnits": "MIN",
                      "tagGroup": "Default",
                      "enabled": true,
                      "tagType": "AtomicTag",
                      "dataType": "Int4",
                      "historyProvider": "IgnitionHistorian",
                      "historyMaxAgeUnits": "MIN",
                      "name": "runRawOutfeed",
                      "historyEnabled": false,
                      "executionMode": "TagGroupRate",
                      "executionRate": 10000,
                      "value": 0,
                      "sampleMode": "Periodic",
                      "historySampleRate": 1
                    },
                    {
                      "valueSource": "memory",
                      "sourceTagPath": "[.]scrap",
                      "name": "derivedScrapCounts",
                      "tagType": "AtomicTag",
                      "enabled": true
                    },
                    {
                      "valueSource": "memory",
                      "expression": "",
                      "dataType": "Float4",
                      "datasource": "MSSQL_MES",
                      "query": "SELECT COALESCE((\r\nSELECT SUM(quantity) \r\nFROM scrap.scrap_log \r\nWHERE equipment_path \u003d \u0027{[.]../../../config/equipmentPath}\u0027 \r\nAND time_recorded \u003e\u003d \u0027{[.]../time/runStartTime}\u0027\r\n),0)",
                      "name": "scrap",
                      "executionMode": "TagGroupRate",
                      "executionRate": 60000,
                      "tagGroup": "Direct Mid",
                      "enabled": true,
                      "tagType": "AtomicTag"
                    }
                  ]
                },
                {
                  "valueSource": "memory",
                  "dataType": "String",
                  "name": "workOrder",
                  "value": "",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "name": "workOrderQuantity",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "String",
                  "name": "costCenter",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "name": "targetQuantity",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "Boolean",
                  "name": "setupComplete",
                  "value": false,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "Float8",
                  "name": "partCountMultiplier",
                  "value": 1.0,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "DataSet",
                  "name": "tooling",
                  "value": "{\"columns\":[{\"name\":\"barcodePattern\",\"type\":\"java.lang.String\"},{\"name\":\"actualBarcode\",\"type\":\"java.lang.String\"}],\"rows\":[]}",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "name": "runId",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "DataSet",
                  "name": "inputMaterial",
                  "value": "{\"columns\":[{\"name\":\"partNumber\",\"type\":\"java.lang.String\"},{\"name\":\"barcodePattern\",\"type\":\"java.lang.String\"},{\"name\":\"requiredQuanity\",\"type\":\"java.lang.Float\"},{\"name\":\"actualBarcode\",\"type\":\"java.lang.String\"},{\"name\":\"actualQuantity\",\"type\":\"java.lang.Float\"}],\"rows\":[]}",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "String",
                  "name": "recipeId",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "Float4",
                  "name": "standardRate",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "String",
                  "name": "respSegUuid",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "Float4",
                  "name": "scheduleRate",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "String",
                  "name": "opRespUuid",
                  "tagType": "AtomicTag"
                },
                {
                  "name": "productionCounts",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "valueSource": "memory",
                      "dataType": "Float4",
                      "name": "output",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "Float4",
                      "name": "input",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "Float4",
                      "name": "reject",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "Float4",
                      "name": "machineReject",
                      "tagType": "AtomicTag"
                    }
                  ]
                },
                {
                  "valueSource": "memory",
                  "dataType": "String",
                  "name": "opScheduleUuid",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "String",
                  "name": "tool",
                  "totalPartCount": 0.0,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "Float4",
                  "name": "materialCost",
                  "value": 0.0,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "String",
                  "name": "productCodeID",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "Int4",
                  "name": "baseQuantity",
                  "value": 0,
                  "tagType": "AtomicTag"
                },
                {
                  "name": "validation",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "valueSource": "memory",
                      "dataType": "Boolean",
                      "name": "isInputMaterialReady",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "Boolean",
                      "name": "isPrinterLabelsReady",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "Boolean",
                      "name": "isManualChecksReady",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "Boolean",
                      "name": "isToolingReady",
                      "tagType": "AtomicTag"
                    }
                  ]
                }
              ]
            },
            {
              "name": "JobsMolding",
              "typeId": "GPA/Schedule/Jobs",
              "tagType": "UdtType",
              "tags": [
                {
                  "name": "previousJob",
                  "tagType": "UdtInstance",
                  "tags": [
                    {
                      "name": "targetChangeoverTime",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "platform",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "productCode",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "costPerUnit",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "workOrderQuantity",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "printerLabels",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "tool",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "materialCost",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "opRespUuid",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "baseQuantity",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "validation",
                      "tagType": "Folder",
                      "tags": [
                        {
                          "name": "isInputMaterialReady",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "isToolingReady",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "isPrinterLabelsReady",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "isManualChecksReady",
                          "tagType": "AtomicTag"
                        }
                      ]
                    },
                    {
                      "name": "productCodeID",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "opScheduleUuid",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "targetQuantity",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "standardRate",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "inputMaterial",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "respSegUuid",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "recipeId",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "scheduleRate",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "productionCounts",
                      "tagType": "Folder",
                      "tags": [
                        {
                          "name": "machineReject",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "output",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "reject",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "input",
                          "tagType": "AtomicTag"
                        }
                      ]
                    },
                    {
                      "name": "workOrder",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "partCountMultiplier",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "priceUnit",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "setupComplete",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "tooling",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "manualChecks",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "RunCounts",
                      "tagType": "Folder",
                      "tags": [
                        {
                          "name": "runRawOutfeed",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "runRawInfeed",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "runRawScrap",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "derivedOutfeedCounts",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "runEnded",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "derivedScrapCounts",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "derivedInfeedCounts",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "scrap",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "runRawReject",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "runGoodParts",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "derivedRejectCounts",
                          "tagType": "AtomicTag"
                        }
                      ]
                    },
                    {
                      "name": "runId",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "costCenter",
                      "tagType": "AtomicTag"
                    }
                  ]
                },
                {
                  "name": "nextJob",
                  "tagType": "UdtInstance",
                  "tags": [
                    {
                      "name": "printerLabels",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "targetChangeoverTime",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "costPerUnit",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "tool",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "manualChecks",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "priceUnit",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "runId",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "partCountMultiplier",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "tooling",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "workOrderQuantity",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "opScheduleUuid",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "workOrder",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "productCode",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "respSegUuid",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "inputMaterial",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "productCodeID",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "recipeId",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "materialCost",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "standardRate",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "baseQuantity",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "targetQuantity",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "validation",
                      "tagType": "Folder",
                      "tags": [
                        {
                          "name": "isInputMaterialReady",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "isPrinterLabelsReady",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "isManualChecksReady",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "isToolingReady",
                          "tagType": "AtomicTag"
                        }
                      ]
                    },
                    {
                      "name": "opRespUuid",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "setupComplete",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "RunCounts",
                      "tagType": "Folder",
                      "tags": [
                        {
                          "name": "scrap",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "runRawInfeed",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "runRawScrap",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "runGoodParts",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "derivedInfeedCounts",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "derivedRejectCounts",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "derivedOutfeedCounts",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "runRawOutfeed",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "runRawReject",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "runEnded",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "derivedScrapCounts",
                          "tagType": "AtomicTag"
                        }
                      ]
                    },
                    {
                      "name": "productionCounts",
                      "tagType": "Folder",
                      "tags": [
                        {
                          "name": "output",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "reject",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "input",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "machineReject",
                          "tagType": "AtomicTag"
                        }
                      ]
                    },
                    {
                      "name": "costCenter",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "platform",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "scheduleRate",
                      "tagType": "AtomicTag"
                    }
                  ]
                },
                {
                  "name": "currentJob",
                  "tagType": "UdtInstance",
                  "tags": [
                    {
                      "name": "minutesRemaining",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "SAPEarnedHoursRate",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "scheduleProgress",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "workOrder",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "productCode",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "materialCost",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "opScheduleUuid",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "inputMaterial",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "workorderProgress",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "runStartTime",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "RunCounts",
                      "tagType": "Folder",
                      "tags": [
                        {
                          "name": "runRawOutfeed",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "runEnded",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "runRawScrap",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "runRawInfeed",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "derivedScrapCounts",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "derivedInfeedCounts",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "runRawReject",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "runGoodParts",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "scrap",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "derivedRejectCounts",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "derivedOutfeedCounts",
                          "tagType": "AtomicTag"
                        }
                      ]
                    },
                    {
                      "name": "productionCounts",
                      "tagType": "Folder",
                      "tags": [
                        {
                          "name": "input",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "output",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "reject",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "machineReject",
                          "tagType": "AtomicTag"
                        }
                      ]
                    },
                    {
                      "name": "productCodeID",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "targetChangeoverTime",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "priceUnit",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "recipeId",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "setupComplete",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "manualChecks",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "costCenter",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "scheduleRate",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "targetQuantity",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "partCountMultiplier",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "platform",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "scheduleQuantity",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "validation",
                      "tagType": "Folder",
                      "tags": [
                        {
                          "name": "isInputMaterialReady",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "isPrinterLabelsReady",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "isManualChecksReady",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "isToolingReady",
                          "tagType": "AtomicTag"
                        }
                      ]
                    },
                    {
                      "name": "costPerUnit",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "tool",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "opRespUuid",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "runId",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "standardRate",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "respSegUuid",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "tooling",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "workOrderQuantity",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "printerLabels",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "time",
                      "tagType": "Folder",
                      "tags": [
                        {
                          "name": "runStartTime",
                          "tagType": "AtomicTag"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "Jobs",
              "tagType": "UdtType",
              "tags": [
                {
                  "name": "currentJob",
                  "typeId": "GPA/Schedule/Job",
                  "tagType": "UdtInstance",
                  "tags": [
                    {
                      "name": "tooling",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "priceUnit",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "recipeId",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "costPerUnit",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "targetQuantity",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "tool",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "platform",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "workOrder",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "materialCost",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "opScheduleUuid",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "workOrderQuantity",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "scheduleProgress",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "printerLabels",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "standardRate",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "respSegUuid",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "opRespUuid",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "RunCounts",
                      "tagType": "Folder",
                      "tags": [
                        {
                          "name": "runGoodParts",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "scrap",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "derivedRejectCounts",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "derivedOutfeedCounts",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "runRawInfeed",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "derivedScrapCounts",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "derivedInfeedCounts",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "runEnded",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "runRawScrap",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "runRawReject",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "runRawOutfeed",
                          "tagType": "AtomicTag"
                        }
                      ]
                    },
                    {
                      "name": "time",
                      "tagType": "Folder",
                      "tags": [
                        {
                          "name": "runStartTime",
                          "tagType": "AtomicTag"
                        }
                      ]
                    },
                    {
                      "name": "productCode",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "productionCounts",
                      "tagType": "Folder",
                      "tags": [
                        {
                          "name": "reject",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "output",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "machineReject",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "input",
                          "tagType": "AtomicTag"
                        }
                      ]
                    },
                    {
                      "name": "workorderProgress",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "runStartTime",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "SAPEarnedHoursRate",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "runId",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "targetChangeoverTime",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "inputMaterial",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "costCenter",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "validation",
                      "tagType": "Folder",
                      "tags": [
                        {
                          "name": "isToolingReady",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "isInputMaterialReady",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "isManualChecksReady",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "isPrinterLabelsReady",
                          "tagType": "AtomicTag"
                        }
                      ]
                    },
                    {
                      "name": "setupComplete",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "manualChecks",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "productCodeID",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "scheduleRate",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "partCountMultiplier",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "minutesRemaining",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "scheduleQuantity",
                      "tagType": "AtomicTag"
                    }
                  ]
                },
                {
                  "name": "previousJob",
                  "typeId": "GPA/Schedule/JobMemory",
                  "tagType": "UdtInstance",
                  "tags": [
                    {
                      "name": "productCodeID",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "scheduleRate",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "materialCost",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "respSegUuid",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "recipeId",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "baseQuantity",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "opRespUuid",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "workOrderQuantity",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "inputMaterial",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "runId",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "costCenter",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "platform",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "tooling",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "targetQuantity",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "setupComplete",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "RunCounts",
                      "tagType": "Folder",
                      "tags": [
                        {
                          "name": "runGoodParts",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "runEnded",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "scrap",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "runRawReject",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "derivedScrapCounts",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "derivedRejectCounts",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "runRawOutfeed",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "runRawInfeed",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "runRawScrap",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "derivedInfeedCounts",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "derivedOutfeedCounts",
                          "tagType": "AtomicTag"
                        }
                      ]
                    },
                    {
                      "name": "standardRate",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "manualChecks",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "printerLabels",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "partCountMultiplier",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "productionCounts",
                      "tagType": "Folder",
                      "tags": [
                        {
                          "name": "input",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "output",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "machineReject",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "reject",
                          "tagType": "AtomicTag"
                        }
                      ]
                    },
                    {
                      "name": "priceUnit",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "workOrder",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "costPerUnit",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "tool",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "targetChangeoverTime",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "opScheduleUuid",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "validation",
                      "tagType": "Folder",
                      "tags": [
                        {
                          "name": "isInputMaterialReady",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "isToolingReady",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "isManualChecksReady",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "isPrinterLabelsReady",
                          "tagType": "AtomicTag"
                        }
                      ]
                    },
                    {
                      "name": "productCode",
                      "tagType": "AtomicTag"
                    }
                  ]
                },
                {
                  "name": "nextJob",
                  "typeId": "GPA/Schedule/JobMemory",
                  "tagType": "UdtInstance",
                  "tags": [
                    {
                      "name": "materialCost",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "opRespUuid",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "setupComplete",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "respSegUuid",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "baseQuantity",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "RunCounts",
                      "tagType": "Folder",
                      "tags": [
                        {
                          "name": "runRawOutfeed",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "derivedOutfeedCounts",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "runRawInfeed",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "runRawScrap",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "runEnded",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "scrap",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "derivedScrapCounts",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "derivedInfeedCounts",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "runRawReject",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "runGoodParts",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "derivedRejectCounts",
                          "tagType": "AtomicTag"
                        }
                      ]
                    },
                    {
                      "name": "productCodeID",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "targetChangeoverTime",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "platform",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "scheduleRate",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "tool",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "printerLabels",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "workOrder",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "productionCounts",
                      "tagType": "Folder",
                      "tags": [
                        {
                          "name": "machineReject",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "output",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "reject",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "input",
                          "tagType": "AtomicTag"
                        }
                      ]
                    },
                    {
                      "name": "tooling",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "partCountMultiplier",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "priceUnit",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "opScheduleUuid",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "costCenter",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "validation",
                      "tagType": "Folder",
                      "tags": [
                        {
                          "name": "isToolingReady",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "isInputMaterialReady",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "isPrinterLabelsReady",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "isManualChecksReady",
                          "tagType": "AtomicTag"
                        }
                      ]
                    },
                    {
                      "name": "manualChecks",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "standardRate",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "targetQuantity",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "inputMaterial",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "runId",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "productCode",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "costPerUnit",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "recipeId",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "workOrderQuantity",
                      "tagType": "AtomicTag"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Job",
              "tagType": "UdtType",
              "tags": [
                {
                  "valueSource": "memory",
                  "dataType": "String",
                  "name": "productCode",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "({[.]RunCounts/runGoodParts} / {[.]scheduleQuantity}) * 1.0",
                  "dataType": "Float4",
                  "name": "scheduleProgress",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "//\t\t// Parts Remaining / PPM \u003d Minutes remaining\r\n//\t\t// WO Quantity - WO Input / STD Rate \u003d Minutes remaining\r\n//\t\ttry(\t({[.]workOrderQuantity} - \r\n//\t\t\t\t({[.]productionCounts/output} - {[.]productionCounts/machineReject} - {[.]productionCounts/reject}) // Total made parts\r\n//\t\t\t\t) / {[.]standardRate} // Parts Remaining / PPM \u003d Minutes remaining\r\n//\t\t\t\t, 0)\r\n\r\n// Parts Remaining / PPM \u003d Minutes remaining\r\n// sched Quantity - sched Input / STD Rate \u003d Minutes remaining\r\ntry(\t\r\n\t\tif({[.]RunCounts/runGoodParts}\u003e{[.]scheduleQuantity}, // If run \u003e scheduleQty return 0\r\n\t\t\t0,\r\n\t\t\t({[.]scheduleQuantity} - {[.]RunCounts/runGoodParts})/ {[.]standardRate} // Parts Remaining / PPM \u003d Minutes remaining\r\n\t\t\t)\r\n\t, 0)",
                  "name": "minutesRemaining",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "DataSet",
                  "name": "inputMaterial",
                  "value": "{\"columns\":[{\"name\":\"partNumber\",\"type\":\"java.lang.String\"},{\"name\":\"barcodePattern\",\"type\":\"java.lang.String\"},{\"name\":\"requiredQuanity\",\"type\":\"java.lang.Float\"},{\"name\":\"actualBarcode\",\"type\":\"java.lang.String\"},{\"name\":\"actualQuantity\",\"type\":\"java.lang.Float\"}],\"rows\":[]}",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "({[.]RunCounts/runGoodParts} / {[.]workOrderQuantity})\r\n\r\n",
                  "dataType": "Float4",
                  "alarms": [
                    {
                      "mode": "AboveValue",
                      "setpointA": 110.0,
                      "anyChange": false,
                      "activePipeline": "Application/WorkOrdersOverRunning",
                      "timeOnDelaySeconds": 60.0,
                      "name": "workOrderOverrunning",
                      "deadband": 1.0,
                      "enabled": false,
                      "Area": {
                        "bindType": "Expression",
                        "value": "{[.]../../config/Area}"
                      },
                      "label": {
                        "bindType": "Expression",
                        "value": "{[.]../../config/name}"
                      },
                      "displayPath": {
                        "bindType": "Expression",
                        "value": "substring(replace({PathToParentFolder},\u0027/\u0027,\u0027\\\\\\\u0027),0, lastIndexOf({PathToParentFolder},\u0027/\u0027))"
                      }
                    }
                  ],
                  "name": "workorderProgress",
                  "executionMode": "TagGroupRate",
                  "formatString": "#,##0.0000",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "DateTime",
                  "name": "runStartTime",
                  "formatString": "yyyy-MM-dd h:mm:ss aa",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "runscript(\u0027eb.ops.getSAPRatePerMin\u0027, 0, {[.]workOrder.value})",
                  "dataType": "Float4",
                  "name": "SAPEarnedHoursRate",
                  "executionMode": "TagGroupRate",
                  "tagGroup": "Default",
                  "enabled": false,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "String",
                  "name": "costCenter",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "Boolean",
                  "name": "setupComplete",
                  "value": false,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "String",
                  "name": "workOrder",
                  "value": "",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "name": "workOrderQuantity",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "String",
                  "name": "opRespUuid",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "DataSet",
                  "name": "manualChecks",
                  "value": "{\"columns\":[{\"name\":\"checkName\",\"type\":\"java.lang.String\"},{\"name\":\"checkType\",\"type\":\"java.lang.String\"},{\"name\":\"checkParam1\",\"type\":\"java.lang.String\"},{\"name\":\"checkParam2\",\"type\":\"java.lang.String\"},{\"name\":\"checkParam3\",\"type\":\"java.lang.String\"},{\"name\":\"actualValue\",\"type\":\"java.lang.String\"}],\"rows\":[]}",
                  "tagType": "AtomicTag"
                },
                {
                  "name": "time",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "valueSource": "expr",
                      "expression": "{[.]../runStartTime}",
                      "dataType": "DateTime",
                      "name": "runStartTime",
                      "formatString": "yyyy-MM-dd h:mm:ss aa",
                      "executionMode": "TagGroupRate",
                      "enabled": true,
                      "tagType": "AtomicTag"
                    }
                  ]
                },
                {
                  "valueSource": "memory",
                  "dataType": "Float4",
                  "name": "materialCost",
                  "value": 0.0,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "String",
                  "name": "opScheduleUuid",
                  "tagType": "AtomicTag"
                },
                {
                  "name": "productionCounts",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "valueSource": "expr",
                      "expression": "if(isnull({[.]../../../MachineInput/infeed}),0,{[.]../../../MachineInput/infeed}) + 1",
                      "dataType": "Float4",
                      "sourceTagPath": "[.]../../../GPA/MachineInput/infeed",
                      "name": "input",
                      "executionMode": "TagGroupRate",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "expr",
                      "expression": "if(isnull({[.]../../../MachineInput/reject}),0,{[.]../../../MachineInput/reject}) + 1\r\n",
                      "dataType": "Float4",
                      "sourceTagPath": "[.]../../../GPA/MachineInput/outfeed",
                      "name": "machineReject",
                      "executionMode": "TagGroupRate",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "Float4",
                      "name": "reject",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "expr",
                      "expression": "if(isnull({[.]../../../MachineInput/outfeed}),0,{[.]../../../MachineInput/outfeed}) + \r\n\r\nif(isnull({[.]../../../MachineInput/reject}),0,{[.]../../../MachineInput/reject}) + 1\r\n",
                      "dataType": "Float4",
                      "sourceTagPath": "[.]../../../GPA/MachineInput/outfeed",
                      "name": "output",
                      "executionMode": "TagGroupRate",
                      "tagType": "AtomicTag"
                    }
                  ]
                },
                {
                  "valueSource": "memory",
                  "dataType": "Float4",
                  "name": "standardRate",
                  "value": 60.0,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "DataSet",
                  "name": "printerLabels",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "Float8",
                  "name": "targetChangeoverTime",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "DataSet",
                  "name": "tooling",
                  "value": "{\"columns\":[{\"name\":\"barcodePattern\",\"type\":\"java.lang.String\"},{\"name\":\"actualBarcode\",\"type\":\"java.lang.String\"}],\"rows\":[]}",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "String",
                  "name": "platform",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "String",
                  "name": "respSegUuid",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "name": "targetQuantity",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "name": "scheduleQuantity",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "Float4",
                  "name": "priceUnit",
                  "value": 0.0,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "String",
                  "name": "recipeId",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "Float4",
                  "name": "scheduleRate",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "name": "runId",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "String",
                  "name": "tool",
                  "totalPartCount": 0.0,
                  "tagType": "AtomicTag"
                },
                {
                  "name": "validation",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "valueSource": "memory",
                      "dataType": "Boolean",
                      "name": "isToolingReady",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "Boolean",
                      "name": "isManualChecksReady",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "Boolean",
                      "name": "isInputMaterialReady",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "Boolean",
                      "name": "isPrinterLabelsReady",
                      "tagType": "AtomicTag"
                    }
                  ]
                },
                {
                  "name": "RunCounts",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "valueSource": "expr",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\tif not initialChange:\n\t    if currentValue.value:  # If shiftChange \u003d\u003d 1/True\n\t        # Split the tag paths into separate strings\n\t        tags \u003d [\"[.]runRawInfeed\", \"[.]runRawOutfeed\", \"[.]runRawReject\", \"[.]runRawScrap\"]\n\t        values \u003d [-1, -1, -1, -1]\n\t        system.tag.writeBlocking(tags, values)"
                        }
                      ],
                      "expression": "{[.]../runId}\u003d0",
                      "dataType": "Boolean",
                      "name": "runEnded",
                      "value": false,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "historyMaxAge": 10,
                      "expression": "// Total Parts - Reject \u003d Total Good Parts per shift\r\n{[.]oeeOutfeedCount} - {[.]oeeRejectCount}",
                      "historySampleRateUnits": "MIN",
                      "tagGroup": "Default",
                      "enabled": true,
                      "tagType": "AtomicTag",
                      "dataType": "Int4",
                      "historyProvider": "IgnitionHistorian",
                      "historyMaxAgeUnits": "MIN",
                      "name": "runRawOutfeed",
                      "historyEnabled": false,
                      "executionMode": "TagGroupRate",
                      "executionRate": 10000,
                      "value": 0,
                      "sampleMode": "Periodic",
                      "historySampleRate": 1
                    },
                    {
                      "valueSource": "memory",
                      "historyMaxAge": 10,
                      "expression": "// Total Parts - Reject \u003d Total Good Parts per shift\r\n{[.]oeeOutfeedCount} - {[.]oeeRejectCount}",
                      "historySampleRateUnits": "MIN",
                      "tagGroup": "Default",
                      "enabled": true,
                      "tagType": "AtomicTag",
                      "dataType": "Int4",
                      "historyProvider": "IgnitionHistorian",
                      "historyMaxAgeUnits": "MIN",
                      "name": "runRawScrap",
                      "historyEnabled": false,
                      "executionMode": "TagGroupRate",
                      "executionRate": 10000,
                      "value": 0,
                      "sampleMode": "Periodic",
                      "historySampleRate": 1
                    },
                    {
                      "valueSource": "memory",
                      "historyMaxAge": 10,
                      "expression": "// Total Parts - Reject \u003d Total Good Parts per shift\r\n{[.]oeeOutfeedCount} - {[.]oeeRejectCount}",
                      "historySampleRateUnits": "MIN",
                      "tagGroup": "Default",
                      "enabled": true,
                      "tagType": "AtomicTag",
                      "dataType": "Int4",
                      "historyProvider": "IgnitionHistorian",
                      "historyMaxAgeUnits": "MIN",
                      "name": "runRawInfeed",
                      "historyEnabled": false,
                      "executionMode": "TagGroupRate",
                      "executionRate": 10000,
                      "value": 0,
                      "sampleMode": "Periodic",
                      "historySampleRate": 1
                    },
                    {
                      "valueSource": "derived",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\tif not initialChange:\n\t\ttags \u003d [\"[.]runRawOutfeed\", \"[.]runEnded\"]\n\t\tmes.schedule.counts.updateCounts(tags, previousValue, currentValue)"
                        }
                      ],
                      "readOnly": true,
                      "sourceTagPath": "[.]../../../machineInput/outfeed",
                      "name": "derivedOutfeedCounts",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "historyMaxAge": 10,
                      "expression": "// Total Parts - Reject \u003d Total Good Parts per shift\r\n{[.]oeeOutfeedCount} - {[.]oeeRejectCount}",
                      "historySampleRateUnits": "MIN",
                      "tagGroup": "Default",
                      "enabled": true,
                      "tagType": "AtomicTag",
                      "dataType": "Int4",
                      "historyProvider": "IgnitionHistorian",
                      "historyMaxAgeUnits": "MIN",
                      "name": "runRawReject",
                      "historyEnabled": false,
                      "executionMode": "TagGroupRate",
                      "executionRate": 10000,
                      "value": 0,
                      "sampleMode": "Periodic",
                      "historySampleRate": 1
                    },
                    {
                      "valueSource": "derived",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\tif not initialChange:\n\t\ttags \u003d [\"[.]runRawReject\", \"[.]runEnded\"]\n\t\tmes.schedule.counts.updateCounts(tags, previousValue, currentValue)"
                        }
                      ],
                      "readOnly": true,
                      "sourceTagPath": "[.]../../../machineInput/reject",
                      "name": "derivedRejectCounts",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "db",
                      "expression": "",
                      "dataType": "Float4",
                      "datasource": "MSSQL_MES",
                      "query": "SELECT COALESCE((\r\nSELECT SUM(quantity) \r\nFROM scrap.scrap_log \r\nWHERE equipment_path \u003d \u0027{[.]../../../config/equipmentPath}\u0027 \r\nAND time_recorded \u003e\u003d \u0027{[.]../time/runStartTime}\u0027\r\n),0)",
                      "name": "scrap",
                      "executionMode": "TagGroupRate",
                      "executionRate": 60000,
                      "tagGroup": "Direct Mid",
                      "enabled": true,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "derived",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\tif not initialChange:\n\t\ttags \u003d [\"[.]runRawInfeed\", \"[.]runEnded\"]\n\t\tmes.schedule.counts.updateCounts(tags, previousValue, currentValue)"
                        }
                      ],
                      "readOnly": true,
                      "sourceTagPath": "[.]../../../machineInput/infeed",
                      "name": "derivedInfeedCounts",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "derived",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\tif not initialChange:\n\t\ttags \u003d [\"[.]runRawScrap\", \"[.]runEnded\"]\n\t\tmes.schedule.counts.updateCounts(tags, previousValue, currentValue)"
                        }
                      ],
                      "readOnly": true,
                      "sourceTagPath": "[.]scrap",
                      "name": "derivedScrapCounts",
                      "tagType": "AtomicTag",
                      "enabled": true
                    },
                    {
                      "valueSource": "expr",
                      "historyMaxAge": 10,
                      "expression": "// Total Parts - Reject \u003d Total Good Parts per shift\r\nif( {[.]runRawOutfeed} - ({[.]runRawReject} + {[.]runRawScrap}) \u003c 0,\r\n\t0,\r\n\t{[.]runRawOutfeed} - ({[.]runRawReject} + {[.]runRawScrap})\r\n\t)\r\n",
                      "historySampleRateUnits": "MIN",
                      "tagGroup": "Default",
                      "enabled": true,
                      "tagType": "AtomicTag",
                      "dataType": "Int4",
                      "historyProvider": "IgnitionHistorian",
                      "historyMaxAgeUnits": "MIN",
                      "name": "runGoodParts",
                      "historyEnabled": true,
                      "executionMode": "TagGroupRate",
                      "executionRate": 10000,
                      "sampleMode": "Periodic",
                      "historySampleRate": 1
                    }
                  ]
                },
                {
                  "valueSource": "expr",
                  "expression": "if({[.]priceUnit} \u003d 0 || {[.]priceUnit} \u003d null || {[.]priceUnit} \u003d \u0027\u0027, 0, {[.]materialCost}/{[.]priceUnit})",
                  "dataType": "Float4",
                  "name": "costPerUnit",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "Float8",
                  "name": "partCountMultiplier",
                  "value": 1.0,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "Int4",
                  "name": "productCodeID",
                  "tagType": "AtomicTag"
                }
              ]
            }
          ]
        },
        {
          "name": "OEE",
          "tagType": "Folder",
          "tags": [
            {
              "name": "MachineOutput_REF",
              "parameters": {
                "mode": {
                  "dataType": "String",
                  "value": "mode"
                },
                "server": {
                  "dataType": "String",
                  "value": "Ignition_FIBER_IA1_default"
                },
                "state": {
                  "dataType": "String",
                  "value": "state"
                },
                "device": {
                  "dataType": "String",
                  "value": ""
                }
              },
              "tagType": "UdtType",
              "tags": [
                {
                  "opcItemPath": {
                    "bindType": "parameter",
                    "binding": "[{device}]{mode}"
                  },
                  "opcServer": {
                    "bindType": "parameter",
                    "binding": "{server}"
                  },
                  "valueSource": "expr",
                  "historyTimeDeadband": 60,
                  "historyMaxAge": 12,
                  "expression": "{[.]../OEE_Events/mode}",
                  "dataType": "Int4",
                  "historyProvider": "canarysender",
                  "name": "mode",
                  "historyEnabled": true,
                  "value": 1,
                  "tagType": "AtomicTag"
                },
                {
                  "opcItemPath": {
                    "bindType": "parameter",
                    "binding": "[{device}]{state}"
                  },
                  "sourceTagPath": {
                    "bindType": "parameter",
                    "binding": "[{server}]{device}/MES/{TagName}"
                  },
                  "opcServer": {
                    "bindType": "parameter",
                    "binding": "{server}"
                  },
                  "valueSource": "expr",
                  "historyTimeDeadband": 60,
                  "historyMaxAge": 12,
                  "expression": "{[.]../OEE_Events/state}",
                  "dataType": "Int4",
                  "historyProvider": "canarysender",
                  "deriveExpressionSetter": "//{value}",
                  "name": "state",
                  "historyEnabled": true,
                  "tagType": "AtomicTag"
                }
              ]
            },
            {
              "name": "LineConfig",
              "tagType": "UdtType",
              "tags": [
                {
                  "valueSource": "expr",
                  "expression": "{[.]LineConfigDS}[\u0027LineID\u0027][0]",
                  "dataType": "Int4",
                  "documentation": "",
                  "name": "LineID",
                  "executionMode": "TagGroupRate",
                  "value": 0,
                  "tagGroup": "Default",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "if(isnull({[.]LineConfigDS}[\u0027EquipmentHasOutfeed\u0027][0]), 0, {[.]LineConfigDS}[\u0027EquipmentHasOutfeed\u0027][0])",
                  "dataType": "Boolean",
                  "datasource": "application",
                  "query": "SELECT COALESCE((\r\nSELECT planning_rate_minute\r\nFROM equipment.rate\r\nWHERE equipment_path \u003d \u0027{[.]equipmentPath}\u0027), 1)",
                  "name": "hasOutfeed",
                  "executionMode": "TagGroupRate",
                  "executionRate": 600000,
                  "tagGroup": "Default",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "{[.]LineConfigDS}[\u0027EquipmentDowntimeDetectiontType\u0027][0]",
                  "dataType": "Int4",
                  "documentation": "1 \u003d\u003d  Equipment Mode, 2 \u003d\u003d Initial Cell, 3 \u003d\u003d Parallel Cells, 4 \u003d\u003d Key Cell",
                  "name": "DTConfigType",
                  "executionMode": "TagGroupRate",
                  "value": 0,
                  "tagGroup": "Default",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "substring({PathToParentFolder},0, lastIndexOf({PathToParentFolder},\u0027/\u0027))",
                  "dataType": "String",
                  "name": "equipmentPath",
                  "executionMode": "TagGroupRate",
                  "tagGroup": "Default",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "{[.]LineConfigDS}[\u0027IsEnabled\u0027][0]",
                  "dataType": "Boolean",
                  "name": "enabled",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "db",
                  "dataType": "DataSet",
                  "query": "SELECT ReasonCode, Description, DisplayColor, AltCode, IconPath FROM MES.dbo.modes ORDER BY ReasonCode",
                  "name": "modeDS",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "len({[.]LineCellsConfigDS})\u003e0",
                  "dataType": "Boolean",
                  "name": "hasCells",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "substring({[.]areaPath},lastIndexOf({[.]areaPath},\u0027/\u0027) + 1)",
                  "dataType": "String",
                  "name": "area",
                  "executionMode": "TagGroupRate",
                  "value": "",
                  "tagGroup": "Default",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "substring({[.]equipmentPath}, 0, lastIndexOf({[.]equipmentPath},\u0027/\u0027))",
                  "dataType": "String",
                  "name": "areaPath",
                  "executionMode": "TagGroupRate",
                  "value": "tag(\u0027[.]equipmentPath\u0027)",
                  "tagGroup": "Default",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "db",
                  "dataType": "String",
                  "datasource": "application",
                  "query": "SELECT COALESCE((\r\nSELECT sap_cell_name\r\nFROM equipment.configured_line\r\nWHERE equipment_path \u003d \u0027{[.]equipmentPath}\u0027), \u0027Not Configured\u0027)",
                  "name": "sapCellName",
                  "executionMode": "TagGroupRate",
                  "executionRate": 600000,
                  "tagGroup": "Default",
                  "tagType": "AtomicTag",
                  "enabled": false
                },
                {
                  "valueSource": "expr",
                  "expression": "// Need to resort the rows in ReasonCode Order\r\n//sortDataset(runscript(\u0027mes.config.sp.getLineStatesDS\u0027, 0, {[.]LineID}),\"ReasonCode\")\r\nrunscript(\u0027mes.config.sp.getLineStatesDS\u0027, 0, {[.]LineID})",
                  "dataType": "DataSet",
                  "query": "SELECT * FROM dbo.states",
                  "name": "stateDS",
                  "executionMode": "TagGroupRate",
                  "tagGroup": "MES_Slow_Query",
                  "tagType": "AtomicTag",
                  "queryType": "AutoDetect"
                },
                {
                  "valueSource": "expr",
                  "expression": "if(isnull({[.]LineConfigDS}[\u0027EquipmentHasReject\u0027][0]), 0, {[.]LineConfigDS}[\u0027EquipmentHasReject\u0027][0])",
                  "dataType": "Boolean",
                  "datasource": "application",
                  "query": "SELECT COALESCE((\r\nSELECT planning_rate_minute\r\nFROM equipment.rate\r\nWHERE equipment_path \u003d \u0027{[.]equipmentPath}\u0027), 1)",
                  "name": "hasReject",
                  "executionMode": "TagGroupRate",
                  "executionRate": 600000,
                  "tagGroup": "Default",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "runscript(\u0027mes.config.sp.getLineCellConfig\u0027, 0, {[.]name})\r\n",
                  "dataType": "DataSet",
                  "name": "LineCellsConfigDS",
                  "executionMode": "TagGroupRate",
                  "tagGroup": "MES Calculations Slow",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "if(isnull({[.]LineConfigDS}[\u0027EquipmentTargetRate\u0027][0]), 0, {[.]LineConfigDS}[\u0027EquipmentTargetRate\u0027][0])",
                  "datasource": "application",
                  "query": "SELECT COALESCE((\r\nSELECT planning_rate_minute\r\nFROM equipment.rate\r\nWHERE equipment_path \u003d \u0027{[.]equipmentPath}\u0027), 1)",
                  "name": "targetRate",
                  "executionMode": "TagGroupRate",
                  "executionRate": 600000,
                  "tagGroup": "Default",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "runscript(\u0027mes.config.getGroupName\u0027, 0, {[.]name})",
                  "dataType": "String",
                  "name": "group",
                  "tagGroup": "Default",
                  "tagType": "AtomicTag",
                  "enabled": false
                },
                {
                  "valueSource": "expr",
                  "expression": "if(isnull({[.]LineConfigDS}[\u0027EquipmentHasInfeed\u0027][0]), 0, {[.]LineConfigDS}[\u0027EquipmentHasInfeed\u0027][0])",
                  "dataType": "Boolean",
                  "datasource": "application",
                  "query": "SELECT COALESCE((\r\nSELECT planning_rate_minute\r\nFROM equipment.rate\r\nWHERE equipment_path \u003d \u0027{[.]equipmentPath}\u0027), 1)",
                  "name": "hasInfeed",
                  "executionMode": "TagGroupRate",
                  "executionRate": 600000,
                  "tagGroup": "Default",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "substring({[.]sitePath},lastIndexOf({[.]sitePath},\u0027/\u0027) + 1)",
                  "dataType": "String",
                  "name": "site",
                  "executionMode": "TagGroupRate",
                  "value": "",
                  "tagGroup": "Default",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "runscript(\u0027mes.config.sp.getLineConfig\u0027, 0, {[.]name})",
                  "dataType": "DataSet",
                  "name": "LineConfigDS",
                  "executionMode": "TagGroupRate",
                  "tagGroup": "MES Calculations Slow",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "substring({[.]areaPath}, 0, lastIndexOf({[.]areaPath},\u0027/\u0027))",
                  "dataType": "String",
                  "name": "sitePath",
                  "executionMode": "TagGroupRate",
                  "tagGroup": "Default",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "substring({[.]equipmentPath},lastIndexOf({[.]equipmentPath},\u0027/\u0027) + 1)",
                  "dataType": "String",
                  "name": "name",
                  "executionMode": "TagGroupRate",
                  "tagGroup": "Default",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "if(isnull({[.]LineConfigDS}[\u0027EquipmentConfigRate\u0027][0]), 0, {[.]LineConfigDS}[\u0027EquipmentConfigRate\u0027][0])",
                  "datasource": "application",
                  "query": "SELECT COALESCE((\r\nSELECT planning_rate_minute\r\nFROM equipment.rate\r\nWHERE equipment_path \u003d \u0027{[.]equipmentPath}\u0027), 1)",
                  "name": "planningRate",
                  "executionMode": "TagGroupRate",
                  "executionRate": 600000,
                  "tagGroup": "Default",
                  "tagType": "AtomicTag"
                }
              ]
            },
            {
              "name": "SiteCalculatedValues",
              "tagType": "UdtType",
              "tags": [
                {
                  "valueSource": "expr",
                  "expression": "tag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/OEE/Quality\u0027)",
                  "dataType": "Float4",
                  "name": "oeeQuality",
                  "executionMode": "TagGroupRate",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "tag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/OEE/Availability\u0027)",
                  "dataType": "Float4",
                  "name": "oeeAvailability",
                  "executionMode": "TagGroupRate",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "tag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/OEE/Reject\u0027)",
                  "dataType": "Float4",
                  "name": "oeeRejectCount",
                  "executionMode": "TagGroupRate",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "// If the timestamp is older than 1 day, show null instead of bad data\r\nif(timestampOf(tag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/DT/Top5\u0027)) \u003c dateArithmetic(now(),-1,\"days\"), \r\n        NULL,\r\n        tag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/DT/Top5\u0027)\r\n        )",
                  "dataType": "DataSet",
                  "name": "shiftTop5Downtime",
                  "executionMode": "TagGroupRate",
                  "executionRate": 10000,
                  "tagGroup": "Default",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "// If the timestamp is older than 1 day, show null instead of bad data\r\nif(timestampOf(tag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/DT/Top5Micro\u0027)) \u003c dateArithmetic(now(),-1,\"days\"), \r\n        NULL,\r\n        tag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/DT/Top5Micro\u0027)\r\n        )",
                  "dataType": "DataSet",
                  "name": "shiftTop5DowntimeMicro",
                  "executionMode": "TagGroupRate",
                  "executionRate": 10000,
                  "tagGroup": "Default",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "tag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/OEE/Outfeed\u0027)",
                  "dataType": "Float4",
                  "name": "oeeOutfeedCount",
                  "executionMode": "TagGroupRate",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "replace(substring({PathToParentFolder},0, lastIndexOf({PathToParentFolder},\u0027/\u0027)),\u0027/\u0027,\u0027\\\\\u0027)",
                  "dataType": "String",
                  "name": "equipmentPath",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "tag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/OEE/Performance\u0027)",
                  "dataType": "Float4",
                  "name": "oeePerformance",
                  "executionMode": "TagGroupRate",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "Boolean",
                  "name": "EndOfShift",
                  "value": false,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "readOnly": false,
                  "dataType": "DataSet",
                  "name": "_emptyDS",
                  "value": "{\"columns\":[{\"name\":\"String\",\"type\":\"java.lang.String\"}],\"rows\":[[\"\"]]}",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "tag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/OEE/OEE\u0027)",
                  "dataType": "Float4",
                  "name": "oee",
                  "executionMode": "TagGroupRate",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "name": "time",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "valueSource": "expr",
                      "expression": "{[.]CurrentShiftTimes}[0,1]",
                      "dataType": "DateTime",
                      "name": "shiftEndTime",
                      "formatString": "yyyy-MM-dd h:mm:ss aa",
                      "executionMode": "TagGroupRate",
                      "enabled": true,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "expr",
                      "expression": "{[.]CurrentShiftTimes}[0,0]",
                      "dataType": "DateTime",
                      "name": "shiftStartTime",
                      "formatString": "yyyy-MM-dd h:mm:ss aa",
                      "executionMode": "TagGroupRate",
                      "enabled": true,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "db",
                      "expression": "SELECT StartTime, EndTime FROM GetTimeRange(\u0027current shift\u0027, NULL)",
                      "dataType": "DataSet",
                      "query": "SELECT StartTime, EndTime FROM GetTimeRange(\u0027current shift\u0027, NULL)",
                      "name": "CurrentShiftTimes",
                      "executionMode": "TagGroupRate",
                      "tagGroup": "MES_Slow_Query",
                      "tagType": "AtomicTag"
                    }
                  ]
                },
                {
                  "valueSource": "expr",
                  "expression": "tag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/OEE/Infeed\u0027)",
                  "dataType": "Float4",
                  "name": "oeeInfeedCount",
                  "executionMode": "TagGroupRate",
                  "enabled": true,
                  "tagType": "AtomicTag"
                }
              ]
            },
            {
              "name": "LineCalculatedValues",
              "tagType": "UdtType",
              "tags": [
                {
                  "valueSource": "expr",
                  "expression": "tag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/DT/SummaryDowntime\u0027)",
                  "dataType": "Int4",
                  "name": "shiftTimeDowntime",
                  "executionMode": "TagGroupRate",
                  "executionRate": 10000,
                  "tagGroup": "Default",
                  "value": 0,
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "historyMaxAge": 1,
                  "historyTimeDeadband": 10,
                  "expression": "tag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/OEE/Performance\u0027)",
                  "historySampleRateUnits": "MIN",
                  "tagGroup": "MES History",
                  "enabled": true,
                  "tagType": "AtomicTag",
                  "dataType": "Float4",
                  "historyProvider": "IgnitionHistorian",
                  "name": "oeePerformance",
                  "historyEnabled": true,
                  "historyTimeDeadbandUnits": "MIN",
                  "executionMode": "TagGroupRate",
                  "sampleMode": "OnChange",
                  "historySampleRate": 10
                },
                {
                  "valueSource": "expr",
                  "expression": "if({[.]../config/Enabled}\u003d1,\r\n \trunscript(\u0027mes.oee.periodic.productionChartTransform\u0027, 0, {[.]../config/equipmentPath}),\r\n \t{[.]../../../../calculatedValues/_emptyDS}\r\n \t)",
                  "dataType": "DataSet",
                  "name": "shiftProductionChart",
                  "executionMode": "TagGroupRate",
                  "executionRate": 10000,
                  "tagGroup": "MES_Production_Chart",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "historyMaxAge": 10,
                  "expression": "// Running Minutes * Target Rate\r\n\r\n{[.]shiftRuntime} * {[.]../config/targetRate}",
                  "historySampleRateUnits": "MIN",
                  "tagGroup": "Default",
                  "enabled": true,
                  "tagType": "AtomicTag",
                  "dataType": "Int4",
                  "historyProvider": "IgnitionHistorian",
                  "historyMaxAgeUnits": "MIN",
                  "name": "shiftGoodPartsTarget",
                  "historyEnabled": false,
                  "executionMode": "TagGroupRate",
                  "executionRate": 10000,
                  "value": 0,
                  "sampleMode": "Periodic",
                  "historySampleRate": 1
                },
                {
                  "valueSource": "memory",
                  "historyMaxAge": 10,
                  "expression": "// Total Parts - Reject \u003d Total Good Parts per shift\r\n{[.]oeeOutfeedCount} - {[.]oeeRejectCount}",
                  "historySampleRateUnits": "MIN",
                  "tagGroup": "Default",
                  "enabled": true,
                  "tagType": "AtomicTag",
                  "dataType": "Int4",
                  "historyProvider": "IgnitionHistorian",
                  "historyMaxAgeUnits": "MIN",
                  "name": "shiftRawReject",
                  "historyEnabled": false,
                  "executionMode": "TagGroupRate",
                  "executionRate": 10000,
                  "value": 0,
                  "sampleMode": "Periodic",
                  "historySampleRate": 1
                },
                {
                  "valueSource": "expr",
                  "expression": "{[.]calculatedLineRate/lineRate}",
                  "dataType": "Int4",
                  "name": "shiftRate",
                  "executionMode": "TagGroupRate",
                  "executionRate": 10000,
                  "tagGroup": "Default",
                  "value": 0,
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "expression": "",
                  "dataType": "Int4",
                  "name": "shiftScrapPartsPercentTarget",
                  "executionMode": "TagGroupRate",
                  "executionRate": 10000,
                  "tagGroup": "Default",
                  "value": 0,
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "try(\r\n\tif({[.]../config/Enabled} \u003d 1,\r\n\t\trunScript(\u0027mes.oee.sp.getPeriodParetoChart\u0027,\r\n\t\t\t0,\r\n\t\t\t{[.]./time/shiftStartTime},\r\n\t\t\taddHours({[.]./time/shiftStartTime}, 12),\r\n\t\t\t{[.]lineID},\r\n\t\t\t{[.]../jobs/currentJob/prodctCodeID},\r\n\t\t\t60),\r\n\t\t-1\r\n\t),\r\n\t-1\r\n)",
                  "dataType": "DataSet",
                  "name": "shiftParetoChart",
                  "executionMode": "TagGroupRate",
                  "tagGroup": "MES_Production_Chart",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "// Total Parts - Reject \u003d Total Good Parts per shift\r\ntag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/OEE/TEEP\u0027)",
                  "dataType": "Int4",
                  "name": "shiftIdealParts",
                  "executionMode": "TagGroupRate",
                  "executionRate": 10000,
                  "tagGroup": "Default",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "// If the timestamp is older than 1 day, show null instead of bad data\r\nif(timestampOf(tag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/DT/DowntimeEvents\u0027)) \u003c dateArithmetic(now(),-1,\"days\"), \r\n        NULL,\r\n        tag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/DT/DowntimeEvents\u0027)\r\n        )",
                  "dataType": "DataSet",
                  "name": "shiftDowntimeEvents",
                  "executionMode": "TagGroupRate",
                  "executionRate": 10000,
                  "tagGroup": "MES Calculations",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "tag(\u0027[MES]\u0027 +{[.]../config/equipmentPath} +\u0027/Analysis/Shift/Current/OEE/Runtime\u0027)",
                  "dataType": "Int4",
                  "name": "ShiftRuntime",
                  "executionMode": "TagGroupRate",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "Float4",
                  "name": "cycleTime_run",
                  "value": 0.0,
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "derived",
                  "eventScripts": [
                    {
                      "eventid": "valueChanged",
                      "script": "\tif not initialChange:\n\t\ttags \u003d [\"[.]shiftRawScrap\", \"[.]shiftChange\"]\n\t\tmes.schedule.counts.updateCounts(tags, previousValue, currentValue)"
                    }
                  ],
                  "sourceTagPath": "[.]scrap",
                  "name": "derivedScrapCounts",
                  "tagType": "AtomicTag",
                  "enabled": true
                },
                {
                  "name": "time",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "valueSource": "expr",
                      "expression": "{[.]../../../../../calculatedValues/time/shiftStartTime}",
                      "dataType": "DateTime",
                      "name": "shiftStartTime",
                      "formatString": "yyyy-MM-dd h:mm:ss aa",
                      "executionMode": "TagGroupRate",
                      "enabled": true,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "expr",
                      "expression": "{[.]../../jobs/currentJob/time/runStartTime}",
                      "dataType": "DateTime",
                      "name": "runStartTime",
                      "formatString": "yyyy-MM-dd h:mm:ss aa",
                      "executionMode": "TagGroupRate",
                      "enabled": true,
                      "tagType": "AtomicTag"
                    }
                  ]
                },
                {
                  "valueSource": "expr",
                  "expression": "{[.]../OEE_Events/mode}\u003d2",
                  "dataType": "Boolean",
                  "name": "isChangeover",
                  "executionMode": "FixedRate",
                  "executionRate": 10000,
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "derived",
                  "eventScripts": [
                    {
                      "eventid": "valueChanged",
                      "script": "\tif not initialChange:\n\t\ttags \u003d [\"[.]shiftRawReject\", \"[.]shiftChange\"]\n\t\tmes.schedule.counts.updateCounts(tags, previousValue, currentValue)"
                    }
                  ],
                  "sourceTagPath": "[.]../machineInput/reject",
                  "name": "derivedRejectCounts",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "historyMaxAge": 10,
                  "expression": "// Total Parts - Reject \u003d Total Good Parts per shift\r\n{[.]oeeOutfeedCount} - {[.]oeeRejectCount}",
                  "historySampleRateUnits": "MIN",
                  "tagGroup": "Default",
                  "enabled": true,
                  "tagType": "AtomicTag",
                  "dataType": "Int4",
                  "historyProvider": "IgnitionHistorian",
                  "historyMaxAgeUnits": "MIN",
                  "name": "shiftRawScrap",
                  "historyEnabled": false,
                  "executionMode": "TagGroupRate",
                  "executionRate": 10000,
                  "value": 0,
                  "sampleMode": "Periodic",
                  "historySampleRate": 1
                },
                {
                  "valueSource": "memory",
                  "historyMaxAge": 10,
                  "expression": "// Total Parts - Reject \u003d Total Good Parts per shift\r\n{[.]oeeOutfeedCount} - {[.]oeeRejectCount}",
                  "historySampleRateUnits": "MIN",
                  "tagGroup": "Default",
                  "enabled": true,
                  "tagType": "AtomicTag",
                  "dataType": "Int4",
                  "historyProvider": "IgnitionHistorian",
                  "historyMaxAgeUnits": "MIN",
                  "name": "shiftRawInfeed",
                  "historyEnabled": false,
                  "executionMode": "TagGroupRate",
                  "executionRate": 10000,
                  "value": 0,
                  "sampleMode": "Periodic",
                  "historySampleRate": 1
                },
                {
                  "valueSource": "expr",
                  "historyMaxAge": 1,
                  "historyTimeDeadband": 10,
                  "expression": "tag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/OEE/Quality\u0027)",
                  "historySampleRateUnits": "MIN",
                  "tagGroup": "MES History",
                  "enabled": true,
                  "tagType": "AtomicTag",
                  "dataType": "Float4",
                  "historyProvider": "IgnitionHistorian",
                  "name": "oeeQuality",
                  "historyEnabled": true,
                  "historyTimeDeadbandUnits": "MIN",
                  "executionMode": "TagGroupRate",
                  "sampleMode": "OnChange",
                  "historySampleRate": 10
                },
                {
                  "valueSource": "memory",
                  "expression": "",
                  "dataType": "Int4",
                  "name": "shiftScrapPartsPercent",
                  "executionMode": "TagGroupRate",
                  "executionRate": 10000,
                  "tagGroup": "Default",
                  "value": 0,
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "db",
                  "dataType": "DataSet",
                  "datasource": "MSSQL_MES",
                  "query": "EXEC dt.stp_getPeriodAllLinesStateTimelineByLine\r\n\t@timePeriod \u003d \u0027current shift\u0027,\r\n\t@interval \u003d 0,\r\n\t@LineID \u003d {[.]lineID}",
                  "name": "shiftStateTimeline",
                  "executionMode": "TagGroupRate",
                  "tagGroup": "MES_Production_Chart",
                  "tagType": "AtomicTag",
                  "queryType": "Select"
                },
                {
                  "valueSource": "db",
                  "expression": "",
                  "dataType": "Float4",
                  "datasource": "MSSQL_MES",
                  "query": "SELECT COALESCE((\r\nSELECT SUM(quantity) \r\nFROM scrap.scrap_log \r\nWHERE equipment_path \u003d \u0027{[.]../config/equipmentPath}\u0027 \r\nAND time_recorded \u003e\u003d \u0027{[.]time/shiftStartTime}\u0027\r\n),0)",
                  "name": "scrap",
                  "executionMode": "TagGroupRate",
                  "executionRate": 60000,
                  "tagGroup": "Direct Mid",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "historyMaxAge": 1,
                  "historyTimeDeadband": 10,
                  "expression": "tag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/OEE/Availability\u0027)",
                  "historySampleRateUnits": "MIN",
                  "tagGroup": "MES History",
                  "enabled": true,
                  "tagType": "AtomicTag",
                  "dataType": "Float4",
                  "historyProvider": "IgnitionHistorian",
                  "name": "oeeAvailability",
                  "historyEnabled": true,
                  "historyTimeDeadbandUnits": "MIN",
                  "executionMode": "TagGroupRate",
                  "sampleMode": "OnChange",
                  "historySampleRate": 10
                },
                {
                  "valueSource": "expr",
                  "expression": "// If the timestamp is older than 1 day, show null instead of bad data\r\nif(timestampOf(tag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/DT/StateHistory\u0027)) \u003c dateArithmetic(now(),-1,\"days\"), \r\n        NULL,\r\n        tag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/DT/StateHistory\u0027)\r\n        )",
                  "dataType": "DataSet",
                  "name": "ShiftStateHistory",
                  "executionMode": "TagGroupRate",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "try(\r\n\tif({[.]..//Jobs/currentJob/RunCounts/runGoodParts} \u003e {[.]..//Jobs/currentJob/workOrderQuantity},\r\n\t\t1,\r\n\t\t0),\r\n\t\t0\r\n)",
                  "historyProvider": "history",
                  "alarms": [
                    {
                      "setpointA": 1.0,
                      "activePipeline": "",
                      "timeOnDelaySeconds": 60.0,
                      "name": "OverrunningWO",
                      "deadband": 1.0,
                      "priority": "Medium",
                      "enabled": true,
                      "Area": {
                        "bindType": "Expression",
                        "value": "{[.]../config/area}"
                      },
                      "label": {
                        "bindType": "Expression",
                        "value": "substring(substring(replace({PathToParentFolder},\u0027/\u0027,\u0027\\\\\u0027),0, lastIndexOf({PathToParentFolder},\u0027/\u0027)),lastIndexOf(substring(replace({PathToParentFolder},\u0027/\u0027,\u0027\\\\\u0027),0, lastIndexOf({PathToParentFolder},\u0027/\u0027)),\u0027\\\\\u0027) + 1)"
                      }
                    }
                  ],
                  "name": "IsOverRunningWorkOrder",
                  "historyEnabled": false,
                  "alarmEvalEnabled": true,
                  "executionMode": "TagGroupRate",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "db",
                  "dataType": "DataSet",
                  "datasource": "MSSQL_MES",
                  "query": "SELECT r.reason_name, SUM(quantity) as quantity\r\nFROM scrap.scrap_log sl\r\nJOIN scrap.reason r ON sl.reason_id \u003d r.id\r\nWHERE equipment_path \u003d \u0027{[.]../config/equipmentPath}\u0027\r\nand time_recorded \u003e\u003d \u0027{[.]time/roundedShiftStartTime}\u0027\r\nGROUP BY r.reason_name\r\nORDER BY quantity DESC",
                  "name": "scrapPareto_shift",
                  "executionMode": "TagGroupRate",
                  "executionRate": 60000,
                  "tagGroup": "MES Calculations Slow",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "derived",
                  "eventScripts": [
                    {
                      "eventid": "valueChanged",
                      "script": "\tif not initialChange:\n\t\ttags \u003d [\"[.]shiftRawInfeed\", \"[.]shiftChange\"]\n\t\tmes.schedule.counts.updateCounts(tags, previousValue, currentValue)"
                    }
                  ],
                  "sourceTagPath": "[.]../machineInput/infeed",
                  "name": "derivedInfeedCounts",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "tag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/OEE/Reject\u0027)",
                  "dataType": "Float4",
                  "name": "oeeRejectCount",
                  "executionMode": "TagGroupRate",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "try(\r\n\tif((len({[.]..//Jobs/currentJob/workOrder.value}) \u003d 0 \r\n\t\u0026\u0026 (minutesBetween({[.]../MachineInput/outfeed.Timestamp}, now()) \u003c\u003d 5),1,0),\r\n\t0\r\n)\r\n",
                  "historyProvider": "history",
                  "alarms": [
                    {
                      "setpointA": 1.0,
                      "activePipeline": "Application/MachineRunningWithNoWorkorder",
                      "timeOnDelaySeconds": 60.0,
                      "name": "NoWorkOrder",
                      "deadband": 1.0,
                      "priority": "Medium",
                      "enabled": true,
                      "Area": {
                        "bindType": "Expression",
                        "value": "{[.]../config/area}"
                      },
                      "label": {
                        "bindType": "Expression",
                        "value": "substring(substring(replace({PathToParentFolder},\u0027/\u0027,\u0027\\\\\u0027),0, lastIndexOf({PathToParentFolder},\u0027/\u0027)),lastIndexOf(substring(replace({PathToParentFolder},\u0027/\u0027,\u0027\\\\\u0027),0, lastIndexOf({PathToParentFolder},\u0027/\u0027)),\u0027\\\\\u0027) + 1)"
                      }
                    }
                  ],
                  "name": "IsRunningNoWorkOrder",
                  "historyEnabled": false,
                  "alarmEvalEnabled": false,
                  "executionMode": "TagGroupRate",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "Float4",
                  "name": "cycleTime_shift",
                  "value": 0.0,
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "// If the timestamp is older than 1 day, show null instead of bad data\r\nif(timestampOf(tag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/DT/Top5Micro\u0027)) \u003c dateArithmetic(now(),-1,\"days\"), \r\n        NULL,\r\n        tag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/DT/Top5Micro\u0027)\r\n        )",
                  "dataType": "DataSet",
                  "name": "shiftTop5DowntimeMicro",
                  "executionMode": "TagGroupRate",
                  "executionRate": 10000,
                  "tagGroup": "Default",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "//{[.]ShiftRuntime} * \r\n{[.]../config/LineConfigDS}[\u0027EquipmentTargetRate\u0027][0]\r\n\r\n\r\n",
                  "dataType": "Int4",
                  "name": "shiftRateTarget",
                  "executionMode": "TagGroupRate",
                  "executionRate": 10000,
                  "tagGroup": "Default",
                  "value": 0,
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "try(\r\n\tif((({[.]../ScadaControlled/mode.value}) !\u003d 0\r\n\t\u0026\u0026 (minutesBetween({[.]../MachineInput/outfeed.Timestamp}, now()) \u003e\u003d 60) \r\n\t\u0026\u0026 (minutesBetween({[.]../MachineInput/outfeed.Timestamp}, now()) \u003c\u003d 2880),1,0),\r\n\t0\r\n)\r\n",
                  "alarms": [
                    {
                      "setpointA": 1.0,
                      "activePipeline": "Application/LongDowntimeInProductionMode",
                      "name": "LongDowntime",
                      "priority": "Medium",
                      "label": {
                        "bindType": "Expression",
                        "value": "substring(substring(replace({PathToParentFolder},\u0027/\u0027,\u0027\\\\\u0027),0, lastIndexOf({PathToParentFolder},\u0027/\u0027)),lastIndexOf(substring(replace({PathToParentFolder},\u0027/\u0027,\u0027\\\\\u0027),0, lastIndexOf({PathToParentFolder},\u0027/\u0027)),\u0027\\\\\u0027) + 1)"
                      }
                    }
                  ],
                  "name": "LongDowntimeActive",
                  "alarmEvalEnabled": false,
                  "executionMode": "TagGroupRate",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "// If the timestamp is older than 1 day, show null instead of bad data\r\nif(timestampOf(tag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/DT/Top5\u0027)) \u003c dateArithmetic(now(),-1,\"days\"), \r\n        NULL,\r\n        tag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/DT/Top5\u0027)\r\n        )",
                  "dataType": "DataSet",
                  "name": "shiftTop5Downtime",
                  "executionMode": "TagGroupRate",
                  "executionRate": 10000,
                  "tagGroup": "Default",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "//replace(substring({PathToParentFolder},0, lastIndexOf({PathToParentFolder},\u0027/\u0027)),\u0027/\u0027,\u0027\\\\\u0027)\r\nsubstring({PathToParentFolder},0, lastIndexOf({PathToParentFolder},\u0027/\u0027))",
                  "dataType": "String",
                  "name": "equipmentPath",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "db",
                  "expression": "",
                  "dataType": "Float4",
                  "datasource": "MSSQL_MES",
                  "query": "SELECT COALESCE((\r\nSELECT SUM(quantity) \r\nFROM scrap.scrap_log \r\nWHERE equipment_path \u003d \u0027{[.]../config/equipmentPath}\u0027 \r\nAND time_recorded \u003e\u003d \u0027{[.]time/shiftStartTime}\u0027\r\nand is_reject_boolean \u003d 1\r\n),0)",
                  "name": "scrapReject",
                  "executionMode": "TagGroupRate",
                  "executionRate": 60000,
                  "tagGroup": "Direct Mid",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "tag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/DT/SummaryChangeover\u0027)",
                  "dataType": "Int4",
                  "name": "shiftTimeChangeover",
                  "executionMode": "TagGroupRate",
                  "executionRate": 10000,
                  "tagGroup": "Default",
                  "value": 0,
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "tag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/DT/DowntimePlanned\u0027)",
                  "dataType": "Int4",
                  "name": "shiftTimePlanned",
                  "executionMode": "TagGroupRate",
                  "executionRate": 10000,
                  "tagGroup": "Default",
                  "value": 0,
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "historyMaxAge": 10,
                  "expression": "// Total Parts - Reject \u003d Total Good Parts per shift\r\n{[.]oeeOutfeedCount} - {[.]oeeRejectCount}",
                  "historySampleRateUnits": "MIN",
                  "tagGroup": "Default",
                  "enabled": true,
                  "tagType": "AtomicTag",
                  "dataType": "Int4",
                  "historyProvider": "IgnitionHistorian",
                  "historyMaxAgeUnits": "MIN",
                  "name": "shiftRawOutfeed",
                  "historyEnabled": false,
                  "executionMode": "TagGroupRate",
                  "executionRate": 10000,
                  "value": 0,
                  "sampleMode": "Periodic",
                  "historySampleRate": 1
                },
                {
                  "valueSource": "expr",
                  "expression": "{[.]ShiftRuntime} / len({[.]shiftDowntimeEvents})",
                  "dataType": "Float4",
                  "name": "equipmentMTBS",
                  "executionMode": "FixedRate",
                  "executionRate": 10000,
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "tag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/OEE/Outfeed\u0027)",
                  "dataType": "Float4",
                  "name": "oeeOutfeedCount",
                  "executionMode": "TagGroupRate",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "tag(\u0027[MES]\u0027 +{[.]../config/equipmentPath} +\u0027/Analysis/Shift/Current/OEE/PlannedMinutes\u0027)",
                  "dataType": "Int4",
                  "name": "ShiftRuntimePlanned",
                  "executionMode": "TagGroupRate",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "name": "calculatedLineRate",
                  "typeId": "GPA/OEE/CalculatedLineRate",
                  "enabled": true,
                  "tagType": "UdtInstance",
                  "tags": [
                    {
                      "name": "partMultiplier",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "lineRate",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "watchdog",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "oldValue",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "counter",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "oldTimestamp",
                      "tagType": "AtomicTag"
                    }
                  ]
                },
                {
                  "valueSource": "expr",
                  "historyMaxAge": 1,
                  "historyTimeDeadband": 10,
                  "expression": "// Total Parts - Reject \u003d Total Good Parts per shift\r\n{[.]shiftRawOutfeed} - ({[.]shiftRawReject} + {[.]shiftRawScrap})\r\n",
                  "historySampleRateUnits": "MIN",
                  "tagGroup": "1Minute",
                  "enabled": true,
                  "tagType": "AtomicTag",
                  "dataType": "Int4",
                  "historyProvider": "IgnitionHistorian",
                  "historyMaxAgeUnits": "MIN",
                  "name": "shiftGoodParts",
                  "historyEnabled": true,
                  "historyTimeDeadbandUnits": "MIN",
                  "executionMode": "TagGroupRate",
                  "executionRate": 10000,
                  "sampleMode": "OnChange",
                  "historySampleRate": 10
                },
                {
                  "valueSource": "expr",
                  "expression": "tag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/DT/SummaryProduction\u0027)",
                  "dataType": "Int4",
                  "name": "shiftTimeProduction",
                  "executionMode": "TagGroupRate",
                  "executionRate": 10000,
                  "tagGroup": "Default",
                  "value": 0,
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "historyMaxAge": 1,
                  "historyTimeDeadband": 10,
                  "expression": "tag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/OEE/OEE\u0027)",
                  "historySampleRateUnits": "MIN",
                  "tagGroup": "MES History",
                  "enabled": true,
                  "tagType": "AtomicTag",
                  "dataType": "Float4",
                  "historyProvider": "IgnitionHistorian",
                  "name": "oee",
                  "historyEnabled": true,
                  "historyTimeDeadbandUnits": "MIN",
                  "executionMode": "TagGroupRate",
                  "sampleMode": "OnChange",
                  "historySampleRate": 10
                },
                {
                  "valueSource": "expr",
                  "expression": "tag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/DT/DowntimeUnplanned\u0027)",
                  "dataType": "Int4",
                  "name": "shiftTimeUnplanned",
                  "executionMode": "TagGroupRate",
                  "executionRate": 10000,
                  "tagGroup": "Default",
                  "value": 0,
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "{[.]../jobs/currentJob/minutesRemaining}",
                  "dataType": "Int4",
                  "name": "WOtimeRemaining",
                  "executionMode": "TagGroupRate",
                  "executionRate": 10000,
                  "tagGroup": "Default",
                  "value": 0,
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "eventScripts": [
                    {
                      "eventid": "valueChanged",
                      "script": "\t  if not initialChange:\n\t\tif currentValue.value: #If shiftChange \u003d\u003d 1/True\n\t\t\ttags,values \u003d [\"[.]shiftRawInfeed\", \"[.]shiftRawOutfeed\", \"[.]shiftRawReject\", \"[.]shiftRawScrap\"], [0,0,0,0]\n\t\t\tsystem.tag.writeBlocking(tags,values)"
                    }
                  ],
                  "expression": "{[~]cron/jobs/shiftEndCounters}",
                  "dataType": "Boolean",
                  "name": "shiftChange",
                  "value": false,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "if({[.]/oeeInfeedCount}\u003d0,0,\r\n({[.]/scrap}/{[.]/oeeInfeedCount}))",
                  "dataType": "Float4",
                  "name": "scrapPercent",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "db",
                  "dataType": "DataSet",
                  "datasource": "MSSQL_MES",
                  "query": "EXEC dt.stp_getPeriodAllLinesDTEventsCompositeByLine\r\n\t\t@timePeriod \u003d \u0027current shift\u0027,\r\n\t\t@LineID \u003d {[.]lineID}",
                  "name": "shiftDTCompositeQuick",
                  "executionMode": "TagGroupRate",
                  "tagGroup": "1Minute",
                  "tagType": "AtomicTag",
                  "queryType": "Select"
                },
                {
                  "sourceTagPath": {
                    "bindType": "parameter",
                    "binding": "[MES]replace({[.]../config/equipmentPath},\u0027\\\\\u0027,\u0027/\u0027)/Live Analysis/Shift/OEE Infeed Count"
                  },
                  "valueSource": "expr",
                  "expression": "{[.]ShiftRuntime} / len({[.]shiftDowntimeEvents})  //+ 2.8",
                  "dataType": "Float4",
                  "name": "equipmentMTBF",
                  "executionMode": "TagGroupRate",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "derived",
                  "eventScripts": [
                    {
                      "eventid": "valueChanged",
                      "script": "\tif not initialChange:\n\t\ttags \u003d [\"[.]shiftRawOutfeed\", \"[.]shiftChange\"]\n\t\tmes.schedule.counts.updateCounts(tags, previousValue, currentValue)"
                    }
                  ],
                  "sourceTagPath": "[.]../machineInput/outfeed",
                  "name": "derivedOutfeedCounts",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "timestampOf({[.]../OEE_Events/mode})",
                  "dataType": "DateTime",
                  "name": "lastModeChange",
                  "formatString": "yyyy-MM-dd h:mm:ss aa",
                  "executionMode": "FixedRate",
                  "executionRate": 10000,
                  "tagGroup": "MES Calculations",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "tag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/OEE/Infeed\u0027)",
                  "dataType": "Float4",
                  "name": "oeeInfeedCount",
                  "executionMode": "TagGroupRate",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "//runscript(\u0027mes.config.sp.getLineID\u0027, 0, {[.]line})\n{[.]../config/LineID}",
                  "name": "lineID",
                  "tagType": "AtomicTag"
                }
              ]
            },
            {
              "name": "ScadaControlled",
              "tagType": "UdtType",
              "tags": [
                {
                  "name": "schedule",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "valueSource": "memory",
                      "name": "routineRefreshTrigger",
                      "enabled": false,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "Boolean",
                      "name": "refreshSchedule",
                      "enabled": false,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "DataSet",
                      "name": "openWorkOrders",
                      "enabled": false,
                      "tagType": "AtomicTag"
                    }
                  ]
                },
                {
                  "name": "machineControl",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "valueSource": "memory",
                      "dataType": "Boolean",
                      "name": "mesBypassed",
                      "enabled": false,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "Boolean",
                      "name": "mesClearToRun",
                      "enabled": false,
                      "tagType": "AtomicTag"
                    }
                  ]
                },
                {
                  "name": "personnel",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "valueSource": "memory",
                      "dataType": "String",
                      "name": "quarterback",
                      "enabled": false,
                      "tagType": "AtomicTag"
                    }
                  ]
                },
                {
                  "valueSource": "memory",
                  "historyTimeDeadband": 10,
                  "historyMaxAge": 1,
                  "expression": "[.]GPA/MachineOutput/mode",
                  "sourceTagPath": "[.]../MachineOutput/mode",
                  "alarms": [
                    {
                      "setpointA": 10.0,
                      "activePipeline": "Application/Maintenance Called",
                      "shelvingAllowed": false,
                      "name": "Maintenance Called",
                      "ackNotesReqd": true,
                      "label": {
                        "bindType": "Expression",
                        "value": "substring(\r\n\tsubstring({PathToParentFolder},0, lastIndexOf({PathToParentFolder},\u0027/\u0027)),\r\n\tlastIndexOf(substring({PathToParentFolder},0, lastIndexOf({PathToParentFolder},\u0027/\u0027)),\r\n\t\u0027/\u0027) + 1)"
                      },
                      "displayPath": {
                        "bindType": "Expression",
                        "value": "substring({PathToParentFolder},0, lastIndexOf({PathToParentFolder},\u0027/\u0027))"
                      }
                    },
                    {
                      "setpointA": 30.0,
                      "activePipeline": "Application/TeamLeadCalled",
                      "shelvingAllowed": false,
                      "name": "Team Lead Called",
                      "ackNotesReqd": true,
                      "label": {
                        "bindType": "Expression",
                        "value": "substring(\r\n\tsubstring({PathToParentFolder},0, lastIndexOf({PathToParentFolder},\u0027/\u0027)),\r\n\tlastIndexOf(substring({PathToParentFolder},0, lastIndexOf({PathToParentFolder},\u0027/\u0027)),\r\n\t\u0027/\u0027) + 1)"
                      },
                      "displayPath": {
                        "bindType": "Expression",
                        "value": "substring({PathToParentFolder},0, lastIndexOf({PathToParentFolder},\u0027/\u0027))"
                      }
                    },
                    {
                      "setpointA": 20.0,
                      "activePipeline": "Application/QualityCalled",
                      "timeOnDelaySeconds": 10.0,
                      "shelvingAllowed": false,
                      "name": "QA Called",
                      "label": {
                        "bindType": "Expression",
                        "value": "substring(\r\n\tsubstring({PathToParentFolder},0, lastIndexOf({PathToParentFolder},\u0027/\u0027)),\r\n\tlastIndexOf(substring({PathToParentFolder},0, lastIndexOf({PathToParentFolder},\u0027/\u0027)),\r\n\t\u0027/\u0027) + 1)"
                      },
                      "displayPath": {
                        "bindType": "Expression",
                        "value": "substring({PathToParentFolder},0, lastIndexOf({PathToParentFolder},\u0027/\u0027))"
                      }
                    },
                    {
                      "setpointA": 11.0,
                      "shelvingAllowed": false,
                      "name": "Maintenace In Progress",
                      "deadband": 0.0,
                      "ackNotesReqd": true,
                      "label": {
                        "bindType": "Expression",
                        "value": "substring(\r\n\tsubstring({PathToParentFolder},0, lastIndexOf({PathToParentFolder},\u0027/\u0027)),\r\n\tlastIndexOf(substring({PathToParentFolder},0, lastIndexOf({PathToParentFolder},\u0027/\u0027)),\r\n\t\u0027/\u0027) + 1)"
                      },
                      "displayPath": {
                        "bindType": "Expression",
                        "value": "substring({PathToParentFolder},0, lastIndexOf({PathToParentFolder},\u0027/\u0027))"
                      }
                    },
                    {
                      "setpointA": 2.0,
                      "shelvingAllowed": false,
                      "name": "QAChangeOver",
                      "label": {
                        "bindType": "Expression",
                        "value": "substring(\r\n\tsubstring({PathToParentFolder},0, lastIndexOf({PathToParentFolder},\u0027/\u0027)),\r\n\tlastIndexOf(substring({PathToParentFolder},0, lastIndexOf({PathToParentFolder},\u0027/\u0027)),\r\n\t\u0027/\u0027) + 1)"
                      },
                      "displayPath": {
                        "bindType": "Expression",
                        "value": "substring({PathToParentFolder},0, lastIndexOf({PathToParentFolder},\u0027/\u0027))"
                      }
                    },
                    {
                      "setpointA": 21.0,
                      "shelvingAllowed": false,
                      "name": "Team Lead In Progress",
                      "ackNotesReqd": true,
                      "label": {
                        "bindType": "Expression",
                        "value": "substring(\r\n\tsubstring({PathToParentFolder},0, lastIndexOf({PathToParentFolder},\u0027/\u0027)),\r\n\tlastIndexOf(substring({PathToParentFolder},0, lastIndexOf({PathToParentFolder},\u0027/\u0027)),\r\n\t\u0027/\u0027) + 1)"
                      },
                      "displayPath": {
                        "bindType": "Expression",
                        "value": "substring({PathToParentFolder},0, lastIndexOf({PathToParentFolder},\u0027/\u0027))"
                      }
                    },
                    {
                      "setpointA": 21.0,
                      "notes": "Quality In Progress",
                      "timeOnDelaySeconds": 5.0,
                      "shelvingAllowed": false,
                      "name": "Quality In Progress",
                      "ackNotesReqd": true,
                      "label": {
                        "bindType": "Expression",
                        "value": "substring(\r\n\tsubstring({PathToParentFolder},0, lastIndexOf({PathToParentFolder},\u0027/\u0027)),\r\n\tlastIndexOf(substring({PathToParentFolder},0, lastIndexOf({PathToParentFolder},\u0027/\u0027)),\r\n\t\u0027/\u0027) + 1)"
                      },
                      "displayPath": {
                        "bindType": "Expression",
                        "value": "substring({PathToParentFolder},0, lastIndexOf({PathToParentFolder},\u0027/\u0027))"
                      }
                    }
                  ],
                  "enabled": true,
                  "tagType": "AtomicTag",
                  "dataType": "Int4",
                  "historyProvider": "IgnitionHistorian",
                  "name": "mode",
                  "historyEnabled": true,
                  "historyTimeDeadbandUnits": "MIN",
                  "value": 1
                },
                {
                  "valueSource": "memory",
                  "readOnly": false,
                  "dataType": "String",
                  "writePermissions": {
                    "type": "AllOf",
                    "securityLevels": []
                  },
                  "name": "quarterbackUserName",
                  "readPermissions": {
                    "type": "AllOf",
                    "securityLevels": []
                  },
                  "enabled": false,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "String",
                  "name": "quarterbackUserId",
                  "enabled": false,
                  "tagType": "AtomicTag"
                }
              ]
            },
            {
              "name": "OEE_Events_Cell_REF",
              "parameters": {
                "server": {
                  "dataType": "String",
                  "value": "Ignition_FIBER_IA1_default"
                },
                "line": {
                  "dataType": "String"
                },
                "fault": {
                  "dataType": "String"
                },
                "state": {
                  "dataType": "String",
                  "value": ""
                }
              },
              "tagType": "UdtType",
              "tags": [
                {
                  "valueSource": "expr",
                  "expression": "lookup({[.]../config/stateDS}, {[.]state}, \"\", \"ReasonCode\", \"Description\")",
                  "dataType": "String",
                  "datasource": "MSSQL_MES",
                  "query": "SELECT Description, DisplayColor, PlannedDowntime FROM state WHERE ID \u003d {[.]state}",
                  "name": "stateDescription",
                  "tagType": "AtomicTag",
                  "queryType": "AutoDetect"
                },
                {
                  "valueSource": "expr",
                  "expression": "{[.]../jobs/currentJob/minutesRemaining}",
                  "dataType": "Int4",
                  "name": "WOtimeRemaining",
                  "executionMode": "TagGroupRate",
                  "executionRate": 10000,
                  "tagGroup": "Default",
                  "value": 0,
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "timestampOf({[.]state})",
                  "dataType": "DateTime",
                  "name": "lastStateChange",
                  "formatString": "yyyy-MM-dd h:mm:ss aa",
                  "executionMode": "FixedRate",
                  "executionRate": 10000,
                  "tagGroup": "MES Calculations",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "opcItemPath": {
                    "bindType": "parameter",
                    "binding": "ns\u003d1;s\u003d[{device}]{InstanceName}/{TagName}"
                  },
                  "sourceTagPath": {
                    "bindType": "parameter",
                    "binding": "[{server}]{line}/MES/{InstanceName}/{TagName}"
                  },
                  "opcServer": {
                    "bindType": "parameter",
                    "binding": "{server}"
                  },
                  "valueSource": "reference",
                  "eventScripts": [
                    {
                      "eventid": "valueChanged",
                      "script": "\tif initialChange: pass #We dont want to record duplicate times...\n\t\t\t\t\n\telse:\t\n\t\tif currentValue.value !\u003d previousValue.value:\n\t\t\tcellTag \u003d tagPath.replace(\u0027state\u0027,\u0027cellID\u0027)\n\t\t\tlineTag \u003d tagPath.replace(\u0027state\u0027,\u0027lineID\u0027).replace(tag[\u0027parameters\u0027][\u0027InstanceName\u0027],\u0027OEE_Events\u0027)\n\t\t\tvals \u003d system.tag.readBlocking([cellTag,lineTag])\n\t\t\tcell \u003d vals[0].value\n\t\t\tline \u003d vals[1].value\n\t\t\t#mes.oee.tag.stateCurrent(line, cell, currentValue.timestamp, currentValue.value)\n\t\t\t\n\t\t\t#TIMEZONE CONVERSION\n\t\t\tToUTCOffset \u003d int(abs(system.date.getTimezoneOffset()))\n\t\t\tpreviousTimestampUTC \u003d system.date.addHours(previousValue.timestamp, ToUTCOffset)\n\t\t\tcurrentTimestampUTC \u003d system.date.addHours(currentValue.timestamp, ToUTCOffset)\n\t\t\t\n\t\t\tmes.oee.tag.stateEventInsert(line, cell, previousTimestampUTC, currentTimestampUTC, previousValue.value)\n\t\telse:pass"
                    }
                  ],
                  "expression": "if({[.]mode} \u003d 4 \u0026\u0026 {[.]output/state} \u003d 2, 4, if({[.]mode} \u003d 5 \u0026\u0026 {[.]output/state} \u003d 2, 3, {[.]output/state}))",
                  "deriveExpressionGetter": "// Fiberon does not have PLC and requires math to avoid our global states\r\nif({source} \u003d 1,\r\n\t1,// Their running state matches ours\r\n\t{source}+10 //(add 10 for corrected downtime)\r\n\t)",
                  "historyProvider": "IgnitionHistorian",
                  "name": "state",
                  "historyEnabled": true,
                  "executionMode": "EventDriven",
                  "tagGroup": "Default",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "sourceTagPath": {
                    "bindType": "parameter",
                    "binding": "replace({PathToParentFolder}, \"/M1000\", \"\") + \"/jobs/currentJob/workOrder\"\r\n"
                  },
                  "valueSource": "expr",
                  "expression": "{[.]../jobs/currentJob/workOrder}",
                  "dataType": "String",
                  "name": "workOrder",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "try(\r\n\trunscript(\u0027mes.config.sp.getCellOrder\u0027, 0, {[.]line},{[.]cell}),\r\n\t// commented out because of gateway log spam\r\n\t0\r\n)",
                  "dataType": "Int4",
                  "datasource": "MSSQL_MES",
                  "query": "EXEC [dbo].[stp_getCellID] @line\u003d{[.]line}, @cell\u003d{[.]cell}",
                  "name": "cellOrder",
                  "executionMode": "TagGroupRate",
                  "tagGroup": "1Minute",
                  "queryType": "Select",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "derived",
                  "deriveExpressionGetter": "// Fiberon does not have PLC and requires math to avoid our global states\r\nif({source} \u003d 1,\r\n\t1,// Their running state matches ours\r\n\t{source}+10 //(add 10 for corrected downtime)\r\n\t)",
                  "sourceTagPath": "[.]state",
                  "name": "TestState",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "lookup({[.]../config/stateDS}, {[.]state}, \"\", \"ReasonCode\", \"DisplayColor\")",
                  "dataType": "String",
                  "datasource": "MSSQL_MES",
                  "query": "SELECT DisplayColor, PlannedDowntime FROM state WHERE ID \u003d {[.]state}",
                  "name": "stateColor",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "try(\r\n\trunscript(\u0027mes.config.sp.getCellID\u0027, 0, {[.]line},{[.]cell}),\r\n\t0\r\n)",
                  "dataType": "Int4",
                  "datasource": "MSSQL_MES",
                  "query": "EXEC [dbo].[stp_getCellID] @line\u003d{[.]line}, @cell\u003d{[.]cell}",
                  "name": "cellID",
                  "executionMode": "TagGroupRate",
                  "tagGroup": "1Minute",
                  "queryType": "Select",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "{[.]../jobs/currentJob/productCode}",
                  "dataType": "String",
                  "name": "productCode",
                  "tagType": "AtomicTag"
                },
                {
                  "opcItemPath": {
                    "bindType": "parameter",
                    "binding": "ns\u003d1;s\u003d[{device}]{InstanceName}/{TagName}"
                  },
                  "sourceTagPath": {
                    "bindType": "parameter",
                    "binding": "[{server}]{line}/MES/{InstanceName}/{TagName}"
                  },
                  "opcServer": {
                    "bindType": "parameter",
                    "binding": "{server}"
                  },
                  "valueSource": "reference",
                  "eventScripts": [
                    {
                      "eventid": "valueChanged",
                      "script": "\tif initialChange: pass #We dont want to record duplicate times...\n\t\t\t\t\n\telse:\t\n\t\tif currentValue.value !\u003d previousValue.value:\n\t\t\tcellTag \u003d tagPath.replace(\u0027mode\u0027,\u0027cellID\u0027)\n\t\t\tlineTag \u003d tagPath.replace(\u0027mode\u0027,\u0027lineID\u0027).replace(tag[\u0027parameters\u0027][\u0027InstanceName\u0027],\u0027OEE_Events\u0027)\n\t\t\tvals \u003d system.tag.readBlocking([cellTag,lineTag])\n\t\t\tcell \u003d vals[0].value\n\t\t\tline \u003d vals[1].value\n\t\t\t\n\t\t\t#TIMEZONE CONVERSION\n\t\t\tToUTCOffset \u003d int(abs(system.date.getTimezoneOffset()))\n\t\t\tpreviousTimestampUTC \u003d system.date.addHours(previousValue.timestamp, ToUTCOffset)\n\t\t\tcurrentTimestampUTC \u003d system.date.addHours(currentValue.timestamp, ToUTCOffset)\n\t\t\t\n\t\t\tmes.oee.tag.stateEventInsert(line, cell, previousTimestampUTC, currentTimestampUTC, previousValue.value)\n\t\telse:pass"
                    }
                  ],
                  "expression": "if({[.]mode} \u003d 4 \u0026\u0026 {[.]output/state} \u003d 2, 4, if({[.]mode} \u003d 5 \u0026\u0026 {[.]output/state} \u003d 2, 3, {[.]output/state}))",
                  "historyProvider": "IgnitionHistorian",
                  "name": "mode",
                  "historyEnabled": true,
                  "executionMode": "EventDriven",
                  "tagGroup": "Default",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "{[.]../config/name}",
                  "dataType": "String",
                  "name": "line",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "timestampOf({[.]mode})",
                  "dataType": "DateTime",
                  "name": "lastModeChange",
                  "formatString": "yyyy-MM-dd h:mm:ss aa",
                  "executionMode": "FixedRate",
                  "executionRate": 10000,
                  "tagGroup": "MES Calculations",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "\u0027[\u0027+{server}+\u0027]\u0027+{line}+\u0027/MES/\u0027+{InstanceName}+\u0027/\u0027",
                  "dataType": "String",
                  "name": "OPCPath",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "{InstanceName}",
                  "dataType": "String",
                  "name": "cell",
                  "enabled": true,
                  "tagType": "AtomicTag"
                }
              ]
            },
            {
              "name": "MachineInput_REF_FB",
              "parameters": {
                "outfeed": {
                  "dataType": "String",
                  "value": "MES/outfeed"
                },
                "server": {
                  "dataType": "String",
                  "value": "Ignition_FIBER_IA1_default"
                },
                "reject": {
                  "dataType": "String",
                  "value": "MES/reject"
                },
                "infeed": {
                  "dataType": "String",
                  "value": "MES/infeed"
                },
                "fault": {
                  "dataType": "String",
                  "value": "MES/fault"
                },
                "state": {
                  "dataType": "String",
                  "value": "MES/state"
                },
                "device": {
                  "dataType": "String",
                  "value": ""
                }
              },
              "tagType": "UdtType",
              "tags": [
                {
                  "opcItemPath": {
                    "bindType": "parameter",
                    "binding": "ns\u003d1;s\u003d[{device}]{reject}"
                  },
                  "sourceTagPath": {
                    "bindType": "parameter",
                    "binding": "[{server}]{device}/MES/machineInput/{TagName}"
                  },
                  "opcServer": {
                    "bindType": "parameter",
                    "binding": "{server}"
                  },
                  "valueSource": "derived",
                  "eventScripts": [
                    {
                      "eventid": "valueChanged",
                      "script": "\tif not initialChange and previousValue.value is not None and currentValue.value is not None:\n\t\t\n\t\ttagPath \u003d \u0027/\u0027.join(tagPath.split(\u0027/\u0027)[:-2])\n\t\trejectCount \u003d system.tag.read(tagPath + \"/Jobs/currentJob/productionCounts/reject\").value\n\t\tif rejectCount is None:\n\t\t\trejectCount \u003d 0\n\t\t\n\t\tif currentValue.value \u003e previousValue.value:\n\t\t\trejectCount \u003d rejectCount + (currentValue.value - previousValue.value)\n\t\telif currentValue.value \u003d\u003d previousValue.value:\n\t\t\tpass\n\t\telse:\n\t\t\trejectCount \u003d rejectCount + currentValue.value\n\t\tsystem.tag.write(tagPath + \"/Jobs/currentJob/productionCounts/reject\", rejectCount)",
                      "enabled": false
                    }
                  ],
                  "historyProvider": "history",
                  "deriveExpressionSetter": "//{value}",
                  "name": "reject",
                  "historyEnabled": false,
                  "tagGroup": "Default",
                  "tagType": "AtomicTag"
                },
                {
                  "opcItemPath": {
                    "bindType": "parameter",
                    "binding": "ns\u003d1;s\u003d[{device}]{fault}"
                  },
                  "sourceTagPath": {
                    "bindType": "parameter",
                    "binding": "[{server}]{device}/MES/machineInput/{TagName}"
                  },
                  "opcServer": {
                    "bindType": "parameter",
                    "binding": "{server}"
                  },
                  "valueSource": "derived",
                  "dataType": "Int4",
                  "historyProvider": "history",
                  "deriveExpressionSetter": "//{value}",
                  "name": "fault",
                  "historyEnabled": false,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "derived",
                  "eventScripts": [
                    {
                      "eventid": "valueChanged",
                      "script": "\tif not initialChange:\n\t\tparams \u003d {\n\t\t\t\u0027tagPath\u0027: tagPath,\n\t\t\t\u0027currentValue\u0027: currentValue\n\t\t}\n\t\tmes.workorder.tag.fb_changeWO(params)"
                    }
                  ],
                  "name": "WorkOrder",
                  "tagType": "AtomicTag"
                },
                {
                  "opcItemPath": {
                    "bindType": "parameter",
                    "binding": "ns\u003d1;s\u003d[{server}]{device}/{outfeed}"
                  },
                  "sourceTagPath": {
                    "bindType": "parameter",
                    "binding": "[{server}]{device}/MES/machineInput/{TagName}"
                  },
                  "opcServer": {
                    "bindType": "parameter",
                    "binding": "{server}"
                  },
                  "valueSource": "derived",
                  "eventScripts": [
                    {
                      "eventid": "valueChanged",
                      "script": "\tif not initialChange:\n\t\ttagPath \u003d \u0027/\u0027.join(tagPath.split(\u0027/\u0027)[:-2])\n\t\toutfeedCount \u003d system.tag.read(tagPath + \"/Jobs/currentJob/productionCounts/output\").value\n\t\tif outfeedCount is None:\n\t\t\toutfeedCount \u003d 0\n\t\tif currentValue.value \u003e previousValue.value:\n\t\t\toutfeedCount \u003d outfeedCount + (currentValue.value - previousValue.value)\n\t\telse:\n\t\t\toutfeedCount \u003d outfeedCount + currentValue.value\n\t\tsystem.tag.write(tagPath + \"/Jobs/currentJob/productionCounts/output\", outfeedCount)",
                      "enabled": false
                    }
                  ],
                  "dataType": "Int4",
                  "historyProvider": "history",
                  "deriveExpressionSetter": "//{value}",
                  "name": "outfeed",
                  "historyEnabled": false,
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "opcItemPath": {
                    "bindType": "parameter",
                    "binding": "ns\u003d1;s\u003d[{device}]{infeed}"
                  },
                  "sourceTagPath": {
                    "bindType": "parameter",
                    "binding": "[{server}]{device}/MES/machineInput/{TagName}"
                  },
                  "opcServer": {
                    "bindType": "parameter",
                    "binding": "{server}"
                  },
                  "valueSource": "derived",
                  "eventScripts": [
                    {
                      "eventid": "valueChanged",
                      "script": "\tif not initialChange:\n\t\t\n\t\ttagPath \u003d \u0027/\u0027.join(tagPath.split(\u0027/\u0027)[:-2])\n\t\tinfeedCount \u003d system.tag.read(tagPath +\"/Jobs/currentJob/productionCounts/input\").value\n\t\tinfeedScale \u003d system.tag.read(tagPath +\"/Jobs/currentJob/partCountMultiplier\").value\n\t\tif infeedScale is None:\n\t\t\tinfeedScale \u003d 1\n\t\tif infeedCount is None:\n\t\t\tinfeedCount \u003d 0\n\t\t\n\t\tif currentValue.value \u003e previousValue.value:\n\t\t\tdeltaValue \u003d (currentValue.value - previousValue.value) * infeedScale\n\t\t\tinfeedCount \u003d infeedCount + deltaValue\n\t\telse:\n\t\t\tinfeedCount \u003d infeedCount + (currentValue.value * infeedScale)\n\t\tsystem.tag.write(tagPath +\"/Jobs/currentJob/productionCounts/input\", infeedCount)",
                      "enabled": false
                    }
                  ],
                  "dataType": "Int4",
                  "historyProvider": "history",
                  "deriveExpressionSetter": "//{value}",
                  "name": "infeed",
                  "historyEnabled": false,
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "sourceTagPath": {
                    "bindType": "parameter",
                    "binding": "[{server}]{device}/MES/machineInput/{TagName}"
                  },
                  "valueSource": "derived",
                  "deriveExpressionSetter": "//{value}",
                  "name": "lineRate",
                  "tagType": "AtomicTag"
                },
                {
                  "opcItemPath": {
                    "bindType": "parameter",
                    "binding": "ns\u003d1;s\u003d[{server}]{device}/{outfeed}"
                  },
                  "sourceTagPath": {
                    "bindType": "parameter",
                    "binding": "[{server}]{device}/MES/machineInput/{TagName}"
                  },
                  "opcServer": {
                    "bindType": "parameter",
                    "binding": "{server}"
                  },
                  "valueSource": "derived",
                  "historyTimeDeadband": 10,
                  "historyMaxAge": 1,
                  "deriveExpressionGetter": "// Fiberon does not have PLC and requires math to avoid our global states\r\nif({source} \u003d 1,\r\n\t1,// Their running state matches ours\r\n\t{source}+0 //(add 10 for corrected downtime)\r\n\t)",
                  "enabled": true,
                  "tagType": "AtomicTag",
                  "eventScripts": [
                    {
                      "eventid": "valueChanged",
                      "script": "\tif not initialChange:\n\t\ttagPath \u003d \u0027/\u0027.join(tagPath.split(\u0027/\u0027)[:-2])\n\t\toutfeedCount \u003d system.tag.read(tagPath + \"/Jobs/currentJob/productionCounts/output\").value\n\t\tif outfeedCount is None:\n\t\t\toutfeedCount \u003d 0\n\t\tif currentValue.value \u003e previousValue.value:\n\t\t\toutfeedCount \u003d outfeedCount + (currentValue.value - previousValue.value)\n\t\telse:\n\t\t\toutfeedCount \u003d outfeedCount + currentValue.value\n\t\tsystem.tag.write(tagPath + \"/Jobs/currentJob/productionCounts/output\", outfeedCount)",
                      "enabled": false
                    }
                  ],
                  "dataType": "Int4",
                  "historyProvider": "IgnitionHistorian",
                  "deriveExpressionSetter": "//{value}",
                  "name": "state",
                  "historyEnabled": true,
                  "historyTimeDeadbandUnits": "MIN"
                },
                {
                  "sourceTagPath": {
                    "bindType": "parameter",
                    "binding": "[{server}]{device}/MES/machineInput/{TagName}"
                  },
                  "valueSource": "memory",
                  "deriveExpressionSetter": "//{value}",
                  "name": "lineReqSpeed",
                  "value": 3600,
                  "tagType": "AtomicTag"
                }
              ]
            },
            {
              "name": "OEE_Events_Cell_OPC",
              "parameters": {
                "server": {
                  "dataType": "String",
                  "value": "Ignition_FIBER_IA1_default"
                },
                "line": {
                  "dataType": "String"
                },
                "fault": {
                  "dataType": "String"
                },
                "state": {
                  "dataType": "String",
                  "value": ""
                }
              },
              "tagType": "UdtType",
              "tags": [
                {
                  "valueSource": "expr",
                  "expression": "runscript(\u0027mes.config.sp.getCellOrder\u0027, 0, {[.]line},{[.]cell})\r\n// commented out because of gateway log spam",
                  "dataType": "Int4",
                  "datasource": "MSSQL_MES",
                  "query": "EXEC [dbo].[stp_getCellID] @line\u003d{[.]line}, @cell\u003d{[.]cell}",
                  "name": "cellOrder",
                  "executionMode": "TagGroupRate",
                  "tagGroup": "1Minute",
                  "queryType": "Select",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "lookup({[.]../config/stateDS}, {[.]state}, \"\", \"ReasonCode\", \"Description\")",
                  "dataType": "String",
                  "datasource": "MSSQL_MES",
                  "query": "SELECT Description, DisplayColor, PlannedDowntime FROM state WHERE ID \u003d {[.]state}",
                  "name": "stateDescription",
                  "tagType": "AtomicTag",
                  "queryType": "AutoDetect"
                },
                {
                  "valueSource": "expr",
                  "expression": "{InstanceName}",
                  "dataType": "String",
                  "name": "cell",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "timestampOf({[.]state})",
                  "dataType": "DateTime",
                  "name": "lastStateChange",
                  "formatString": "yyyy-MM-dd h:mm:ss aa",
                  "executionMode": "FixedRate",
                  "executionRate": 10000,
                  "tagGroup": "MES Calculations",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "{[.]../jobs/currentJob/minutesRemaining}",
                  "dataType": "Int4",
                  "name": "WOtimeRemaining",
                  "executionMode": "TagGroupRate",
                  "executionRate": 10000,
                  "tagGroup": "Default",
                  "value": 0,
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "timestampOf({[.]mode})",
                  "dataType": "DateTime",
                  "name": "lastModeChange",
                  "formatString": "yyyy-MM-dd h:mm:ss aa",
                  "executionMode": "FixedRate",
                  "executionRate": 10000,
                  "tagGroup": "MES Calculations",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "{[.]../jobs/currentJob/productCode}",
                  "dataType": "String",
                  "name": "productCode",
                  "tagType": "AtomicTag"
                },
                {
                  "opcItemPath": {
                    "bindType": "parameter",
                    "binding": "ns\u003d1;s\u003d[{line}]{InstanceName}/{TagName}"
                  },
                  "opcServer": {
                    "bindType": "parameter",
                    "binding": "{server}"
                  },
                  "valueSource": "opc",
                  "historyTimeDeadband": 10,
                  "historyMaxAge": 1,
                  "expression": "if({[.]mode} \u003d 4 \u0026\u0026 {[.]output/state} \u003d 2, 4, if({[.]mode} \u003d 5 \u0026\u0026 {[.]output/state} \u003d 2, 3, {[.]output/state}))",
                  "tagGroup": "Default",
                  "enabled": true,
                  "tagType": "AtomicTag",
                  "eventScripts": [
                    {
                      "eventid": "valueChanged",
                      "script": "\tif initialChange: pass #We dont want to record duplicate times...\n\t\t\t\t\n\telse:\t\n\t\tif currentValue.value !\u003d previousValue.value:\n\t\t\tcellTag \u003d tagPath.replace(\u0027state\u0027,\u0027cellID\u0027)\n\t\t\tlineTag \u003d tagPath.replace(\u0027state\u0027,\u0027lineID\u0027).replace(tag[\u0027parameters\u0027][\u0027InstanceName\u0027],\u0027OEE_Events\u0027)\n\t\t\tvals \u003d system.tag.readBlocking([cellTag,lineTag])\n\t\t\tcell \u003d vals[0].value\n\t\t\tline \u003d vals[1].value\n\t\t\t#mes.oee.tag.stateCurrent(line, cell, currentValue.timestamp, currentValue.value)\n\t\t\t\n\t\t\t#TIMEZONE CONVERSION\n\t\t\tToUTCOffset \u003d int(abs(system.date.getTimezoneOffset()))\n\t\t\tpreviousTimestampUTC \u003d system.date.addHours(previousValue.timestamp, ToUTCOffset)\n\t\t\tcurrentTimestampUTC \u003d system.date.addHours(currentValue.timestamp, ToUTCOffset)\n\t\t\t\n\t\t\tmes.oee.tag.stateEventInsert(line, cell, previousTimestampUTC, currentTimestampUTC, previousValue.value)\n\t\telse:pass"
                    }
                  ],
                  "historyProvider": "IgnitionHistorian",
                  "name": "state",
                  "historyEnabled": true,
                  "historyTimeDeadbandUnits": "MIN",
                  "executionMode": "EventDriven"
                },
                {
                  "valueSource": "expr",
                  "expression": "{[.]../config/name}",
                  "dataType": "String",
                  "name": "line",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "//runscript(\u0027mes.config.sp.getCellID\u0027, 0, {[.]line},{[.]cell})\r\ntry(\r\n\trunscript(\u0027mes.config.sp.getCellID\u0027, 0, {[.]line},{[.]cell}),\r\n\t0\r\n)",
                  "dataType": "Int4",
                  "datasource": "MSSQL_MES",
                  "query": "EXEC [dbo].[stp_getCellID] @line\u003d{[.]line}, @cell\u003d{[.]cell}",
                  "name": "cellID",
                  "executionMode": "TagGroupRate",
                  "tagGroup": "1Minute",
                  "queryType": "Select",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "lookup({[.]../config/stateDS}, {[.]state}, \"\", \"ReasonCode\", \"DisplayColor\")",
                  "dataType": "String",
                  "datasource": "MSSQL_MES",
                  "query": "SELECT DisplayColor, PlannedDowntime FROM state WHERE ID \u003d {[.]state}",
                  "name": "stateColor",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "\u0027ns\u003d1;s\u003d[\u0027+{[.]line}+\u0027]\u0027+{InstanceName}+\u0027/\u0027",
                  "dataType": "String",
                  "name": "OPCPath",
                  "tagType": "AtomicTag"
                },
                {
                  "sourceTagPath": {
                    "bindType": "parameter",
                    "binding": "replace({PathToParentFolder}, \"/M1000\", \"\") + \"/jobs/currentJob/workOrder\"\r\n"
                  },
                  "valueSource": "expr",
                  "expression": "{[.]../jobs/currentJob/workOrder}",
                  "dataType": "String",
                  "name": "workOrder",
                  "tagType": "AtomicTag"
                },
                {
                  "opcItemPath": {
                    "bindType": "parameter",
                    "binding": "ns\u003d1;s\u003d[{line}]{InstanceName}/{TagName}"
                  },
                  "opcServer": {
                    "bindType": "parameter",
                    "binding": "{server}"
                  },
                  "valueSource": "opc",
                  "historyTimeDeadband": 10,
                  "historyMaxAge": 1,
                  "expression": "if({[.]mode} \u003d 4 \u0026\u0026 {[.]output/state} \u003d 2, 4, if({[.]mode} \u003d 5 \u0026\u0026 {[.]output/state} \u003d 2, 3, {[.]output/state}))",
                  "tagGroup": "Default",
                  "enabled": true,
                  "tagType": "AtomicTag",
                  "eventScripts": [
                    {
                      "eventid": "valueChanged",
                      "script": "\tif initialChange: pass #We dont want to record duplicate times...\n\t\t\t\t\n\telse:\t\n\t\tif currentValue.value !\u003d previousValue.value:\n\t\t\tcellTag \u003d tagPath.replace(\u0027mode\u0027,\u0027cellID\u0027)\n\t\t\tlineTag \u003d tagPath.replace(\u0027mode\u0027,\u0027lineID\u0027).replace(tag[\u0027parameters\u0027][\u0027InstanceName\u0027],\u0027OEE_Events\u0027)\n\t\t\tvals \u003d system.tag.readBlocking([cellTag,lineTag])\n\t\t\tcell \u003d vals[0].value\n\t\t\tline \u003d vals[1].value\n\t\t\t\n\t\t\t#TIMEZONE CONVERSION\n\t\t\tToUTCOffset \u003d int(abs(system.date.getTimezoneOffset()))\n\t\t\tpreviousTimestampUTC \u003d system.date.addHours(previousValue.timestamp, ToUTCOffset)\n\t\t\tcurrentTimestampUTC \u003d system.date.addHours(currentValue.timestamp, ToUTCOffset)\n\t\t\t\n\t\t\tmes.oee.tag.stateEventInsert(line, cell, previousTimestampUTC, currentTimestampUTC, previousValue.value)\n\t\telse:pass"
                    }
                  ],
                  "historyProvider": "IgnitionHistorian",
                  "name": "mode",
                  "historyEnabled": true,
                  "historyTimeDeadbandUnits": "MIN",
                  "executionMode": "EventDriven"
                }
              ]
            },
            {
              "name": "MachineInputMolding",
              "typeId": "GPA/OEE/MachineInput_OPC",
              "parameters": {
                "outfeed": {
                  "dataType": "String",
                  "value": "D2211"
                },
                "reject": {
                  "dataType": "String",
                  "value": ""
                },
                "infeed": {
                  "dataType": "String",
                  "value": "D2205"
                },
                "fault": {
                  "dataType": "String",
                  "value": ""
                },
                "state": {
                  "dataType": "String",
                  "value": "D2003"
                },
                "device": {
                  "dataType": "String",
                  "value": ""
                }
              },
              "tagType": "UdtType",
              "tags": [
                {
                  "name": "state",
                  "tagType": "AtomicTag"
                },
                {
                  "name": "reject",
                  "tagType": "AtomicTag"
                },
                {
                  "name": "outfeed",
                  "tagType": "AtomicTag"
                },
                {
                  "name": "infeed",
                  "tagType": "AtomicTag"
                },
                {
                  "name": "fault",
                  "tagType": "AtomicTag"
                }
              ]
            },
            {
              "name": "MachineOutput",
              "parameters": {
                "mode": {
                  "dataType": "String",
                  "value": "mode"
                },
                "server": {
                  "dataType": "String",
                  "value": "Tag1_OPCUA"
                },
                "state": {
                  "dataType": "String",
                  "value": "state"
                },
                "device": {
                  "dataType": "String",
                  "value": ""
                }
              },
              "tagType": "UdtType",
              "tags": [
                {
                  "opcItemPath": {
                    "bindType": "parameter",
                    "binding": "[{device}]{mode}"
                  },
                  "sourceTagPath": {
                    "bindType": "parameter",
                    "binding": "{[.]../OEE_Events/mode}"
                  },
                  "opcServer": {
                    "bindType": "parameter",
                    "binding": "{server}"
                  },
                  "valueSource": "reference",
                  "historyTimeDeadband": 60,
                  "historyMaxAge": 12,
                  "expression": "1",
                  "dataType": "Int4",
                  "historyProvider": "IgnitionHistorian",
                  "name": "mode",
                  "historyEnabled": true,
                  "value": 0,
                  "tagType": "AtomicTag"
                },
                {
                  "opcItemPath": {
                    "bindType": "parameter",
                    "binding": "[{device}]{state}"
                  },
                  "sourceTagPath": {
                    "bindType": "parameter",
                    "binding": "{[.]../OEE_Events/state}"
                  },
                  "opcServer": {
                    "bindType": "parameter",
                    "binding": "{server}"
                  },
                  "valueSource": "reference",
                  "historyTimeDeadband": 60,
                  "historyMaxAge": 12,
                  "expression": "1",
                  "dataType": "Int4",
                  "historyProvider": "IgnitionHistorian",
                  "name": "state",
                  "historyEnabled": true,
                  "value": 0,
                  "tagType": "AtomicTag"
                }
              ]
            },
            {
              "name": "MachineInput_REF",
              "parameters": {
                "outfeed": {
                  "dataType": "String",
                  "value": "MES/outfeed"
                },
                "server": {
                  "dataType": "String",
                  "value": "Ignition_FIBER_IA1_default"
                },
                "reject": {
                  "dataType": "String",
                  "value": "MES/reject"
                },
                "infeed": {
                  "dataType": "String",
                  "value": "MES/infeed"
                },
                "fault": {
                  "dataType": "String",
                  "value": "MES/fault"
                },
                "state": {
                  "dataType": "String",
                  "value": "MES/state"
                },
                "device": {
                  "dataType": "String",
                  "value": ""
                }
              },
              "tagType": "UdtType",
              "tags": [
                {
                  "opcItemPath": {
                    "bindType": "parameter",
                    "binding": "ns\u003d1;s\u003d[{device}]{fault}"
                  },
                  "sourceTagPath": {
                    "bindType": "parameter",
                    "binding": "[{server}]{device}/MES/machineInput/{TagName}"
                  },
                  "opcServer": {
                    "bindType": "parameter",
                    "binding": "{server}"
                  },
                  "valueSource": "derived",
                  "dataType": "Int4",
                  "historyProvider": "history",
                  "deriveExpressionSetter": "//{value}",
                  "name": "fault",
                  "historyEnabled": false,
                  "tagType": "AtomicTag"
                },
                {
                  "opcItemPath": {
                    "bindType": "parameter",
                    "binding": "ns\u003d1;s\u003d[{device}]{infeed}"
                  },
                  "sourceTagPath": {
                    "bindType": "parameter",
                    "binding": "[{server}]{device}/MES/machineInput/{TagName}"
                  },
                  "opcServer": {
                    "bindType": "parameter",
                    "binding": "{server}"
                  },
                  "valueSource": "derived",
                  "eventScripts": [
                    {
                      "eventid": "valueChanged",
                      "script": "\tif not initialChange:\n\t\t\n\t\ttagPath \u003d \u0027/\u0027.join(tagPath.split(\u0027/\u0027)[:-2])\n\t\tinfeedCount \u003d system.tag.read(tagPath +\"/Jobs/currentJob/productionCounts/input\").value\n\t\tinfeedScale \u003d system.tag.read(tagPath +\"/Jobs/currentJob/partCountMultiplier\").value\n\t\tif infeedScale is None:\n\t\t\tinfeedScale \u003d 1\n\t\tif infeedCount is None:\n\t\t\tinfeedCount \u003d 0\n\t\t\n\t\tif currentValue.value \u003e previousValue.value:\n\t\t\tdeltaValue \u003d (currentValue.value - previousValue.value) * infeedScale\n\t\t\tinfeedCount \u003d infeedCount + deltaValue\n\t\telse:\n\t\t\tinfeedCount \u003d infeedCount + (currentValue.value * infeedScale)\n\t\tsystem.tag.write(tagPath +\"/Jobs/currentJob/productionCounts/input\", infeedCount)",
                      "enabled": false
                    }
                  ],
                  "dataType": "Int4",
                  "historyProvider": "history",
                  "deriveExpressionSetter": "//{value}",
                  "name": "infeed",
                  "historyEnabled": false,
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "opcItemPath": {
                    "bindType": "parameter",
                    "binding": "ns\u003d1;s\u003d[{server}]{device}/{outfeed}"
                  },
                  "sourceTagPath": {
                    "bindType": "parameter",
                    "binding": "[{server}]{device}/MES/machineInput/{TagName}"
                  },
                  "opcServer": {
                    "bindType": "parameter",
                    "binding": "{server}"
                  },
                  "valueSource": "derived",
                  "eventScripts": [
                    {
                      "eventid": "valueChanged",
                      "script": "\tif not initialChange:\n\t\ttagPath \u003d \u0027/\u0027.join(tagPath.split(\u0027/\u0027)[:-2])\n\t\toutfeedCount \u003d system.tag.read(tagPath + \"/Jobs/currentJob/productionCounts/output\").value\n\t\tif outfeedCount is None:\n\t\t\toutfeedCount \u003d 0\n\t\tif currentValue.value \u003e previousValue.value:\n\t\t\toutfeedCount \u003d outfeedCount + (currentValue.value - previousValue.value)\n\t\telse:\n\t\t\toutfeedCount \u003d outfeedCount + currentValue.value\n\t\tsystem.tag.write(tagPath + \"/Jobs/currentJob/productionCounts/output\", outfeedCount)",
                      "enabled": false
                    }
                  ],
                  "dataType": "Int4",
                  "historyProvider": "history",
                  "deriveExpressionSetter": "//{value}",
                  "name": "outfeed",
                  "historyEnabled": false,
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "opcItemPath": {
                    "bindType": "parameter",
                    "binding": "ns\u003d1;s\u003d[{server}]{device}/{outfeed}"
                  },
                  "sourceTagPath": {
                    "bindType": "parameter",
                    "binding": "[{server}]{device}/MES/machineInput/{TagName}"
                  },
                  "opcServer": {
                    "bindType": "parameter",
                    "binding": "{server}"
                  },
                  "valueSource": "derived",
                  "historyTimeDeadband": 10,
                  "historyMaxAge": 1,
                  "deriveExpressionGetter": "// Fiberon does not have PLC and requires math to avoid our global states\r\nif({source} \u003d 1,\r\n\t1,// Their running state matches ours\r\n\t{source}+0 //(add 10 for corrected downtime)\r\n\t)",
                  "enabled": true,
                  "tagType": "AtomicTag",
                  "eventScripts": [
                    {
                      "eventid": "valueChanged",
                      "script": "\tif not initialChange:\n\t\ttagPath \u003d \u0027/\u0027.join(tagPath.split(\u0027/\u0027)[:-2])\n\t\toutfeedCount \u003d system.tag.read(tagPath + \"/Jobs/currentJob/productionCounts/output\").value\n\t\tif outfeedCount is None:\n\t\t\toutfeedCount \u003d 0\n\t\tif currentValue.value \u003e previousValue.value:\n\t\t\toutfeedCount \u003d outfeedCount + (currentValue.value - previousValue.value)\n\t\telse:\n\t\t\toutfeedCount \u003d outfeedCount + currentValue.value\n\t\tsystem.tag.write(tagPath + \"/Jobs/currentJob/productionCounts/output\", outfeedCount)",
                      "enabled": false
                    }
                  ],
                  "dataType": "Int4",
                  "historyProvider": "IgnitionHistorian",
                  "deriveExpressionSetter": "//{value}",
                  "name": "state",
                  "historyEnabled": true,
                  "historyTimeDeadbandUnits": "MIN"
                },
                {
                  "valueSource": "derived",
                  "name": "WorkOrder",
                  "tagType": "AtomicTag"
                },
                {
                  "opcItemPath": {
                    "bindType": "parameter",
                    "binding": "ns\u003d1;s\u003d[{device}]{reject}"
                  },
                  "sourceTagPath": {
                    "bindType": "parameter",
                    "binding": "[{server}]{device}/MES/machineInput/{TagName}"
                  },
                  "opcServer": {
                    "bindType": "parameter",
                    "binding": "{server}"
                  },
                  "valueSource": "derived",
                  "eventScripts": [
                    {
                      "eventid": "valueChanged",
                      "script": "\tif not initialChange and previousValue.value is not None and currentValue.value is not None:\n\t\t\n\t\ttagPath \u003d \u0027/\u0027.join(tagPath.split(\u0027/\u0027)[:-2])\n\t\trejectCount \u003d system.tag.read(tagPath + \"/Jobs/currentJob/productionCounts/reject\").value\n\t\tif rejectCount is None:\n\t\t\trejectCount \u003d 0\n\t\t\n\t\tif currentValue.value \u003e previousValue.value:\n\t\t\trejectCount \u003d rejectCount + (currentValue.value - previousValue.value)\n\t\telif currentValue.value \u003d\u003d previousValue.value:\n\t\t\tpass\n\t\telse:\n\t\t\trejectCount \u003d rejectCount + currentValue.value\n\t\tsystem.tag.write(tagPath + \"/Jobs/currentJob/productionCounts/reject\", rejectCount)",
                      "enabled": false
                    }
                  ],
                  "historyProvider": "history",
                  "deriveExpressionSetter": "//{value}",
                  "name": "reject",
                  "historyEnabled": false,
                  "tagGroup": "Default",
                  "tagType": "AtomicTag"
                },
                {
                  "sourceTagPath": {
                    "bindType": "parameter",
                    "binding": "[{server}]{device}/MES/machineInput/{TagName}"
                  },
                  "valueSource": "memory",
                  "deriveExpressionSetter": "//{value}",
                  "name": "lineReqSpeed",
                  "value": 3600,
                  "tagType": "AtomicTag"
                },
                {
                  "sourceTagPath": {
                    "bindType": "parameter",
                    "binding": "[{server}]{device}/MES/machineInput/{TagName}"
                  },
                  "valueSource": "derived",
                  "deriveExpressionSetter": "//{value}",
                  "name": "lineRate",
                  "tagType": "AtomicTag"
                }
              ]
            },
            {
              "name": "LineOutput",
              "tagType": "UdtType",
              "tags": [
                {
                  "valueSource": "derived",
                  "deriveExpressionGetter": "forceQuality({source})",
                  "dataType": "Float4",
                  "sourceTagPath": "[.]../Jobs/currentJob/productionCounts/output",
                  "name": "outfeed",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "derived",
                  "deriveExpressionGetter": "{[.]../OEE_Events/mode}",
                  "dataType": "Int4",
                  "sourceTagPath": "[.]../OEE_Events/mode",
                  "name": "mode",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "derived",
                  "deriveExpressionGetter": "forceQuality({source})",
                  "dataType": "Float4",
                  "deriveExpressionSetter": "{value}",
                  "sourceTagPath": "[.]../Jobs/currentJob/productionCounts/input",
                  "name": "infeed",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "sourceTagPath": {
                    "bindType": "parameter",
                    "binding": "{[.]../OEE_Events/state}"
                  },
                  "valueSource": "derived",
                  "deriveExpressionGetter": "{[.]../OEE_Events/state}",
                  "dataType": "Int4",
                  "name": "state",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "{[.]../Jobs/currentJob/productionCounts/reject} + \r\n{[.]../Jobs/currentJob/productionCounts/machineReject}",
                  "dataType": "Int4",
                  "sourceTagPath": "[.]../Jobs/currentJob/productionCounts/reject",
                  "name": "reject",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "derived",
                  "deriveExpressionGetter": "forceQuality({source})",
                  "dataType": "Int4",
                  "sourceTagPath": "[.]../MachineInput/fault",
                  "name": "fault",
                  "tagType": "AtomicTag"
                }
              ]
            },
            {
              "name": "AreaCalculatedValues",
              "tagType": "UdtType",
              "tags": [
                {
                  "valueSource": "expr",
                  "expression": "// If the timestamp is older than 1 day, show null instead of bad data\r\nif(timestampOf(tag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/DT/Top5\u0027)) \u003c dateArithmetic(now(),-1,\"days\"), \r\n        NULL,\r\n        tag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/DT/Top5\u0027)\r\n        )",
                  "dataType": "DataSet",
                  "name": "shiftTop5Downtime",
                  "executionMode": "TagGroupRate",
                  "executionRate": 10000,
                  "tagGroup": "Default",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "tag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/OEE/Infeed\u0027)",
                  "dataType": "Float4",
                  "name": "oeeInfeedCount",
                  "executionMode": "TagGroupRate",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "// If the timestamp is older than 1 day, show null instead of bad data\r\nif(timestampOf(tag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/OEE/OEETable\u0027)) \u003c dateArithmetic(now(),-1,\"days\"), \r\n        NULL,\r\n        tag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/OEE/OEETable\u0027)\r\n        )",
                  "dataType": "DataSet",
                  "name": "oeeTable",
                  "executionMode": "TagGroupRate",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "// If the timestamp is older than 1 day, show null instead of bad data\r\nif(timestampOf(tag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/DT/DowntimeEvents\u0027)) \u003c dateArithmetic(now(),-1,\"days\"), \r\n        NULL,\r\n        tag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/DT/DowntimeEvents\u0027)\r\n        )",
                  "dataType": "DataSet",
                  "name": "shiftDowntimeEvents",
                  "executionMode": "TagGroupRate",
                  "executionRate": 10000,
                  "tagGroup": "MES Calculations",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "// If the timestamp is older than 1 day, show null instead of bad data\r\nif(timestampOf(tag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/DT/Top5Micro\u0027)) \u003c dateArithmetic(now(),-1,\"days\"), \r\n        NULL,\r\n        tag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/DT/Top5Micro\u0027)\r\n        )",
                  "dataType": "DataSet",
                  "name": "shiftTop5DowntimeMicro",
                  "executionMode": "TagGroupRate",
                  "executionRate": 10000,
                  "tagGroup": "Default",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "tag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/OEE/Reject\u0027)",
                  "dataType": "Float4",
                  "name": "oeeRejectCount",
                  "executionMode": "TagGroupRate",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "tag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/OEE/OEE\u0027)",
                  "dataType": "Float4",
                  "name": "oee",
                  "executionMode": "TagGroupRate",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "replace(substring({PathToParentFolder},0, lastIndexOf({PathToParentFolder},\u0027/\u0027)),\u0027/\u0027,\u0027\\\\\u0027)",
                  "dataType": "String",
                  "name": "equipmentPath",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "tag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/OEE/Quality\u0027)",
                  "dataType": "Float4",
                  "name": "oeeQuality",
                  "executionMode": "TagGroupRate",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "tag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/OEE/Availability\u0027)",
                  "dataType": "Float4",
                  "name": "oeeAvailability",
                  "executionMode": "TagGroupRate",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "tag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/OEE/Outfeed\u0027)",
                  "dataType": "Float4",
                  "name": "oeeOutfeedCount",
                  "executionMode": "TagGroupRate",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "name": "time",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "valueSource": "expr",
                      "expression": "{[~]Newell/Maryville/calculatedValues/time/shiftStartTime}",
                      "dataType": "DateTime",
                      "name": "shiftStartTime",
                      "formatString": "yyyy-MM-dd h:mm:ss aa",
                      "executionMode": "TagGroupRate",
                      "enabled": true,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "expr",
                      "expression": "addMinutes(\r\n    addSeconds(\r\n        addMillis({[.]shiftStartTime}, \r\n                    toInt(-1*getMillis({[.]shiftStartTime}))\r\n                ),\r\n                toInt(-1*getSecond({[.]shiftStartTime}))\r\n    ),\r\n    toInt(-1*(getMinute({[.]shiftStartTime})%15))\r\n)",
                      "dataType": "DateTime",
                      "name": "roundedShiftStartTime",
                      "formatString": "yyyy-MM-dd h:mm:ss aa",
                      "executionMode": "TagGroupRate",
                      "enabled": false,
                      "tagType": "AtomicTag"
                    }
                  ]
                },
                {
                  "valueSource": "expr",
                  "expression": "tag(\u0027[MES]\u0027 +{[.]equipmentPath} +\u0027/Analysis/Shift/Current/OEE/Performance\u0027)",
                  "dataType": "Float4",
                  "name": "oeePerformance",
                  "executionMode": "TagGroupRate",
                  "enabled": true,
                  "tagType": "AtomicTag"
                }
              ]
            },
            {
              "name": "MachineInput_OPC FB",
              "parameters": {
                "outfeed": {
                  "dataType": "String",
                  "value": "D2211"
                },
                "server": {
                  "dataType": "String",
                  "value": "Tag1_OPCUA"
                },
                "reject": {
                  "dataType": "String",
                  "value": "D2212"
                },
                "infeed": {
                  "dataType": "String",
                  "value": "D2205"
                },
                "fault": {
                  "dataType": "String",
                  "value": "fault"
                },
                "state": {
                  "dataType": "String",
                  "value": "state"
                },
                "device": {
                  "dataType": "String",
                  "value": ""
                }
              },
              "tagType": "UdtType",
              "tags": [
                {
                  "opcItemPath": {
                    "bindType": "parameter",
                    "binding": "ns\u003d1;s\u003d[{device}]{state}"
                  },
                  "opcServer": {
                    "bindType": "parameter",
                    "binding": "{server}"
                  },
                  "valueSource": "opc",
                  "rawHigh": 10.0,
                  "scaledLow": 10.0,
                  "enabled": true,
                  "tagType": "AtomicTag",
                  "scaledHigh": 20.0,
                  "eventScripts": [
                    {
                      "eventid": "valueChanged",
                      "script": "\tif not initialChange:\n\t\ttagPath \u003d \u0027/\u0027.join(tagPath.split(\u0027/\u0027)[:-2])\n\t\toutfeedCount \u003d system.tag.read(tagPath + \"/Jobs/currentJob/productionCounts/output\").value\n\t\tif outfeedCount is None:\n\t\t\toutfeedCount \u003d 0\n\t\tif currentValue.value \u003e previousValue.value:\n\t\t\toutfeedCount \u003d outfeedCount + (currentValue.value - previousValue.value)\n\t\telse:\n\t\t\toutfeedCount \u003d outfeedCount + currentValue.value\n\t\tsystem.tag.write(tagPath + \"/Jobs/currentJob/productionCounts/output\", outfeedCount)",
                      "enabled": false
                    }
                  ],
                  "scaleMode": "Off",
                  "dataType": "Int4",
                  "historyProvider": "history",
                  "name": "state",
                  "historyEnabled": false
                },
                {
                  "opcItemPath": {
                    "bindType": "parameter",
                    "binding": "ns\u003d1;s\u003d[{device}]{infeed}"
                  },
                  "opcServer": {
                    "bindType": "parameter",
                    "binding": "{server}"
                  },
                  "valueSource": "opc",
                  "eventScripts": [
                    {
                      "eventid": "valueChanged",
                      "script": "\tif not initialChange:\n\t\t\n\t\ttagPath \u003d \u0027/\u0027.join(tagPath.split(\u0027/\u0027)[:-2])\n\t\tinfeedCount \u003d system.tag.read(tagPath +\"/Jobs/currentJob/productionCounts/input\").value\n\t\tinfeedScale \u003d system.tag.read(tagPath +\"/Jobs/currentJob/partCountMultiplier\").value\n\t\tif infeedScale is None:\n\t\t\tinfeedScale \u003d 1\n\t\tif infeedCount is None:\n\t\t\tinfeedCount \u003d 0\n\t\t\n\t\tif currentValue.value \u003e previousValue.value:\n\t\t\tdeltaValue \u003d (currentValue.value - previousValue.value) * infeedScale\n\t\t\tinfeedCount \u003d infeedCount + deltaValue\n\t\telse:\n\t\t\tinfeedCount \u003d infeedCount + (currentValue.value * infeedScale)\n\t\tsystem.tag.write(tagPath +\"/Jobs/currentJob/productionCounts/input\", infeedCount)",
                      "enabled": false
                    }
                  ],
                  "dataType": "Int4",
                  "historyProvider": "history",
                  "name": "infeed",
                  "historyEnabled": false,
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "eventScripts": [
                    {
                      "eventid": "valueChanged",
                      "script": "\tif not initialChange:\n\t\tparams \u003d {\n\t\t\t\u0027tagPath\u0027: tagPath,\n\t\t\t\u0027currentValue\u0027: currentValue\n\t\t}\n\t\tmes.workorder.tag.fb_changeWO(params)\n\t\t\n#\tlogger \u003d system.util.getLogger(\u0027WorkOrder_tag\u0027)\n#\tlogger.info(\u0027Starting value change script\u0027)\n#\ttagPath \u003d \u0027/\u0027.join(tagPath.split(\u0027/\u0027)[:-2])\n#\t\t\n#\tlogger.info(\u0027Ending run\u0027)\n#\t# Ends the actual run\n#\ttry:\n#\t\terpUpdate \u003d mes.schedule.sp.fb_erpUpdate()\n#\t\tif not erpUpdate: logger.error(\u0027Failed to update ERP Schedule\u0027)\n#\t\t\n#\t\trunID \u003d system.tag.read(tagPath + \u0027/jobs/currentJob/runID\u0027).value\n#\t\twoName \u003d currentValue.value\n#\t\tlineID \u003d system.tag.read(tagPath + \u0027/config/LineID\u0027).value\n#\t\tparams \u003d { \u0027runID\u0027: runID, \u0027woName\u0027: woName, \u0027lineID\u0027: lineID }\n#\t\tlogger.info(str(params))\n#\t\tlogger.info(str(tagPath))\n##\t\tif runID !\u003d 0 and previousValue.value !\u003d currentValue.value:\n#\n#\t\tmes.schedule.jobs.endJobFromTag(tagPath, params)\n#\t\tlogger.info(\u0027Run ended.\u0027)\n#\t\tres \u003d mes.schedule.jobs.setNextRunFromTag(tagPath, params)\n#\t\tif res: logger.info(\u0027Run started successfully.\u0027)\n##\t\t\telse: logger.warn(\u0027Could not start run.\u0027)\n#\t\telse: raise Exception(\u0027No Run ID found.\u0027)\n#\texcept Exception as e:\n#\t\tlogger.error(\u0027There was an error ending the run: \u0027 + str(e))\n#\telse:\n#\t\tlogger.info(\u0027The operation is successfully completed\u0027)\n#\tlogger.info(\u0027Run ended.\u0027)"
                    }
                  ],
                  "dataType": "String",
                  "name": "WorkOrder",
                  "tagType": "AtomicTag"
                },
                {
                  "opcItemPath": {
                    "bindType": "parameter",
                    "binding": "ns\u003d1;s\u003d[{device}]{reject}"
                  },
                  "opcServer": {
                    "bindType": "parameter",
                    "binding": "{server}"
                  },
                  "valueSource": "opc",
                  "eventScripts": [
                    {
                      "eventid": "valueChanged",
                      "script": "\tif not initialChange and previousValue.value is not None and currentValue.value is not None:\n\t\t\n\t\ttagPath \u003d \u0027/\u0027.join(tagPath.split(\u0027/\u0027)[:-2])\n\t\trejectCount \u003d system.tag.read(tagPath + \"/Jobs/currentJob/productionCounts/reject\").value\n\t\tif rejectCount is None:\n\t\t\trejectCount \u003d 0\n\t\t\n\t\tif currentValue.value \u003e previousValue.value:\n\t\t\trejectCount \u003d rejectCount + (currentValue.value - previousValue.value)\n\t\telif currentValue.value \u003d\u003d previousValue.value:\n\t\t\tpass\n\t\telse:\n\t\t\trejectCount \u003d rejectCount + currentValue.value\n\t\tsystem.tag.write(tagPath + \"/Jobs/currentJob/productionCounts/reject\", rejectCount)",
                      "enabled": false
                    }
                  ],
                  "historyProvider": "history",
                  "name": "reject",
                  "historyEnabled": false,
                  "tagGroup": "Default",
                  "tagType": "AtomicTag"
                },
                {
                  "opcItemPath": {
                    "bindType": "parameter",
                    "binding": "ns\u003d1;s\u003d[{device}]{outfeed}"
                  },
                  "opcServer": {
                    "bindType": "parameter",
                    "binding": "{server}"
                  },
                  "valueSource": "opc",
                  "eventScripts": [
                    {
                      "eventid": "valueChanged",
                      "script": "\tif not initialChange:\n\t\ttagPath \u003d \u0027/\u0027.join(tagPath.split(\u0027/\u0027)[:-2])\n\t\toutfeedCount \u003d system.tag.read(tagPath + \"/Jobs/currentJob/productionCounts/output\").value\n\t\tif outfeedCount is None:\n\t\t\toutfeedCount \u003d 0\n\t\tif currentValue.value \u003e previousValue.value:\n\t\t\toutfeedCount \u003d outfeedCount + (currentValue.value - previousValue.value)\n\t\telse:\n\t\t\toutfeedCount \u003d outfeedCount + currentValue.value\n\t\tsystem.tag.write(tagPath + \"/Jobs/currentJob/productionCounts/output\", outfeedCount)",
                      "enabled": false
                    }
                  ],
                  "dataType": "Int4",
                  "historyProvider": "history",
                  "name": "outfeed",
                  "historyEnabled": false,
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "opcItemPath": {
                    "bindType": "parameter",
                    "binding": "ns\u003d1;s\u003d[{device}]{TagName}"
                  },
                  "opcServer": {
                    "bindType": "parameter",
                    "binding": "{server}"
                  },
                  "valueSource": "opc",
                  "dataType": "Int4",
                  "historyProvider": "history",
                  "name": "fault",
                  "historyEnabled": false,
                  "tagType": "AtomicTag"
                }
              ]
            },
            {
              "name": "MachineInput_OPC",
              "parameters": {
                "outfeed": {
                  "dataType": "String",
                  "value": "D2211"
                },
                "server": {
                  "dataType": "String",
                  "value": "Tag1_OPCUA"
                },
                "reject": {
                  "dataType": "String",
                  "value": "D2212"
                },
                "infeed": {
                  "dataType": "String",
                  "value": "D2205"
                },
                "fault": {
                  "dataType": "String",
                  "value": "fault"
                },
                "state": {
                  "dataType": "String",
                  "value": "state"
                },
                "device": {
                  "dataType": "String",
                  "value": ""
                }
              },
              "tagType": "UdtType",
              "tags": [
                {
                  "opcItemPath": {
                    "bindType": "parameter",
                    "binding": "ns\u003d1;s\u003d[{device}]{reject}"
                  },
                  "opcServer": {
                    "bindType": "parameter",
                    "binding": "{server}"
                  },
                  "valueSource": "opc",
                  "eventScripts": [
                    {
                      "eventid": "valueChanged",
                      "script": "\tif not initialChange and previousValue.value is not None and currentValue.value is not None:\n\t\t\n\t\ttagPath \u003d \u0027/\u0027.join(tagPath.split(\u0027/\u0027)[:-2])\n\t\trejectCount \u003d system.tag.read(tagPath + \"/Jobs/currentJob/productionCounts/reject\").value\n\t\tif rejectCount is None:\n\t\t\trejectCount \u003d 0\n\t\t\n\t\tif currentValue.value \u003e previousValue.value:\n\t\t\trejectCount \u003d rejectCount + (currentValue.value - previousValue.value)\n\t\telif currentValue.value \u003d\u003d previousValue.value:\n\t\t\tpass\n\t\telse:\n\t\t\trejectCount \u003d rejectCount + currentValue.value\n\t\tsystem.tag.write(tagPath + \"/Jobs/currentJob/productionCounts/reject\", rejectCount)",
                      "enabled": false
                    }
                  ],
                  "historyProvider": "history",
                  "name": "reject",
                  "historyEnabled": false,
                  "tagGroup": "Default",
                  "tagType": "AtomicTag"
                },
                {
                  "opcItemPath": {
                    "bindType": "parameter",
                    "binding": "ns\u003d1;s\u003d[{device}]{state}"
                  },
                  "opcServer": {
                    "bindType": "parameter",
                    "binding": "{server}"
                  },
                  "valueSource": "opc",
                  "rawHigh": 10.0,
                  "scaledLow": 10.0,
                  "enabled": true,
                  "tagType": "AtomicTag",
                  "scaledHigh": 20.0,
                  "eventScripts": [
                    {
                      "eventid": "valueChanged",
                      "script": "\tif not initialChange:\n\t\ttagPath \u003d \u0027/\u0027.join(tagPath.split(\u0027/\u0027)[:-2])\n\t\toutfeedCount \u003d system.tag.read(tagPath + \"/Jobs/currentJob/productionCounts/output\").value\n\t\tif outfeedCount is None:\n\t\t\toutfeedCount \u003d 0\n\t\tif currentValue.value \u003e previousValue.value:\n\t\t\toutfeedCount \u003d outfeedCount + (currentValue.value - previousValue.value)\n\t\telse:\n\t\t\toutfeedCount \u003d outfeedCount + currentValue.value\n\t\tsystem.tag.write(tagPath + \"/Jobs/currentJob/productionCounts/output\", outfeedCount)",
                      "enabled": false
                    }
                  ],
                  "scaleMode": "Off",
                  "dataType": "Int4",
                  "historyProvider": "history",
                  "name": "state",
                  "historyEnabled": false
                },
                {
                  "opcItemPath": {
                    "bindType": "parameter",
                    "binding": "ns\u003d1;s\u003d[{device}]{TagName}"
                  },
                  "opcServer": {
                    "bindType": "parameter",
                    "binding": "{server}"
                  },
                  "valueSource": "opc",
                  "dataType": "Int4",
                  "historyProvider": "history",
                  "name": "fault",
                  "historyEnabled": false,
                  "tagType": "AtomicTag"
                },
                {
                  "opcItemPath": {
                    "bindType": "parameter",
                    "binding": "ns\u003d1;s\u003d[{device}]{outfeed}"
                  },
                  "opcServer": {
                    "bindType": "parameter",
                    "binding": "{server}"
                  },
                  "valueSource": "opc",
                  "eventScripts": [
                    {
                      "eventid": "valueChanged",
                      "script": "\tif not initialChange:\n\t\ttagPath \u003d \u0027/\u0027.join(tagPath.split(\u0027/\u0027)[:-2])\n\t\toutfeedCount \u003d system.tag.read(tagPath + \"/Jobs/currentJob/productionCounts/output\").value\n\t\tif outfeedCount is None:\n\t\t\toutfeedCount \u003d 0\n\t\tif currentValue.value \u003e previousValue.value:\n\t\t\toutfeedCount \u003d outfeedCount + (currentValue.value - previousValue.value)\n\t\telse:\n\t\t\toutfeedCount \u003d outfeedCount + currentValue.value\n\t\tsystem.tag.write(tagPath + \"/Jobs/currentJob/productionCounts/output\", outfeedCount)",
                      "enabled": false
                    }
                  ],
                  "dataType": "Int4",
                  "historyProvider": "history",
                  "name": "outfeed",
                  "historyEnabled": false,
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "opcItemPath": {
                    "bindType": "parameter",
                    "binding": "ns\u003d1;s\u003d[{device}]{infeed}"
                  },
                  "opcServer": {
                    "bindType": "parameter",
                    "binding": "{server}"
                  },
                  "valueSource": "opc",
                  "eventScripts": [
                    {
                      "eventid": "valueChanged",
                      "script": "\tif not initialChange:\n\t\t\n\t\ttagPath \u003d \u0027/\u0027.join(tagPath.split(\u0027/\u0027)[:-2])\n\t\tinfeedCount \u003d system.tag.read(tagPath +\"/Jobs/currentJob/productionCounts/input\").value\n\t\tinfeedScale \u003d system.tag.read(tagPath +\"/Jobs/currentJob/partCountMultiplier\").value\n\t\tif infeedScale is None:\n\t\t\tinfeedScale \u003d 1\n\t\tif infeedCount is None:\n\t\t\tinfeedCount \u003d 0\n\t\t\n\t\tif currentValue.value \u003e previousValue.value:\n\t\t\tdeltaValue \u003d (currentValue.value - previousValue.value) * infeedScale\n\t\t\tinfeedCount \u003d infeedCount + deltaValue\n\t\telse:\n\t\t\tinfeedCount \u003d infeedCount + (currentValue.value * infeedScale)\n\t\tsystem.tag.write(tagPath +\"/Jobs/currentJob/productionCounts/input\", infeedCount)",
                      "enabled": false
                    }
                  ],
                  "dataType": "Int4",
                  "historyProvider": "history",
                  "name": "infeed",
                  "historyEnabled": false,
                  "enabled": true,
                  "tagType": "AtomicTag"
                }
              ]
            },
            {
              "name": "OEE_Events_Line",
              "parameters": {
                "cell": {
                  "dataType": "String"
                }
              },
              "tagType": "UdtType",
              "tags": [
                {
                  "valueSource": "memory",
                  "dataType": "DateTime",
                  "name": "currentTimestampUTCTest",
                  "formatString": "yyyy-MM-dd h:mm:ss aa",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "eventScripts": [
                    {
                      "eventid": "valueChanged",
                      "script": "\tNULL \u003d None\n\t\t\n\tif initialChange: pass #We dont want to record duplicate times...\n\telif currentValue.value \u003d\u003d NULL or previousValue.value \u003d\u003d NULL:pass\n\telse:\n\t\trolloverCheck \u003d currentValue.value - previousValue.value\n\t\t\t\n\t\tif rolloverCheck \u003c 0: countDelta \u003d currentValue.value # rollover event\n\t\telse:\n\t\t\tlineID \u003d system.tag.readBlocking(tagPath.replace(\u0027reject\u0027,\u0027lineID\u0027))[0].value\n\t\t\trunID \u003d system.tag.readBlocking(tagPath.replace(\u0027reject\u0027,\u0027runID\u0027))[0].value\n\t\t\ttagType \u003d 3 #\t1\u003dInfeed, 2\u003dOutfeed, 3\u003dReject/Waste\n\t\t\tcountDelta \u003d rolloverCheck\n\t\t\t#\t\t   countHistoryInsert(timestamp, countTagID, countTypeID, count, runID)\n\t\t\t\n\t\t\t#TIMEZONE CONVERSION\n\t\t\tToUTCOffset \u003d int(abs(system.date.getTimezoneOffset()))\n\t\t\tcurrentTimestampUTC \u003d system.date.addHours(currentValue.timestamp, ToUTCOffset)\n\t\t\t\n\t\t\tif lineID !\u003d NULL: mes.oee.tag.countEventInsert(currentTimestampUTC, lineID, tagType, countDelta, runID)\n\t\t\telse: pass #lineID no value (queryTag)"
                    }
                  ],
                  "expression": "{[.]../Jobs/currentJob/productionCounts/machineReject}",
                  "name": "reject",
                  "executionMode": "TagGroupRate",
                  "tagGroup": "MES_Events_Trigger",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "Boolean",
                  "name": "onBreak",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "eventScripts": [
                    {
                      "eventid": "valueChanged",
                      "script": "\tNULL \u003d None\n\t\t\n\tif initialChange: pass #We dont want to record duplicate times...\n\telif currentValue.value \u003d\u003d NULL or previousValue.value \u003d\u003d NULL:pass\n\telse:\n\t\trolloverCheck \u003d currentValue.value - previousValue.value\n\t\t\t\n\t\tif rolloverCheck \u003c 0: countDelta \u003d currentValue.value # rollover event\n\t\telse:\n\t\t\tlineID \u003d system.tag.readBlocking(tagPath.replace(\u0027outfeed\u0027,\u0027lineID\u0027))[0].value\n\t\t\trunID \u003d system.tag.readBlocking(tagPath.replace(\u0027outfeed\u0027,\u0027runID\u0027))[0].value\n\t\t\ttagType \u003d 2 #\t1\u003dInfeed, 2\u003dOutfeed, 3\u003dReject/Waste\n\t\t\tcountDelta \u003d rolloverCheck\n\t\t\t#\t\t   countHistoryInsert(timestamp, countTagID, countTypeID, count, runID)\n\t\t\t\n\t\t\t\n\t\t\t#TIMEZONE CONVERSION\n\t\t\tToUTCOffset \u003d int(abs(system.date.getTimezoneOffset()))\n\t\t\tcurrentTimestampUTC \u003d system.date.addHours(currentValue.timestamp, ToUTCOffset)\n\t\t\t\n\t\t\t\n\t\t\tif lineID !\u003d NULL: mes.oee.tag.countEventInsert(currentTimestampUTC, lineID, tagType, countDelta, runID)\n\t\t\telse: pass #lineID no value (queryTag)"
                    }
                  ],
                  "expression": "{[.]../Jobs/currentJob/productionCounts/output}",
                  "name": "outfeed",
                  "executionMode": "TagGroupRate",
                  "tagGroup": "MES_Events_Trigger",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "Boolean",
                  "name": "inChangeover",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "DateTime",
                  "name": "currentValueTest",
                  "formatString": "yyyy-MM-dd h:mm:ss aa",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "{[.]../config/modeDS}[{[.]mode},\"IconPath\"]",
                  "dataType": "String",
                  "name": "modeIcon",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "//{[.]../config/stateDS}[{[.]state},\"DisplayColor\"]\r\nlookup({[.]../config/stateDS}, {[.]state}, \"\", \"ReasonCode\", \"DisplayColor\")",
                  "dataType": "String",
                  "name": "stateColor",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "substring({PathToParentFolder},0, lastIndexOf({PathToParentFolder},\u0027/\u0027))",
                  "dataType": "String",
                  "name": "linePath",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "{[.]../config/name}",
                  "dataType": "String",
                  "name": "line",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "DateTime",
                  "name": "previousTimestampUTCTest",
                  "formatString": "yyyy-MM-dd h:mm:ss aa",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "{[.]../config/modeDS}[{[.]mode},\"Description\"]",
                  "dataType": "String",
                  "name": "modeDescription",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "historyTimeDeadband": 10,
                  "historyMaxAge": 1,
                  "expression": "//if({[.]inChangeover},\r\n//\t2,\r\n\t{[.]../scadaControlled/mode}\r\n\t//runscript(\u0027mes.state.getLineStatus\u0027, 0, {TagName}, {[.]line}, {[.]../config/LineConfigDS}, {[.]../config/LineCellsConfigDS})\r\n//\t)",
                  "tagGroup": "Default",
                  "tagType": "AtomicTag",
                  "eventScripts": [
                    {
                      "eventid": "valueChanged",
                      "script": "\tNULL \u003d None\n\t\n\tif initialChange: pass #We dont want to record duplicate times...\n\telif currentValue.value \u003d\u003d NULL or previousValue.value \u003d\u003d NULL:pass\n\telse:\n\t\tif currentValue.value !\u003d previousValue.value:\n\t\t\tlineTag \u003d tagPath.replace(\u0027mode\u0027,\u0027lineID\u0027)\n\t\t\tvals \u003d system.tag.readBlocking([lineTag])\n\t\t\tcell \u003d None\n\t\t\tline \u003d vals[0].value\n\t\t\t\n\t\t\t#TIMEZONE CONVERSION\n\t\t\tToUTCOffset \u003d int(abs(system.date.getTimezoneOffset()))\n\t\t\tpreviousTimestampUTC \u003d system.date.addHours(previousValue.timestamp, ToUTCOffset)\n\t\t\tcurrentTimestampUTC \u003d system.date.addHours(currentValue.timestamp, ToUTCOffset)\n\t\t\t\n\t\t\t\n\t\t\tmes.oee.tag.modeCurrent(line, currentTimestampUTC, currentValue.value)\n\t\t\tmes.oee.tag.modeEventInsert(line, cell, previousTimestampUTC, currentTimestampUTC, previousValue.value)\n\t\telse:pass"
                    }
                  ],
                  "historyProvider": "IgnitionHistorian",
                  "name": "mode",
                  "historyEnabled": true,
                  "historyTimeDeadbandUnits": "MIN",
                  "executionMode": "TagGroupRate"
                },
                {
                  "valueSource": "memory",
                  "dataType": "Boolean",
                  "name": "onLunch",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "{[.]../config/modeDS}[{[.]mode},\"DisplayColor\"]",
                  "dataType": "String",
                  "name": "modeColor",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "toStr(minutesBetween(timestampOf({[.]mode}),now()))\r\n+ \u0027 mins. \u0027 \r\n+ toStr(\r\n\tround(\r\n\t\tabs( //remove calculated minutes from seconds between (get decimal remainder)\r\n\t\t\tround(secondsBetween(timestampOf({[.]mode}),now())/60) - secondsBetween(timestampOf({[.]mode}),now())/60\r\n\t\t\t) *60 //Convert back to minutes\r\n\t\t)\r\n\t) \r\n+ \u0027 secs.\u0027",
                  "dataType": "String",
                  "name": "modeDuration",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "{[.]../config/site}",
                  "dataType": "String",
                  "name": "site",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "//runscript(\u0027mes.config.sp.getLineID\u0027, 0, {[.]line})\n{[.]../config/LineID}",
                  "name": "lineID",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "lookup({[.]../config/stateDS}, {[.]state}, \"\", \"ReasonCode\", \"Description\")",
                  "dataType": "String",
                  "name": "stateDescription",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "historyTimeDeadband": 10,
                  "historyMaxAge": 1,
                  "expression": "//if line is on break or lunch, override calculation to break or lunch\r\nif({[.]onBreak} || {[.]onLunch},\r\n\t// Stuff happens here \r\n\tif({[.]onBreak},\r\n\t\t99001, //lunch state\r\n\t\t99002  //break state\r\n\t)\r\n\t,\r\n\t// not on break or lunch\r\n\tif({[.]../config/hasCells},\r\n\t\t// hasCells\r\n\t\trunscript(\u0027mes.oee.state.getLineState\u0027, \r\n\t\t\t0, \r\n\t\t\t{TagName}, \r\n\t\t\t{[.]line}, \r\n\t\t\t{[.]../config/LineConfigDS}, \r\n\t\t\t{[.]../config/LineCellsConfigDS},\r\n\t\t\t{[.]../machineInput/state})\r\n\t,\r\n\t\t//Does Not Have Cells\r\n\t\t{[.]../machineInput/state} \r\n\t)\r\n)",
                  "tagGroup": "Default",
                  "tagType": "AtomicTag",
                  "eventScripts": [
                    {
                      "eventid": "valueChanged",
                      "script": "\tNULL \u003d None\n\t\t\n\tif initialChange: pass #We dont want to record duplicate times...\n\telif currentValue.value \u003d\u003d NULL or previousValue.value \u003d\u003d NULL:pass\n\telse:\n\t\tif currentValue.value !\u003d previousValue.value:\n\t\t\tlineTag \u003d tagPath.replace(\u0027state\u0027,\u0027lineID\u0027)\n\t\t\tvals \u003d system.tag.readBlocking([lineTag])\n\t\t\tcell \u003d None\n\t\t\tline \u003d vals[0].value\n\t\t\t\n\t\t\t#TIMEZONE CONVERSION\n\t\t\tToUTCOffset \u003d int(abs(system.date.getTimezoneOffset()))\n\t\t\tpreviousTimestampUTC \u003d system.date.addHours(previousValue.timestamp, ToUTCOffset)\n\t\t\tcurrentTimestampUTC \u003d system.date.addHours(currentValue.timestamp, ToUTCOffset)\n\t\t\t\n\t\t\t# Inductive Ticket\n\t\t\tpath \u003d [\"[.]currentValueTest\", \"[.]previousTimestampUTCTest\", \"[.]currentTimestampUTCTest\"]\n\t\t\tvalue \u003d [currentValue.timestamp, previousTimestampUTC, currentTimestampUTC]\n\t\t\tsystem.tag.writeBlocking(path, value)\n\t\t\t# Inductive Ticket\n\t\n\t\t\tmes.oee.tag.stateCurrent(line, cell, currentTimestampUTC, currentValue.value)\n\t\t\t# We should NOT be inserting with flopped timestamps\n\t\t\tif previousValue.timestamp \u003e currentValue.timestamp: pass #mes.oee.tag.stateEventInsert(line, cell, currentTimestampUTC, previousTimestampUTC, previousValue.value)\n\t\t\telse: mes.oee.tag.stateEventInsert(line, cell, previousTimestampUTC, currentTimestampUTC, previousValue.value)\n\t\t\t\t\n\t\telse:pass"
                    }
                  ],
                  "historyProvider": "IgnitionHistorian",
                  "name": "state",
                  "historyEnabled": true,
                  "historyTimeDeadbandUnits": "MIN",
                  "executionMode": "TagGroupRate"
                },
                {
                  "valueSource": "expr",
                  "eventScripts": [
                    {
                      "eventid": "valueChanged",
                      "script": "\tNULL \u003d None\n\t\n\tif initialChange: pass #We dont want to record duplicate times...\n\telif currentValue.value \u003d\u003d NULL or previousValue.value \u003d\u003d NULL:pass\n\telse:\n\t\trolloverCheck \u003d currentValue.value - previousValue.value\n\t\t\n\t\tif rolloverCheck \u003c 0: countDelta \u003d currentValue.value # rollover event\n\t\telse:\n\n\t\t\tlineID \u003d system.tag.readBlocking(tagPath.replace(\u0027infeed\u0027,\u0027lineID\u0027))[0].value\n\t\t\trunID \u003d system.tag.readBlocking(tagPath.replace(\u0027infeed\u0027,\u0027runID\u0027))[0].value\n\t\t\ttagType \u003d 1 #\t1\u003dInfeed, 2\u003dOutfeed, 3\u003dReject/Waste\n\t\t\tcountDelta \u003d rolloverCheck\n\t\t\t#\t\t   countHistoryInsert(timestamp, countTagID, countTypeID, count, runID)\n\t\t\t\n\t\t\t\n\t\t\t#TIMEZONE CONVERSION\n\t\t\tToUTCOffset \u003d int(abs(system.date.getTimezoneOffset()))\n\t\t\tcurrentTimestampUTC \u003d system.date.addHours(currentValue.timestamp, ToUTCOffset)\n\t\t\t\n\t\t\tif lineID !\u003d NULL: mes.oee.tag.countEventInsert(currentTimestampUTC, lineID, tagType, countDelta, runID)\n\t\t\telse: pass #lineID no value (queryTag)\n"
                    }
                  ],
                  "expression": "{[.]../Jobs/currentJob/productionCounts/input}",
                  "name": "infeed",
                  "executionMode": "TagGroupRate",
                  "tagGroup": "MES_Events_Trigger",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "{[.]../config/area}",
                  "dataType": "String",
                  "name": "area",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "toStr(minutesBetween(timestampOf({[.]state}),now()))\r\n+ \u0027 mins. \u0027 \r\n+ toStr(\r\n\tround(\r\n\t\tabs( //remove calculated minutes from seconds between (get decimal remainder)\r\n\t\t\tround(secondsBetween(timestampOf({[.]state}),now())/60) - secondsBetween(timestampOf({[.]state}),now())/60\r\n\t\t\t) *60 //Convert back to minutes\r\n\t\t)\r\n\t) \r\n+ \u0027 secs.\u0027",
                  "dataType": "String",
                  "name": "stateDuration",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "expression": "lookup({[.]../config/stateDS}, {[.]state}, \"\", \"ReasonCode\", \"IconPath\")",
                  "dataType": "String",
                  "name": "stateIcon",
                  "tagType": "AtomicTag",
                  "enabled": true
                },
                {
                  "valueSource": "expr",
                  "expression": "if(isNull({[.]../jobs/currentJob/runId}) || {[.]../jobs/currentJob/runId}\u003d0,\r\n\t0,\r\n\t{[.]../jobs/currentJob/runId}\r\n\t)",
                  "name": "runID",
                  "tagType": "AtomicTag"
                }
              ]
            },
            {
              "name": "CalculatedLineRate",
              "tooltip": "Units Per Minute",
              "parameters": {
                "counter": {
                  "dataType": "String",
                  "value": "infeed"
                }
              },
              "tagType": "UdtType",
              "tags": [
                {
                  "valueSource": "memory",
                  "name": "oldValue",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "eventScripts": [
                    {
                      "eventid": "valueChanged",
                      "script": "\tvalueTimestamp \u003d system.tag.readBlocking([\u0027[.]counter\u0027])[0].timestamp\n\tnow \u003d system.date.now()\n\ttimeDiff \u003d system.date.secondsBetween(valueTimestamp, now)\n\tif timeDiff \u003e\u003d 30:\n\t\tsystem.tag.writeBlocking([\u0027[.]lineRate\u0027],[0])"
                    }
                  ],
                  "expression": "getSecond(now(0)) % 30 ",
                  "dataType": "Boolean",
                  "name": "watchdog",
                  "executionMode": "TagGroupRate",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "Float4",
                  "name": "lineRate",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "eventScripts": [
                    {
                      "eventid": "valueChanged",
                      "script": "\tif currentValue.value !\u003d previousValue.value:\n\t\tpartMultiplier \u003d system.tag.readBlocking([\u0027[.]partMultiplier\u0027])[0].value\n\t\tif partMultiplier is None or partMultiplier \u003d\u003d 0:\n\t\t\tpartMultiplier \u003d 1\n\t\tnewValue \u003d currentValue.value * partMultiplier\n#\t\tprevValue \u003d previousValue.value * partMultiplier\n\t\t#verify value is larger than previous\n\t\ttagPaths \u003d [\u0027[.]oldValue\u0027,\n\t\t\t\t\t\u0027[.]oldTimestamp\u0027]\n\t\tvalues \u003d []\t\t\t\n\t\toldTag \u003d system.tag.readBlocking([\u0027[.]oldValue\u0027, \u0027[.]oldTimestamp\u0027])\n\t\tvalues.append(newValue)\n\t\tvalues.append(currentValue.timestamp)\n\t\toldValue \u003d oldTag[0].value\n\t\t\n\t\tif oldValue is not None and newValue \u003e oldValue:\n\t\t\tpieces \u003d newValue - oldValue\n\t\t\ttime \u003d system.date.millisBetween(oldTag[1].value, currentValue.timestamp)\n\t\t\t\n\t\t\t\n\t\t\tif float(time) !\u003d 0.0:\n\t\t\t\tpcsSec \u003d float(pieces) / float(time)\n\t\t\t\tpcsMin \u003d pcsSec * 60000.0\n\t\t\telse:\n\t\t\t\tpcsMin \u003d 0\n\t\t\ttagPaths.append(\u0027[.]lineRate\u0027) \n\t\t\tvalues.append(pcsMin)\n\t\tsystem.tag.writeBlocking(tagPaths, values)"
                    }
                  ],
                  "expression": "tag(\u0027[.]../../MachineInput/\u0027 + {counter})",
                  "sourceTagPath": "[.]../../GPA/MachineInput/infeed",
                  "name": "counter",
                  "executionMode": "TagGroupRate",
                  "tagGroup": "Direct Mid",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "reference",
                  "sourceTagPath": "[.]../../Jobs/currentJob/partCountMultiplier",
                  "name": "partMultiplier",
                  "enabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "DateTime",
                  "name": "oldTimestamp",
                  "formatString": "yyyy-MM-dd h:mm:ss aa",
                  "enabled": true,
                  "tagType": "AtomicTag"
                }
              ]
            }
          ]
        },
        {
          "name": "Trace",
          "tagType": "Folder",
          "tags": [
            {
              "name": "InspectionStation",
              "tagType": "UdtType"
            },
            {
              "name": "TrackAndTraceTriggers",
              "parameters": {
                "FolderPath": {
                  "dataType": "String"
                },
                "CellID": {
                  "dataType": "Integer"
                }
              },
              "tagType": "UdtType",
              "tags": [
                {
                  "valueSource": "expr",
                  "name": "PartEnteredMonitor",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "String",
                  "name": "PresentPartLabel",
                  "value": "",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "eventScripts": [
                    {
                      "eventid": "valueChanged",
                      "script": "\ttry:\n\t\tif currentValue.value and not initialChange:\n\t\t\t# Set up some initial values\n\t\t\tfrom datetime import datetime\n\t\t\tPartLabel \u003d system.tag.readBlocking([\u0027[.]PresentPartLabel\u0027])[0].value\n\t\t\tNow       \u003d datetime.now()\n\t\t\n\t\t\t# Check if we have a part label available already\n\t\t\tif PartLabel is not None and len(PartLabel) \u003e 0:\n\t\t\t\t# If so, make a new part history record commemorating this part\u0027s arrival here\n\t\t\t\tmes.trace.sp.insertPartHistoryRecord(2, Label \u003d PartLabel, TimeScanned \u003d Now, Notes \u003d \u0027Added from UDT TrackAndTraceTriggers/PartEnteredTrigger\u0027)\n\t\t\telse:\n\t\t\t\t# If not, we must have a new (\u003d untracked) part. Create a part record for it\n\t\t\t\t#tagPath       \u003d \u0027/\u0027.join(tagPath.split(\u0027/\u0027)[:-2])\n\t\t\t\tFolderPath    \u003d tag[\u0027parameters\u0027][\u0027FolderPath\u0027]\n\t\t\t\tProductCodeID \u003d system.tag.readBlocking([FolderPath + \u0027/jobs/currentJob/productCodeID\u0027])[0].value\n\t\t\t\tCellID        \u003d tag[\u0027parameters\u0027][\u0027CellID\u0027]\n\t\t\t\tLabel         \u003d system.tag.readBlocking([FolderPath + \u0027/jobs/currentJob/productCode\u0027])[0].value + \u0027-\u0027 + Now.strftime(\u0027%Y%m%d%H%M%S\u0027)\n\t\t\t\t\n\t\t\t\tNewPart \u003d mes.trace.sp.insertAndGetNewPart(ProductCodeID, CellID, Label \u003d Label)\n\t\t\t\t\n\t\t\t\tsystem.tag.writeBlocking([\u0027[.]PresentPartLabel\u0027], [NewPart.getValueAt(0, \u0027Label\u0027)])\n\texcept Exception as e:\n\t\tlogger \u003d system.util.getLogger(\u0027TraceEntered\u0027)\n\t\tlogger.error(str(e))\n\tfinally:\n\t\t# Set the tag low\n\t\tsystem.tag.writeBlocking([\u0027[.]PartEnteredTrigger\u0027], [False])"
                    }
                  ],
                  "dataType": "Boolean",
                  "name": "PartEnteredTrigger",
                  "value": false,
                  "tagType": "AtomicTag"
                },
                {
                  "name": "CellDetails",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "valueSource": "memory",
                      "name": "NextCellID",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "Boolean",
                      "name": "IsFinalCell",
                      "value": false,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "PrevCellID",
                      "tagType": "AtomicTag"
                    }
                  ]
                },
                {
                  "valueSource": "memory",
                  "eventScripts": [
                    {
                      "eventid": "valueChanged",
                      "script": "\ttry:\n\t\tif currentValue.value and not initialChange:\n\t\t\t# Set up some initial values\n\t\t\tfrom datetime import datetime\n\t\t\t\n\t\t\tPartLabel \u003d system.tag.readBlocking([\u0027[.]PresentPartLabel\u0027])[0].value\n\t\t\tNow       \u003d datetime.now()\n\t\t\n\t\t\t# Check if we have a part label available already\n\t\t\tif PartLabel is not None and len(PartLabel) \u003e 0:\n\t\t\t\t# If so, make a new part history record commemorating this part\u0027s arrival here\n\t\t\t\tmes.trace.sp.insertPartHistoryRecord(3, Label \u003d PartLabel, TimeScanned \u003d Now, Notes \u003d \u0027Added from UDT TrackAndTraceTriggers/PartExitedTrigger\u0027)\n\t\t\t\t\n\t\t\t\tif system.tag.readBlocking([\u0027[.]PresentPartLabel\u0027])[0].value:\n\t\t\t\t\tPartID \u003d mes.trace.sp.getParts(Label \u003d PartLabel, LabelExactMatch \u003d True).getValueAt(0, \u0027ID\u0027)\n\t\t\t\t\tCellID \u003d tag[\u0027parameters\u0027][\u0027CellID\u0027]\n\t\t\t\t\t\n\t\t\t\t\tmes.trace.sp.updateCompletePart(PartID, CellID, TimeCompleted \u003d Now)\n\t\t\t\t\t\n\t\t\t\t\tsystem.tag.writeBlocking([\u0027[.]PresentPartLabel\u0027], [\u0027\u0027])\n\t\t\telse:\n\t\t\t\t# If not, do nothing\n\t\t\t\tpass\n\texcept Exception as e:\n\t\tlogger \u003d system.util.getLogger(\u0027TraceExited\u0027)\n\t\tlogger.error(str(e))\n\tfinally:\n\t\t# Set the tag low\n\t\tsystem.tag.writeBlocking([\u0027[.]PartExitedTrigger\u0027], [False])"
                    }
                  ],
                  "dataType": "Boolean",
                  "name": "PartExitedTrigger",
                  "value": false,
                  "tagType": "AtomicTag"
                }
              ]
            },
            {
              "name": "StorageCell",
              "tagType": "UdtType"
            },
            {
              "name": "RawStorage",
              "tagType": "UdtType"
            },
            {
              "name": "FinishedStorage",
              "tagType": "UdtType"
            },
            {
              "name": "TrackAndTraceEvents",
              "parameters": {
                "EquipmentPath": {
                  "dataType": "String"
                }
              },
              "tagType": "UdtType",
              "tags": [
                {
                  "valueSource": "expr",
                  "dataType": "Boolean",
                  "name": "PartsCombined",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "Boolean",
                  "name": "PartRemovedForRework",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "reference",
                  "dataType": "Boolean",
                  "name": "PartExited",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "memory",
                  "dataType": "Boolean",
                  "name": "PartScrapped",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "reference",
                  "eventScripts": [
                    {
                      "eventid": "valueChanged",
                      "script": "\tProductCodeID \u003d None\n\tCellID        \u003d None\n\t\n\tmes.trace.sp.insertAndGetNewPart(ProductCodeID, CellID)"
                    }
                  ],
                  "dataType": "Boolean",
                  "sourceTagPath": "",
                  "name": "PartEntered",
                  "tagType": "AtomicTag"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}